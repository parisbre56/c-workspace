
;; Function MPI::Datatype::~Datatype() (_ZN3MPI8DatatypeD2Ev, funcdef_no=2163, decl_uid=48598, symbol_order=577)

MPI::Datatype::~Datatype() (struct Datatype * const this)
{
  <bb 2>:
  return;

}



;; Function MPI::Status::~Status() (_ZN3MPI6StatusD2Ev, funcdef_no=2199, decl_uid=48864, symbol_order=613)

MPI::Status::~Status() (struct Status * const this)
{
  <bb 2>:
  return;

}



;; Function MPI::Request::~Request() (_ZN3MPI7RequestD2Ev, funcdef_no=2209, decl_uid=49043, symbol_order=623)

MPI::Request::~Request() (struct Request * const this)
{
  <bb 2>:
  return;

}



;; Function MPI::Prequest::~Prequest() (_ZN3MPI8PrequestD2Ev, funcdef_no=2233, decl_uid=49123, symbol_order=647)

MPI::Prequest::~Prequest() (struct Prequest * const this)
{
  <bb 2>:
  return;

}



;; Function MPI::Grequest::~Grequest() (_ZN3MPI8GrequestD2Ev, funcdef_no=2248, decl_uid=49214, symbol_order=662)

MPI::Grequest::~Grequest() (struct Grequest * const this)
{
  <bb 2>:
  return;

}



;; Function MPI::Group::~Group() (_ZN3MPI5GroupD2Ev, funcdef_no=2263, decl_uid=49335, symbol_order=677)

MPI::Group::~Group() (struct Group * const this)
{
  <bb 2>:
  return;

}



;; Function MPI::Comm_Null::~Comm_Null() (_ZN3MPI9Comm_NullD2Ev, funcdef_no=2282, decl_uid=49413, symbol_order=696)

MPI::Comm_Null::~Comm_Null() (struct Comm_Null * const this)
{
  <bb 2>:
  return;

}



;; Function MPI::Win::~Win() (_ZN3MPI3WinD2Ev, funcdef_no=2304, decl_uid=50098, symbol_order=718)

MPI::Win::~Win() (struct Win * const this)
{
  <bb 2>:
  return;

}



;; Function MPI::Errhandler::~Errhandler() (_ZN3MPI10ErrhandlerD2Ev, funcdef_no=2330, decl_uid=50616, symbol_order=744)

MPI::Errhandler::~Errhandler() (struct Errhandler * const this)
{
  <bb 2>:
  return;

}



;; Function MPI::Intracomm::~Intracomm() (_ZN3MPI9IntracommD2Ev, funcdef_no=2362, decl_uid=50771, symbol_order=775)

MPI::Intracomm::~Intracomm() (struct Intracomm * const this)
{
  <bb 2>:
  return;

}



;; Function MPI::Info::~Info() (_ZN3MPI4InfoD2Ev, funcdef_no=2413, decl_uid=51198, symbol_order=827)

MPI::Info::~Info() (struct Info * const this)
{
  <bb 2>:
  return;

}



;; Function MPI::Op::~Op() (_ZN3MPI2OpD2Ev, funcdef_no=2678, decl_uid=48771, symbol_order=1092)

MPI::Op::~Op() (struct Op * const this)
{
  <bb 2>:
  return;

}



;; Function virtual int MPI::Status::Get_source() const (_ZNK3MPI6Status10Get_sourceEv, funcdef_no=2694, decl_uid=48807, symbol_order=1108)

virtual int MPI::Status::Get_source() const (const struct Status * const this)
{
  int source;

  <bb 2>:
  source_3 = this_2(D)->mpi_status.MPI_SOURCE;
  return source_3;

}



;; Function virtual void MPI::Status::Set_source(int) (_ZN3MPI6Status10Set_sourceEi, funcdef_no=2695, decl_uid=48810, symbol_order=1109)

virtual void MPI::Status::Set_source(int) (struct Status * const this, int source)
{
  <bb 2>:
  this_2(D)->mpi_status.MPI_SOURCE = source_3(D);
  return;

}



;; Function virtual int MPI::Status::Get_tag() const (_ZNK3MPI6Status7Get_tagEv, funcdef_no=2696, decl_uid=48812, symbol_order=1110)

virtual int MPI::Status::Get_tag() const (const struct Status * const this)
{
  int tag;

  <bb 2>:
  tag_3 = this_2(D)->mpi_status.MPI_TAG;
  return tag_3;

}



;; Function virtual void MPI::Status::Set_tag(int) (_ZN3MPI6Status7Set_tagEi, funcdef_no=2697, decl_uid=48815, symbol_order=1111)

virtual void MPI::Status::Set_tag(int) (struct Status * const this, int tag)
{
  <bb 2>:
  this_2(D)->mpi_status.MPI_TAG = tag_3(D);
  return;

}



;; Function virtual int MPI::Status::Get_error() const (_ZNK3MPI6Status9Get_errorEv, funcdef_no=2698, decl_uid=48817, symbol_order=1112)

virtual int MPI::Status::Get_error() const (const struct Status * const this)
{
  int error;

  <bb 2>:
  error_3 = this_2(D)->mpi_status.MPI_ERROR;
  return error_3;

}



;; Function virtual void MPI::Status::Set_error(int) (_ZN3MPI6Status9Set_errorEi, funcdef_no=2699, decl_uid=48820, symbol_order=1113)

virtual void MPI::Status::Set_error(int) (struct Status * const this, int error)
{
  <bb 2>:
  this_2(D)->mpi_status.MPI_ERROR = error_3(D);
  return;

}



;; Function MPI::Intercomm::~Intercomm() (_ZN3MPI9IntercommD2Ev, funcdef_no=2969, decl_uid=51081, symbol_order=1406)

MPI::Intercomm::~Intercomm() (struct Intercomm * const this)
{
  <bb 2>:
  return;

}



;; Function MPI::Graphcomm::~Graphcomm() (_ZN3MPI9GraphcommD2Ev, funcdef_no=2973, decl_uid=50992, symbol_order=1411)

MPI::Graphcomm::~Graphcomm() (struct Graphcomm * const this)
{
  <bb 2>:
  return;

}



;; Function MPI::Cartcomm::~Cartcomm() (_ZN3MPI8CartcommD2Ev, funcdef_no=2977, decl_uid=50885, symbol_order=1416)

MPI::Cartcomm::~Cartcomm() (struct Cartcomm * const this)
{
  <bb 2>:
  return;

}



;; Function virtual void MPI::Request::Wait() (_ZN3MPI7Request4WaitEv, funcdef_no=2514, decl_uid=48953, symbol_order=928)

virtual void MPI::Request::Wait() (struct Request * const this)
{
  struct ompi_request_t * * _2;

  <bb 2>:
  _2 = &this_1(D)->mpi_request;
  MPI_Wait (_2, 0B); [tail call]
  return;

}



;; Function virtual void MPI::Request::Wait(MPI::Status&) (_ZN3MPI7Request4WaitERNS_6StatusE, funcdef_no=2513, decl_uid=48951, symbol_order=927)

virtual void MPI::Request::Wait(MPI::Status&) (struct Request * const this, struct Status & status)
{
  struct MPI_Status * _2;
  struct ompi_request_t * * _4;

  <bb 2>:
  _2 = &status_1(D)->mpi_status;
  _4 = &this_3(D)->mpi_request;
  MPI_Wait (_4, _2); [tail call]
  return;

}



;; Function virtual int MPI::Comm::Get_topology() const (_ZNK3MPI4Comm12Get_topologyEv, funcdef_no=2592, decl_uid=49785, symbol_order=1006)

virtual int MPI::Comm::Get_topology() const (const struct Comm * const this)
{
  int status;
  struct ompi_communicator_t * _3;
  int _5;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  MPI_Topo_test (_3, &status);
  _5 = status;
  status ={v} {CLOBBER};
  return _5;

}



;; Function virtual MPI::Comm_Null::~Comm_Null() (_ZN3MPI9Comm_NullD0Ev, funcdef_no=2284, decl_uid=49407, symbol_order=698)

virtual MPI::Comm_Null::~Comm_Null() (struct Comm_Null * const this)
{
  <bb 2>:
  operator delete (this_2(D)); [tail call]
  return;

}



;; Function virtual MPI::Request::~Request() (_ZN3MPI7RequestD0Ev, funcdef_no=2211, decl_uid=49037, symbol_order=625)

virtual MPI::Request::~Request() (struct Request * const this)
{
  <bb 2>:
  operator delete (this_2(D)); [tail call]
  return;

}



;; Function virtual MPI::Win::~Win() (_ZN3MPI3WinD0Ev, funcdef_no=2306, decl_uid=50092, symbol_order=720)

virtual MPI::Win::~Win() (struct Win * const this)
{
  <bb 2>:
  operator delete (this_2(D)); [tail call]
  return;

}



;; Function virtual MPI::Info::~Info() (_ZN3MPI4InfoD0Ev, funcdef_no=2415, decl_uid=51192, symbol_order=829)

virtual MPI::Info::~Info() (struct Info * const this)
{
  <bb 2>:
  operator delete (this_2(D)); [tail call]
  return;

}



;; Function virtual MPI::Status::~Status() (_ZN3MPI6StatusD0Ev, funcdef_no=2201, decl_uid=48858, symbol_order=615)

virtual MPI::Status::~Status() (struct Status * const this)
{
  <bb 2>:
  operator delete (this_2(D)); [tail call]
  return;

}



;; Function virtual MPI::Errhandler::~Errhandler() (_ZN3MPI10ErrhandlerD0Ev, funcdef_no=2332, decl_uid=50610, symbol_order=746)

virtual MPI::Errhandler::~Errhandler() (struct Errhandler * const this)
{
  <bb 2>:
  operator delete (this_2(D)); [tail call]
  return;

}



;; Function virtual MPI::Op::~Op() (_ZN3MPI2OpD0Ev, funcdef_no=2680, decl_uid=48765, symbol_order=1094)

virtual MPI::Op::~Op() (struct Op * const this)
{
  <bb 2>:
  operator delete (this_2(D)); [tail call]
  return;

}



;; Function virtual MPI::Group::~Group() (_ZN3MPI5GroupD0Ev, funcdef_no=2265, decl_uid=49329, symbol_order=679)

virtual MPI::Group::~Group() (struct Group * const this)
{
  <bb 2>:
  operator delete (this_2(D)); [tail call]
  return;

}



;; Function virtual MPI::Grequest::~Grequest() (_ZN3MPI8GrequestD0Ev, funcdef_no=2250, decl_uid=49208, symbol_order=664)

virtual MPI::Grequest::~Grequest() (struct Grequest * const this)
{
  <bb 2>:
  operator delete (this_2(D)); [tail call]
  return;

}



;; Function virtual MPI::Prequest::~Prequest() (_ZN3MPI8PrequestD0Ev, funcdef_no=2235, decl_uid=49117, symbol_order=649)

virtual MPI::Prequest::~Prequest() (struct Prequest * const this)
{
  <bb 2>:
  operator delete (this_2(D)); [tail call]
  return;

}



;; Function virtual MPI::Datatype::~Datatype() (_ZN3MPI8DatatypeD0Ev, funcdef_no=2165, decl_uid=48592, symbol_order=579)

virtual MPI::Datatype::~Datatype() (struct Datatype * const this)
{
  <bb 2>:
  operator delete (this_2(D)); [tail call]
  return;

}



;; Function virtual MPI::Intracomm::~Intracomm() (_ZN3MPI9IntracommD0Ev, funcdef_no=2364, decl_uid=50765, symbol_order=777)

virtual MPI::Intracomm::~Intracomm() (struct Intracomm * const this)
{
  <bb 2>:
  operator delete (this_2(D)); [tail call]
  return;

}



;; Function virtual MPI::Cartcomm::~Cartcomm() (_ZN3MPI8CartcommD0Ev, funcdef_no=2979, decl_uid=50879, symbol_order=1418)

virtual MPI::Cartcomm::~Cartcomm() (struct Cartcomm * const this)
{
  <bb 2>:
  operator delete (this_2(D)); [tail call]
  return;

}



;; Function virtual MPI::Graphcomm::~Graphcomm() (_ZN3MPI9GraphcommD0Ev, funcdef_no=2975, decl_uid=50986, symbol_order=1413)

virtual MPI::Graphcomm::~Graphcomm() (struct Graphcomm * const this)
{
  <bb 2>:
  operator delete (this_2(D)); [tail call]
  return;

}



;; Function virtual MPI::Intercomm::~Intercomm() (_ZN3MPI9IntercommD0Ev, funcdef_no=2971, decl_uid=51075, symbol_order=1408)

virtual MPI::Intercomm::~Intercomm() (struct Intercomm * const this)
{
  <bb 2>:
  operator delete (this_2(D)); [tail call]
  return;

}



;; Function virtual int MPI::Comm::Get_size() const (_ZNK3MPI4Comm8Get_sizeEv, funcdef_no=2568, decl_uid=49647, symbol_order=982)

virtual int MPI::Comm::Get_size() const (const struct Comm * const this)
{
  int size;
  struct ompi_communicator_t * _3;
  int _5;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  MPI_Comm_size (_3, &size);
  _5 = size;
  size ={v} {CLOBBER};
  return _5;

}



;; Function virtual int MPI::Comm::Get_rank() const (_ZNK3MPI4Comm8Get_rankEv, funcdef_no=2569, decl_uid=49649, symbol_order=983)

virtual int MPI::Comm::Get_rank() const (const struct Comm * const this)
{
  int rank;
  struct ompi_communicator_t * _3;
  int _5;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  MPI_Comm_rank (_3, &rank);
  _5 = rank;
  rank ={v} {CLOBBER};
  return _5;

}



;; Function virtual void MPI::Cartcomm::Shift(int, int, int&, int&) const (_ZNK3MPI8Cartcomm5ShiftEiiRiS1_, funcdef_no=2635, decl_uid=50866, symbol_order=1049)

virtual void MPI::Cartcomm::Shift(int, int, int&, int&) const (const struct Cartcomm * const this, int direction, int disp, int & rank_source, int & rank_dest)
{
  struct ompi_communicator_t * _3;

  <bb 2>:
  _3 = this_2(D)->D.50910.D.50796.D.49897.mpi_comm;
  MPI_Cart_shift (_3, direction_4(D), disp_5(D), rank_source_6(D), rank_dest_7(D)); [tail call]
  return;

}



;; Function virtual void MPI::Comm::Recv(void*, int, const MPI::Datatype&, int, int) const (_ZNK3MPI4Comm4RecvEPviRKNS_8DatatypeEii, funcdef_no=2542, decl_uid=49490, symbol_order=956)

virtual void MPI::Comm::Recv(void*, int, const MPI::Datatype&, int, int) const (const struct Comm * const this, void * buf, int count, const struct Datatype & datatype, int source, int tag)
{
  struct ompi_communicator_t * _3;
  struct ompi_datatype_t * const _5;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  _5 = MEM[(struct ompi_datatype_t * *)datatype_4(D) + 8B];
  MPI_Recv (buf_6(D), count_7(D), _5, source_8(D), tag_9(D), _3, 0B); [tail call]
  return;

}



;; Function virtual void MPI::Comm::Recv(void*, int, const MPI::Datatype&, int, int, MPI::Status&) const (_ZNK3MPI4Comm4RecvEPviRKNS_8DatatypeEiiRNS_6StatusE, funcdef_no=2541, decl_uid=49483, symbol_order=955)

virtual void MPI::Comm::Recv(void*, int, const MPI::Datatype&, int, int, MPI::Status&) const (const struct Comm * const this, void * buf, int count, const struct Datatype & datatype, int source, int tag, struct Status & status)
{
  struct MPI_Status * _2;
  struct ompi_communicator_t * _5;
  struct ompi_datatype_t * const _7;

  <bb 2>:
  _2 = &status_1(D)->mpi_status;
  _5 = this_4(D)->D.49897.mpi_comm;
  _7 = MEM[(struct ompi_datatype_t * *)datatype_6(D) + 8B];
  MPI_Recv (buf_8(D), count_9(D), _7, source_10(D), tag_11(D), _5, _2); [tail call]
  return;

}



;; Function virtual void MPI::Comm::Send(const void*, int, const MPI::Datatype&, int, int) const (_ZNK3MPI4Comm4SendEPKviRKNS_8DatatypeEii, funcdef_no=2540, decl_uid=49475, symbol_order=954)

virtual void MPI::Comm::Send(const void*, int, const MPI::Datatype&, int, int) const (const struct Comm * const this, const void * buf, int count, const struct Datatype & datatype, int dest, int tag)
{
  struct ompi_communicator_t * _3;
  struct ompi_datatype_t * const _5;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  _5 = MEM[(struct ompi_datatype_t * *)datatype_4(D) + 8B];
  MPI_Send (buf_6(D), count_7(D), _5, dest_8(D), tag_9(D), _3); [tail call]
  return;

}



;; Function virtual void MPI::Comm::Barrier() const (_ZNK3MPI4Comm7BarrierEv, funcdef_no=2573, decl_uid=49660, symbol_order=987)

virtual void MPI::Comm::Barrier() const (const struct Comm * const this)
{
  struct ompi_communicator_t * _3;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  MPI_Barrier (_3); [tail call]
  return;

}



;; Function virtual MPI::Request MPI::Comm::Irecv(void*, int, const MPI::Datatype&, int, int) const (_ZNK3MPI4Comm5IrecvEPviRKNS_8DatatypeEii, funcdef_no=2550, decl_uid=49546, symbol_order=964)

virtual MPI::Request MPI::Comm::Irecv(void*, int, const MPI::Datatype&, int, int) const (const struct Comm * const this, void * buf, int count, const struct Datatype & datatype, int source, int tag)
{
  struct ompi_request_t * request;
  struct ompi_communicator_t * _3;
  struct ompi_datatype_t * const _5;
  struct ompi_request_t * request.59_11;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  _5 = MEM[(struct ompi_datatype_t * *)datatype_4(D) + 8B];
  MPI_Irecv (buf_6(D), count_7(D), _5, source_8(D), tag_9(D), _3, &request);
  request.59_11 = request;
  _12(D)->_vptr.Request = &MEM[(void *)&_ZTVN3MPI7RequestE + 16B];
  _12(D)->mpi_request = request.59_11;
  request ={v} {CLOBBER};
  return _12(D);

}



;; Function virtual MPI::Request MPI::Comm::Isend(const void*, int, const MPI::Datatype&, int, int) const (_ZNK3MPI4Comm5IsendEPKviRKNS_8DatatypeEii, funcdef_no=2546, decl_uid=49518, symbol_order=960)

virtual MPI::Request MPI::Comm::Isend(const void*, int, const MPI::Datatype&, int, int) const (const struct Comm * const this, const void * buf, int count, const struct Datatype & datatype, int dest, int tag)
{
  struct ompi_request_t * request;
  struct ompi_communicator_t * _3;
  struct ompi_datatype_t * const _5;
  struct ompi_request_t * request.60_11;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  _5 = MEM[(struct ompi_datatype_t * *)datatype_4(D) + 8B];
  MPI_Isend (buf_6(D), count_7(D), _5, dest_8(D), tag_9(D), _3, &request);
  request.60_11 = request;
  _12(D)->_vptr.Request = &MEM[(void *)&_ZTVN3MPI7RequestE + 16B];
  _12(D)->mpi_request = request.60_11;
  request ={v} {CLOBBER};
  return _12(D);

}



;; Function virtual void MPI::Win::Set_name(const char*) (_ZN3MPI3Win8Set_nameEPKc, funcdef_no=2737, decl_uid=50062, symbol_order=1151)

virtual void MPI::Win::Set_name(const char*) (struct Win * const this, const char * win_name)
{
  struct ompi_win_t * _3;

  <bb 2>:
  _3 = this_2(D)->mpi_win;
  MPI_Win_set_name (_3, win_name_4(D)); [tail call]
  return;

}



;; Function virtual void MPI::Win::Set_attr(int, const void*) (_ZN3MPI3Win8Set_attrEiPKv, funcdef_no=2736, decl_uid=50059, symbol_order=1150)

virtual void MPI::Win::Set_attr(int, const void*) (struct Win * const this, int win_keyval, const void * attribute_val)
{
  struct ompi_win_t * _3;

  <bb 2>:
  _3 = this_2(D)->mpi_win;
  MPI_Win_set_attr (_3, win_keyval_4(D), attribute_val_5(D)); [tail call]
  return;

}



;; Function virtual void MPI::Win::Get_name(char*, int&) const (_ZNK3MPI3Win8Get_nameEPcRi, funcdef_no=2735, decl_uid=50055, symbol_order=1149)

virtual void MPI::Win::Get_name(char*, int&) const (const struct Win * const this, char * win_name, int & resultlen)
{
  struct ompi_win_t * _3;

  <bb 2>:
  _3 = this_2(D)->mpi_win;
  MPI_Win_get_name (_3, win_name_4(D), resultlen_5(D)); [tail call]
  return;

}



;; Function virtual void MPI::Win::Delete_attr(int) (_ZN3MPI3Win11Delete_attrEi, funcdef_no=2731, decl_uid=50040, symbol_order=1145)

virtual void MPI::Win::Delete_attr(int) (struct Win * const this, int win_keyval)
{
  struct ompi_win_t * _3;

  <bb 2>:
  _3 = this_2(D)->mpi_win;
  MPI_Win_delete_attr (_3, win_keyval_4(D)); [tail call]
  return;

}



;; Function virtual void MPI::Win::Call_errhandler(int) const (_ZNK3MPI3Win15Call_errhandlerEi, funcdef_no=2726, decl_uid=50014, symbol_order=1140)

virtual void MPI::Win::Call_errhandler(int) const (const struct Win * const this, int errorcode)
{
  struct ompi_win_t * _3;

  <bb 2>:
  _3 = this_2(D)->mpi_win;
  MPI_Win_call_errhandler (_3, errorcode_4(D)); [tail call]
  return;

}



;; Function virtual void MPI::Win::Wait() const (_ZNK3MPI3Win4WaitEv, funcdef_no=2725, decl_uid=50011, symbol_order=1139)

virtual void MPI::Win::Wait() const (const struct Win * const this)
{
  struct ompi_win_t * _3;

  <bb 2>:
  _3 = this_2(D)->mpi_win;
  MPI_Win_wait (_3); [tail call]
  return;

}



;; Function virtual void MPI::Win::Unlock(int) const (_ZNK3MPI3Win6UnlockEi, funcdef_no=2724, decl_uid=50009, symbol_order=1138)

virtual void MPI::Win::Unlock(int) const (const struct Win * const this, int rank)
{
  struct ompi_win_t * _3;

  <bb 2>:
  _3 = this_2(D)->mpi_win;
  MPI_Win_unlock (rank_4(D), _3); [tail call]
  return;

}



;; Function virtual bool MPI::Win::Test() const (_ZNK3MPI3Win4TestEv, funcdef_no=2723, decl_uid=50006, symbol_order=1137)

virtual bool MPI::Win::Test() const (const struct Win * const this)
{
  int flag;
  struct ompi_win_t * _3;
  int flag.61_5;
  bool _6;

  <bb 2>:
  _3 = this_2(D)->mpi_win;
  MPI_Win_test (_3, &flag);
  flag.61_5 = flag;
  _6 = flag.61_5 != 0;
  flag ={v} {CLOBBER};
  return _6;

}



;; Function virtual void MPI::Win::Start(const MPI::Group&, int) const (_ZNK3MPI3Win5StartERKNS_5GroupEi, funcdef_no=2722, decl_uid=50004, symbol_order=1136)

virtual void MPI::Win::Start(const MPI::Group&, int) const (const struct Win * const this, const struct Group & group, int assert)
{
  struct ompi_win_t * _3;
  struct ompi_group_t * const _5;

  <bb 2>:
  _3 = this_2(D)->mpi_win;
  _5 = MEM[(struct ompi_group_t * *)group_4(D) + 8B];
  MPI_Win_start (_5, assert_6(D), _3); [tail call]
  return;

}



;; Function virtual void MPI::Win::Put(const void*, int, const MPI::Datatype&, int, MPI::Aint, int, const MPI::Datatype&) const (_ZNK3MPI3Win3PutEPKviRKNS_8DatatypeEiliS5_, funcdef_no=2721, decl_uid=50000, symbol_order=1135)

virtual void MPI::Win::Put(const void*, int, const MPI::Datatype&, int, MPI::Aint, int, const MPI::Datatype&) const (const struct Win * const this, const void * origin_addr, int origin_count, const struct Datatype & origin_datatype, int target_rank, Aint target_disp, int target_count, const struct Datatype & target_datatype)
{
  struct ompi_win_t * _3;
  struct ompi_datatype_t * const _5;
  struct ompi_datatype_t * const _7;

  <bb 2>:
  _3 = this_2(D)->mpi_win;
  _5 = MEM[(struct ompi_datatype_t * *)target_datatype_4(D) + 8B];
  _7 = MEM[(struct ompi_datatype_t * *)origin_datatype_6(D) + 8B];
  MPI_Put (origin_addr_8(D), origin_count_9(D), _7, target_rank_10(D), target_disp_11(D), target_count_12(D), _5, _3); [tail call]
  return;

}



;; Function virtual void MPI::Win::Post(const MPI::Group&, int) const (_ZNK3MPI3Win4PostERKNS_5GroupEi, funcdef_no=2720, decl_uid=49991, symbol_order=1134)

virtual void MPI::Win::Post(const MPI::Group&, int) const (const struct Win * const this, const struct Group & group, int assert)
{
  struct ompi_win_t * _3;
  struct ompi_group_t * const _5;

  <bb 2>:
  _3 = this_2(D)->mpi_win;
  _5 = MEM[(struct ompi_group_t * *)group_4(D) + 8B];
  MPI_Win_post (_5, assert_6(D), _3); [tail call]
  return;

}



;; Function virtual void MPI::Win::Lock(int, int, int) const (_ZNK3MPI3Win4LockEiii, funcdef_no=2719, decl_uid=49987, symbol_order=1133)

virtual void MPI::Win::Lock(int, int, int) const (const struct Win * const this, int lock_type, int rank, int assert)
{
  struct ompi_win_t * _3;

  <bb 2>:
  _3 = this_2(D)->mpi_win;
  MPI_Win_lock (lock_type_4(D), rank_5(D), assert_6(D), _3); [tail call]
  return;

}



;; Function virtual MPI::Group MPI::Win::Get_group() const (_ZNK3MPI3Win9Get_groupEv, funcdef_no=2718, decl_uid=49982, symbol_order=1132)

virtual MPI::Group MPI::Win::Get_group() const (const struct Win * const this)
{
  struct ompi_group_t * mpi_group;
  struct ompi_win_t * _3;
  struct ompi_group_t * mpi_group.62_5;

  <bb 2>:
  _3 = this_2(D)->mpi_win;
  MPI_Win_get_group (_3, &mpi_group);
  mpi_group.62_5 = mpi_group;
  _6(D)->_vptr.Group = &MEM[(void *)&_ZTVN3MPI5GroupE + 16B];
  _6(D)->mpi_group = mpi_group.62_5;
  mpi_group ={v} {CLOBBER};
  return _6(D);

}



;; Function virtual void MPI::Win::Get(const void*, int, const MPI::Datatype&, int, MPI::Aint, int, const MPI::Datatype&) const (_ZNK3MPI3Win3GetEPKviRKNS_8DatatypeEiliS5_, funcdef_no=2717, decl_uid=49980, symbol_order=1131)

virtual void MPI::Win::Get(const void*, int, const MPI::Datatype&, int, MPI::Aint, int, const MPI::Datatype&) const (const struct Win * const this, const void * origin_addr, int origin_count, const struct Datatype & origin_datatype, int target_rank, Aint target_disp, int target_count, const struct Datatype & target_datatype)
{
  struct ompi_win_t * _3;
  struct ompi_datatype_t * const _5;
  struct ompi_datatype_t * const _7;

  <bb 2>:
  _3 = this_2(D)->mpi_win;
  _5 = MEM[(struct ompi_datatype_t * *)target_datatype_4(D) + 8B];
  _7 = MEM[(struct ompi_datatype_t * *)origin_datatype_6(D) + 8B];
  MPI_Get (origin_addr_8(D), origin_count_9(D), _7, target_rank_10(D), target_disp_11(D), target_count_12(D), _5, _3); [tail call]
  return;

}



;; Function virtual void MPI::Win::Fence(int) const (_ZNK3MPI3Win5FenceEi, funcdef_no=2716, decl_uid=49969, symbol_order=1130)

virtual void MPI::Win::Fence(int) const (const struct Win * const this, int assert)
{
  struct ompi_win_t * _3;

  <bb 2>:
  _3 = this_2(D)->mpi_win;
  MPI_Win_fence (assert_4(D), _3); [tail call]
  return;

}



;; Function virtual void MPI::Win::Complete() const (_ZNK3MPI3Win8CompleteEv, funcdef_no=2714, decl_uid=49960, symbol_order=1128)

virtual void MPI::Win::Complete() const (const struct Win * const this)
{
  struct ompi_win_t * _3;

  <bb 2>:
  _3 = this_2(D)->mpi_win;
  MPI_Win_complete (_3); [tail call]
  return;

}



;; Function virtual void MPI::Win::Accumulate(const void*, int, const MPI::Datatype&, int, MPI::Aint, int, const MPI::Datatype&, const MPI::Op&) const (_ZNK3MPI3Win10AccumulateEPKviRKNS_8DatatypeEiliS5_RKNS_2OpE, funcdef_no=2713, decl_uid=49958, symbol_order=1127)

virtual void MPI::Win::Accumulate(const void*, int, const MPI::Datatype&, int, MPI::Aint, int, const MPI::Datatype&, const MPI::Op&) const (const struct Win * const this, const void * origin_addr, int origin_count, const struct Datatype & origin_datatype, int target_rank, Aint target_disp, int target_count, const struct Datatype & target_datatype, const struct Op & op)
{
  struct ompi_win_t * _3;
  struct ompi_op_t * const _5;
  struct ompi_datatype_t * const _7;
  struct ompi_datatype_t * const _9;

  <bb 2>:
  _3 = this_2(D)->mpi_win;
  _5 = MEM[(struct ompi_op_t * *)op_4(D) + 8B];
  _7 = MEM[(struct ompi_datatype_t * *)target_datatype_6(D) + 8B];
  _9 = MEM[(struct ompi_datatype_t * *)origin_datatype_8(D) + 8B];
  MPI_Accumulate (origin_addr_10(D), origin_count_11(D), _9, target_rank_12(D), target_disp_13(D), target_count_14(D), _7, _5, _3); [tail call]
  return;

}



;; Function virtual MPI::Errhandler MPI::Win::Get_errhandler() const (_ZNK3MPI3Win14Get_errhandlerEv, funcdef_no=2711, decl_uid=49948, symbol_order=1125)

virtual MPI::Errhandler MPI::Win::Get_errhandler() const (const struct Win * const this)
{
  struct ompi_errhandler_t * errhandler;
  struct ompi_win_t * _3;
  struct ompi_errhandler_t * errhandler.63_5;

  <bb 2>:
  _3 = this_2(D)->mpi_win;
  MPI_Win_get_errhandler (_3, &errhandler);
  errhandler.63_5 = errhandler;
  _6(D)->_vptr.Errhandler = &MEM[(void *)&_ZTVN3MPI10ErrhandlerE + 16B];
  _6(D)->mpi_errhandler = errhandler.63_5;
  errhandler ={v} {CLOBBER};
  return _6(D);

}



;; Function virtual void MPI::Win::Set_errhandler(const MPI::Errhandler&) const (_ZNK3MPI3Win14Set_errhandlerERKNS_10ErrhandlerE, funcdef_no=2712, decl_uid=49946, symbol_order=1126)

virtual void MPI::Win::Set_errhandler(const MPI::Errhandler&) const (const struct Win * const this, const struct Errhandler & errhandler)
{
  struct ompi_errhandler_t * const _3;
  struct ompi_win_t * _5;

  <bb 2>:
  _3 = MEM[(struct ompi_errhandler_t * *)errhandler_2(D) + 8B];
  _5 = this_4(D)->mpi_win;
  MPI_Win_set_errhandler (_5, _3); [tail call]
  return;

}



;; Function virtual void MPI::Info::Set(const char*, const char*) (_ZN3MPI4Info3SetEPKcS2_, funcdef_no=2710, decl_uid=51170, symbol_order=1124)

virtual void MPI::Info::Set(const char*, const char*) (struct Info * const this, const char * key, const char * value)
{
  struct ompi_info_t * _3;

  <bb 2>:
  _3 = this_2(D)->mpi_info;
  MPI_Info_set (_3, key_4(D), value_5(D)); [tail call]
  return;

}



;; Function virtual bool MPI::Info::Get_valuelen(const char*, int&) const (_ZNK3MPI4Info12Get_valuelenEPKcRi, funcdef_no=2709, decl_uid=51166, symbol_order=1123)

virtual bool MPI::Info::Get_valuelen(const char*, int&) const (const struct Info * const this, const char * key, int & valuelen)
{
  int flag;
  struct ompi_info_t * _3;
  int flag.64_7;
  bool _8;

  <bb 2>:
  _3 = this_2(D)->mpi_info;
  MPI_Info_get_valuelen (_3, key_4(D), valuelen_5(D), &flag);
  flag.64_7 = flag;
  _8 = flag.64_7 != 0;
  flag ={v} {CLOBBER};
  return _8;

}



;; Function virtual void MPI::Info::Get_nthkey(int, char*) const (_ZNK3MPI4Info10Get_nthkeyEiPc, funcdef_no=2708, decl_uid=51162, symbol_order=1122)

virtual void MPI::Info::Get_nthkey(int, char*) const (const struct Info * const this, int n, char * key)
{
  struct ompi_info_t * _3;

  <bb 2>:
  _3 = this_2(D)->mpi_info;
  MPI_Info_get_nthkey (_3, n_4(D), key_5(D)); [tail call]
  return;

}



;; Function virtual int MPI::Info::Get_nkeys() const (_ZNK3MPI4Info9Get_nkeysEv, funcdef_no=2707, decl_uid=51158, symbol_order=1121)

virtual int MPI::Info::Get_nkeys() const (const struct Info * const this)
{
  int nkeys;
  struct ompi_info_t * _3;
  int _5;

  <bb 2>:
  _3 = this_2(D)->mpi_info;
  MPI_Info_get_nkeys (_3, &nkeys);
  _5 = nkeys;
  nkeys ={v} {CLOBBER};
  return _5;

}



;; Function virtual bool MPI::Info::Get(const char*, int, char*) const (_ZNK3MPI4Info3GetEPKciPc, funcdef_no=2706, decl_uid=51156, symbol_order=1120)

virtual bool MPI::Info::Get(const char*, int, char*) const (const struct Info * const this, const char * key, int valuelen, char * value)
{
  int flag;
  struct ompi_info_t * _3;
  int flag.65_8;
  bool _9;

  <bb 2>:
  _3 = this_2(D)->mpi_info;
  MPI_Info_get (_3, key_4(D), valuelen_5(D), value_6(D), &flag);
  flag.65_8 = flag;
  _9 = flag.65_8 != 0;
  flag ={v} {CLOBBER};
  return _9;

}



;; Function virtual void MPI::Info::Free() (_ZN3MPI4Info4FreeEv, funcdef_no=2705, decl_uid=51151, symbol_order=1119)

virtual void MPI::Info::Free() (struct Info * const this)
{
  struct ompi_info_t * * _2;

  <bb 2>:
  _2 = &this_1(D)->mpi_info;
  MPI_Info_free (_2); [tail call]
  return;

}



;; Function virtual MPI::Info MPI::Info::Dup() const (_ZNK3MPI4Info3DupEv, funcdef_no=2704, decl_uid=51149, symbol_order=1118)

virtual MPI::Info MPI::Info::Dup() const (const struct Info * const this)
{
  struct ompi_info_t * newinfo;
  struct ompi_info_t * _3;
  struct ompi_info_t * newinfo.66_5;

  <bb 2>:
  _3 = this_2(D)->mpi_info;
  MPI_Info_dup (_3, &newinfo);
  newinfo.66_5 = newinfo;
  _6(D)->_vptr.Info = &MEM[(void *)&_ZTVN3MPI4InfoE + 16B];
  _6(D)->mpi_info = newinfo.66_5;
  newinfo ={v} {CLOBBER};
  return _6(D);

}



;; Function virtual void MPI::Info::Delete(const char*) (_ZN3MPI4Info6DeleteEPKc, funcdef_no=2703, decl_uid=51147, symbol_order=1117)

virtual void MPI::Info::Delete(const char*) (struct Info * const this, const char * key)
{
  struct ompi_info_t * _3;

  <bb 2>:
  _3 = this_2(D)->mpi_info;
  MPI_Info_delete (_3, key_4(D)); [tail call]
  return;

}



;; Function virtual void MPI::Status::Set_cancelled(bool) (_ZN3MPI6Status13Set_cancelledEb, funcdef_no=2701, decl_uid=48827, symbol_order=1115)

virtual void MPI::Status::Set_cancelled(bool) (struct Status * const this, bool flag)
{
  int _2;
  struct MPI_Status * _4;

  <bb 2>:
  _2 = (int) flag_1(D);
  _4 = &this_3(D)->mpi_status;
  MPI_Status_set_cancelled (_4, _2); [tail call]
  return;

}



;; Function virtual void MPI::Status::Set_elements(const MPI::Datatype&, int) (_ZN3MPI6Status12Set_elementsERKNS_8DatatypeEi, funcdef_no=2700, decl_uid=48824, symbol_order=1114)

virtual void MPI::Status::Set_elements(const MPI::Datatype&, int) (struct Status * const this, const struct Datatype & datatype, int count)
{
  struct ompi_datatype_t * const _3;
  struct MPI_Status * _5;

  <bb 2>:
  _3 = MEM[(struct ompi_datatype_t * *)datatype_2(D) + 8B];
  _5 = &this_4(D)->mpi_status;
  MPI_Status_set_elements (_5, _3, count_6(D)); [tail call]
  return;

}



;; Function virtual int MPI::Status::Get_elements(const MPI::Datatype&) const (_ZNK3MPI6Status12Get_elementsERKNS_8DatatypeE, funcdef_no=2693, decl_uid=48805, symbol_order=1107)

virtual int MPI::Status::Get_elements(const MPI::Datatype&) const (const struct Status * const this, const struct Datatype & datatype)
{
  int count;
  struct ompi_datatype_t * const _3;
  const struct MPI_Status * _5;
  int _7;

  <bb 2>:
  _3 = MEM[(struct ompi_datatype_t * *)datatype_2(D) + 8B];
  _5 = &this_4(D)->mpi_status;
  MPI_Get_elements (_5, _3, &count);
  _7 = count;
  count ={v} {CLOBBER};
  return _7;

}



;; Function virtual bool MPI::Status::Is_cancelled() const (_ZNK3MPI6Status12Is_cancelledEv, funcdef_no=2692, decl_uid=48802, symbol_order=1106)

virtual bool MPI::Status::Is_cancelled() const (const struct Status * const this)
{
  int t;
  const struct MPI_Status * _2;
  int t.67_5;
  bool _6;

  <bb 2>:
  _2 = &this_1(D)->mpi_status;
  MPI_Test_cancelled (_2, &t);
  t.67_5 = t;
  _6 = t.67_5 != 0;
  t ={v} {CLOBBER};
  return _6;

}



;; Function virtual int MPI::Status::Get_count(const MPI::Datatype&) const (_ZNK3MPI6Status9Get_countERKNS_8DatatypeE, funcdef_no=2691, decl_uid=48800, symbol_order=1105)

virtual int MPI::Status::Get_count(const MPI::Datatype&) const (const struct Status * const this, const struct Datatype & datatype)
{
  int count;
  struct ompi_datatype_t * const _3;
  const struct MPI_Status * _5;
  int _7;

  <bb 2>:
  _3 = MEM[(struct ompi_datatype_t * *)datatype_2(D) + 8B];
  _5 = &this_4(D)->mpi_status;
  MPI_Get_count (_5, _3, &count);
  _7 = count;
  count ={v} {CLOBBER};
  return _7;

}



;; Function virtual void MPI::Errhandler::Free() (_ZN3MPI10Errhandler4FreeEv, funcdef_no=2690, decl_uid=50588, symbol_order=1104)

virtual void MPI::Errhandler::Free() (struct Errhandler * const this)
{
  struct ompi_errhandler_t * * _2;

  <bb 2>:
  _2 = &this_1(D)->mpi_errhandler;
  MPI_Errhandler_free (_2); [tail call]
  return;

}



;; Function virtual bool MPI::Op::Is_commutative() const (_ZNK3MPI2Op14Is_commutativeEv, funcdef_no=2689, decl_uid=48743, symbol_order=1103)

virtual bool MPI::Op::Is_commutative() const (const struct Op * const this)
{
  int commute;
  struct ompi_op_t * _3;
  int commute.68_5;
  bool _6;

  <bb 2>:
  _3 = this_2(D)->mpi_op;
  MPI_Op_commutative (_3, &commute);
  commute.68_5 = commute;
  _6 = commute.68_5 != 0;
  commute ={v} {CLOBBER};
  return _6;

}



;; Function virtual void MPI::Op::Reduce_local(const void*, void*, int, const MPI::Datatype&) const (_ZNK3MPI2Op12Reduce_localEPKvPviRKNS_8DatatypeE, funcdef_no=2688, decl_uid=48741, symbol_order=1102)

virtual void MPI::Op::Reduce_local(const void*, void*, int, const MPI::Datatype&) const (const struct Op * const this, const void * inbuf, void * inoutbuf, int count, const struct Datatype & datatype)
{
  struct ompi_op_t * _3;
  struct ompi_datatype_t * const _5;

  <bb 2>:
  _3 = this_2(D)->mpi_op;
  _5 = MEM[(struct ompi_datatype_t * *)datatype_4(D) + 8B];
  MPI_Reduce_local (inbuf_6(D), inoutbuf_7(D), count_8(D), _5, _3); [tail call]
  return;

}



;; Function virtual void MPI::Op::Free() (_ZN3MPI2Op4FreeEv, funcdef_no=2687, decl_uid=48735, symbol_order=1101)

virtual void MPI::Op::Free() (struct Op * const this)
{
  struct ompi_op_t * * _2;

  <bb 2>:
  _2 = &this_1(D)->mpi_op;
  MPI_Op_free (_2); [tail call]
  return;

}



;; Function virtual void MPI::Op::Init(void (*)(const void*, void*, int, const MPI::Datatype&), bool) (_ZN3MPI2Op4InitEPFvPKvPviRKNS_8DatatypeEEb, funcdef_no=2686, decl_uid=48733, symbol_order=1100)

virtual void MPI::Op::Init(void (*)(const void*, void*, int, const MPI::Datatype&), bool) (struct Op * const this, void (*<T917d>) (const void *, void *, int, const struct Datatype &) func, bool commute)
{
  struct ompi_op_t * * _2;
  int _4;
  struct ompi_op_t * _7;

  <bb 2>:
  _2 = &this_1(D)->mpi_op;
  _4 = (int) commute_3(D);
  MPI_Op_create (ompi_mpi_cxx_op_intercept, _4, _2);
  _7 = this_1(D)->mpi_op;
  ompi_op_set_cxx_callback (_7, func_8(D)); [tail call]
  return;

}



;; Function virtual void MPI::Group::Free() (_ZN3MPI5Group4FreeEv, funcdef_no=2667, decl_uid=49307, symbol_order=1081)

virtual void MPI::Group::Free() (struct Group * const this)
{
  struct ompi_group_t * * _2;

  <bb 2>:
  _2 = &this_1(D)->mpi_group;
  MPI_Group_free (_2); [tail call]
  return;

}



;; Function virtual MPI::Group MPI::Group::Range_excl(int, const int (*)[3]) const (_ZNK3MPI5Group10Range_exclEiPA3_Ki, funcdef_no=2666, decl_uid=49305, symbol_order=1080)

virtual MPI::Group MPI::Group::Range_excl(int, const int (*)[3]) const (const struct Group * const this, int n, const int[3] * ranges)
{
  struct ompi_group_t * newgroup;
  struct ompi_group_t * _3;
  struct ompi_group_t * newgroup.69_7;

  <bb 2>:
  _3 = this_2(D)->mpi_group;
  MPI_Group_range_excl (_3, n_4(D), ranges_5(D), &newgroup);
  newgroup.69_7 = newgroup;
  _8(D)->_vptr.Group = &MEM[(void *)&_ZTVN3MPI5GroupE + 16B];
  _8(D)->mpi_group = newgroup.69_7;
  newgroup ={v} {CLOBBER};
  return _8(D);

}



;; Function virtual MPI::Group MPI::Group::Range_incl(int, const int (*)[3]) const (_ZNK3MPI5Group10Range_inclEiPA3_Ki, funcdef_no=2665, decl_uid=49301, symbol_order=1079)

virtual MPI::Group MPI::Group::Range_incl(int, const int (*)[3]) const (const struct Group * const this, int n, const int[3] * ranges)
{
  struct ompi_group_t * newgroup;
  struct ompi_group_t * _3;
  struct ompi_group_t * newgroup.70_7;

  <bb 2>:
  _3 = this_2(D)->mpi_group;
  MPI_Group_range_incl (_3, n_4(D), ranges_5(D), &newgroup);
  newgroup.70_7 = newgroup;
  _8(D)->_vptr.Group = &MEM[(void *)&_ZTVN3MPI5GroupE + 16B];
  _8(D)->mpi_group = newgroup.70_7;
  newgroup ={v} {CLOBBER};
  return _8(D);

}



;; Function virtual MPI::Group MPI::Group::Excl(int, const int*) const (_ZNK3MPI5Group4ExclEiPKi, funcdef_no=2664, decl_uid=49297, symbol_order=1078)

virtual MPI::Group MPI::Group::Excl(int, const int*) const (const struct Group * const this, int n, const int * ranks)
{
  struct ompi_group_t * newgroup;
  struct ompi_group_t * _3;
  struct ompi_group_t * newgroup.71_7;

  <bb 2>:
  _3 = this_2(D)->mpi_group;
  MPI_Group_excl (_3, n_4(D), ranks_5(D), &newgroup);
  newgroup.71_7 = newgroup;
  _8(D)->_vptr.Group = &MEM[(void *)&_ZTVN3MPI5GroupE + 16B];
  _8(D)->mpi_group = newgroup.71_7;
  newgroup ={v} {CLOBBER};
  return _8(D);

}



;; Function virtual MPI::Group MPI::Group::Incl(int, const int*) const (_ZNK3MPI5Group4InclEiPKi, funcdef_no=2663, decl_uid=49293, symbol_order=1077)

virtual MPI::Group MPI::Group::Incl(int, const int*) const (const struct Group * const this, int n, const int * ranks)
{
  struct ompi_group_t * newgroup;
  struct ompi_group_t * _3;
  struct ompi_group_t * newgroup.72_7;

  <bb 2>:
  _3 = this_2(D)->mpi_group;
  MPI_Group_incl (_3, n_4(D), ranks_5(D), &newgroup);
  newgroup.72_7 = newgroup;
  _8(D)->_vptr.Group = &MEM[(void *)&_ZTVN3MPI5GroupE + 16B];
  _8(D)->mpi_group = newgroup.72_7;
  newgroup ={v} {CLOBBER};
  return _8(D);

}



;; Function virtual int MPI::Group::Get_rank() const (_ZNK3MPI5Group8Get_rankEv, funcdef_no=2657, decl_uid=49271, symbol_order=1071)

virtual int MPI::Group::Get_rank() const (const struct Group * const this)
{
  int rank;
  struct ompi_group_t * _3;
  int _5;

  <bb 2>:
  _3 = this_2(D)->mpi_group;
  MPI_Group_rank (_3, &rank);
  _5 = rank;
  rank ={v} {CLOBBER};
  return _5;

}



;; Function virtual int MPI::Group::Get_size() const (_ZNK3MPI5Group8Get_sizeEv, funcdef_no=2656, decl_uid=49269, symbol_order=1070)

virtual int MPI::Group::Get_size() const (const struct Group * const this)
{
  int size;
  struct ompi_group_t * _3;
  int _5;

  <bb 2>:
  _3 = this_2(D)->mpi_group;
  MPI_Group_size (_3, &size);
  _5 = size;
  size ={v} {CLOBBER};
  return _5;

}



;; Function virtual MPI::Intercomm MPI::Intercomm::Split(int, int) const (_ZNK3MPI9Intercomm5SplitEii, funcdef_no=2655, decl_uid=51070, symbol_order=1069)

virtual MPI::Intercomm MPI::Intercomm::Split(int, int) const (const struct Intercomm * const this, int color, int key)
{
  struct ompi_communicator_t * newcomm;
  struct ompi_communicator_t * _3;
  struct ompi_communicator_t * newcomm.73_7;

  <bb 2>:
  _3 = this_2(D)->D.51106.D.49897.mpi_comm;
  MPI_Comm_split (_3, color_4(D), key_5(D), &newcomm);
  newcomm.73_7 = newcomm;
  MEM[(struct Comm_Null *)_8(D)].mpi_comm = newcomm.73_7;
  _8(D)->D.51106.D.49897._vptr.Comm_Null = &MEM[(void *)&_ZTVN3MPI9IntercommE + 16B];
  newcomm ={v} {CLOBBER};
  return _8(D);

}



;; Function virtual MPI::Intercomm MPI::Intercomm::Create(const MPI::Group&) const (_ZNK3MPI9Intercomm6CreateERKNS_5GroupE, funcdef_no=2654, decl_uid=51066, symbol_order=1068)

virtual MPI::Intercomm MPI::Intercomm::Create(const MPI::Group&) const (const struct Intercomm * const this, const struct Group & group)
{
  struct ompi_communicator_t * newcomm;
  struct ompi_group_t * const _3;
  struct ompi_communicator_t * _5;
  struct ompi_communicator_t * newcomm.74_7;

  <bb 2>:
  _3 = MEM[(struct ompi_group_t * *)group_2(D) + 8B];
  _5 = this_4(D)->D.51106.D.49897.mpi_comm;
  MPI_Comm_create (_5, _3, &newcomm);
  newcomm.74_7 = newcomm;
  MEM[(struct Comm_Null *)_8(D)].mpi_comm = newcomm.74_7;
  _8(D)->D.51106.D.49897._vptr.Comm_Null = &MEM[(void *)&_ZTVN3MPI9IntercommE + 16B];
  newcomm ={v} {CLOBBER};
  return _8(D);

}



;; Function virtual bool MPI::Comm::Is_inter() const (_ZNK3MPI4Comm8Is_interEv, funcdef_no=2572, decl_uid=49658, symbol_order=986)

virtual bool MPI::Comm::Is_inter() const (const struct Comm * const this)
{
  int t;
  struct ompi_communicator_t * _3;
  int t.83_5;
  bool _6;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  MPI_Comm_test_inter (_3, &t);
  t.83_5 = t;
  _6 = t.83_5 != 0;
  t ={v} {CLOBBER};
  return _6;

}



;; Function virtual MPI::Group MPI::Intercomm::Get_remote_group() const (_ZNK3MPI9Intercomm16Get_remote_groupEv, funcdef_no=2652, decl_uid=51060, symbol_order=1066)

virtual MPI::Group MPI::Intercomm::Get_remote_group() const (const struct Intercomm * const this)
{
  struct ompi_group_t * group;
  struct ompi_communicator_t * _3;
  struct ompi_group_t * group.79_5;

  <bb 2>:
  _3 = this_2(D)->D.51106.D.49897.mpi_comm;
  MPI_Comm_remote_group (_3, &group);
  group.79_5 = group;
  _6(D)->_vptr.Group = &MEM[(void *)&_ZTVN3MPI5GroupE + 16B];
  _6(D)->mpi_group = group.79_5;
  group ={v} {CLOBBER};
  return _6(D);

}



;; Function virtual int MPI::Intercomm::Get_remote_size() const (_ZNK3MPI9Intercomm15Get_remote_sizeEv, funcdef_no=2651, decl_uid=51058, symbol_order=1065)

virtual int MPI::Intercomm::Get_remote_size() const (const struct Intercomm * const this)
{
  int size;
  struct ompi_communicator_t * _3;
  int _5;

  <bb 2>:
  _3 = this_2(D)->D.51106.D.49897.mpi_comm;
  MPI_Comm_remote_size (_3, &size);
  _5 = size;
  size ={v} {CLOBBER};
  return _5;

}



;; Function virtual void MPI::Comm::Delete_attr(int) (_ZN3MPI4Comm11Delete_attrEi, funcdef_no=2604, decl_uid=49834, symbol_order=1018)

virtual void MPI::Comm::Delete_attr(int) (struct Comm * const this, int comm_keyval)
{
  struct ompi_communicator_t * _3;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  MPI_Comm_delete_attr (_3, comm_keyval_4(D)); [tail call]
  return;

}



;; Function virtual bool MPI::Comm::Get_attr(int, void*) const (_ZNK3MPI4Comm8Get_attrEiPv, funcdef_no=2603, decl_uid=49831, symbol_order=1017)

virtual bool MPI::Comm::Get_attr(int, void*) const (const struct Comm * const this, int comm_keyval, void * attribute_val)
{
  int flag;
  struct ompi_communicator_t * _3;
  int flag.80_7;
  bool _8;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  MPI_Comm_get_attr (_3, comm_keyval_4(D), attribute_val_5(D), &flag);
  flag.80_7 = flag;
  _8 = flag.80_7 != 0;
  flag ={v} {CLOBBER};
  return _8;

}



;; Function virtual void MPI::Comm::Set_attr(int, const void*) const (_ZNK3MPI4Comm8Set_attrEiPKv, funcdef_no=2602, decl_uid=49827, symbol_order=1016)

virtual void MPI::Comm::Set_attr(int, const void*) const (const struct Comm * const this, int comm_keyval, const void * attribute_val)
{
  struct ompi_communicator_t * _3;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  MPI_Comm_set_attr (_3, comm_keyval_4(D), attribute_val_5(D)); [tail call]
  return;

}



;; Function virtual MPI::Errhandler MPI::Comm::Get_errhandler() const (_ZNK3MPI4Comm14Get_errhandlerEv, funcdef_no=2594, decl_uid=49795, symbol_order=1008)

virtual MPI::Errhandler MPI::Comm::Get_errhandler() const (const struct Comm * const this)
{
  struct ompi_errhandler_t * errhandler;
  struct ompi_communicator_t * _3;
  struct ompi_errhandler_t * errhandler.81_5;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  MPI_Comm_get_errhandler (_3, &errhandler);
  errhandler.81_5 = errhandler;
  _6(D)->_vptr.Errhandler = &MEM[(void *)&_ZTVN3MPI10ErrhandlerE + 16B];
  _6(D)->mpi_errhandler = errhandler.81_5;
  errhandler ={v} {CLOBBER};
  return _6(D);

}



;; Function virtual void MPI::Comm::Set_errhandler(const MPI::Errhandler&) (_ZN3MPI4Comm14Set_errhandlerERKNS_10ErrhandlerE, funcdef_no=2595, decl_uid=49793, symbol_order=1009)

virtual void MPI::Comm::Set_errhandler(const MPI::Errhandler&) (struct Comm * const this, const struct Errhandler & errhandler)
{
  struct ompi_errhandler_t * const _3;
  struct ompi_communicator_t * _5;

  <bb 2>:
  _3 = MEM[(struct ompi_errhandler_t * *)errhandler_2(D) + 8B];
  _5 = this_4(D)->D.49897.mpi_comm;
  MPI_Comm_set_errhandler (_5, _3); [tail call]
  return;

}



;; Function virtual void MPI::Comm::Abort(int) (_ZN3MPI4Comm5AbortEi, funcdef_no=2593, decl_uid=49788, symbol_order=1007)

virtual void MPI::Comm::Abort(int) (struct Comm * const this, int errorcode)
{
  struct ompi_communicator_t * _3;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  MPI_Abort (_3, errorcode_4(D)); [tail call]
  return;

}



;; Function virtual void MPI::Comm::Set_name(const char*) (_ZN3MPI4Comm8Set_nameEPKc, funcdef_no=2591, decl_uid=49783, symbol_order=1005)

virtual void MPI::Comm::Set_name(const char*) (struct Comm * const this, const char * comm_name)
{
  struct ompi_communicator_t * _3;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  MPI_Comm_set_name (_3, comm_name_4(D)); [tail call]
  return;

}



;; Function virtual void MPI::Comm::Get_name(char*, int&) const (_ZNK3MPI4Comm8Get_nameEPcRi, funcdef_no=2590, decl_uid=49780, symbol_order=1004)

virtual void MPI::Comm::Get_name(char*, int&) const (const struct Comm * const this, char * comm_name, int & resultlen)
{
  struct ompi_communicator_t * _3;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  MPI_Comm_get_name (_3, comm_name_4(D), resultlen_5(D)); [tail call]
  return;

}



;; Function virtual void MPI::Comm::Disconnect() (_ZN3MPI4Comm10DisconnectEv, funcdef_no=2587, decl_uid=49773, symbol_order=1001)

virtual void MPI::Comm::Disconnect() (struct Comm * const this)
{
  struct ompi_communicator_t * * _2;

  <bb 2>:
  _2 = &this_1(D)->D.49897.mpi_comm;
  MPI_Comm_disconnect (_2); [tail call]
  return;

}



;; Function virtual void MPI::Comm::Reduce_scatter(const void*, void*, int*, const MPI::Datatype&, const MPI::Op&) const (_ZNK3MPI4Comm14Reduce_scatterEPKvPvPiRKNS_8DatatypeERKNS_2OpE, funcdef_no=2586, decl_uid=49771, symbol_order=1000)

virtual void MPI::Comm::Reduce_scatter(const void*, void*, int*, const MPI::Datatype&, const MPI::Op&) const (const struct Comm * const this, const void * sendbuf, void * recvbuf, int * recvcounts, const struct Datatype & datatype, const struct Op & op)
{
  struct ompi_communicator_t * _3;
  struct ompi_op_t * const _5;
  struct ompi_datatype_t * const _7;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  _5 = MEM[(struct ompi_op_t * *)op_4(D) + 8B];
  _7 = MEM[(struct ompi_datatype_t * *)datatype_6(D) + 8B];
  MPI_Reduce_scatter (sendbuf_8(D), recvbuf_9(D), recvcounts_10(D), _7, _5, _3); [tail call]
  return;

}



;; Function virtual void MPI::Comm::Allreduce(const void*, void*, int, const MPI::Datatype&, const MPI::Op&) const (_ZNK3MPI4Comm9AllreduceEPKvPviRKNS_8DatatypeERKNS_2OpE, funcdef_no=2585, decl_uid=49764, symbol_order=999)

virtual void MPI::Comm::Allreduce(const void*, void*, int, const MPI::Datatype&, const MPI::Op&) const (const struct Comm * const this, const void * sendbuf, void * recvbuf, int count, const struct Datatype & datatype, const struct Op & op)
{
  struct ompi_communicator_t * _3;
  struct ompi_op_t * const _5;
  struct ompi_datatype_t * const _7;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  _5 = MEM[(struct ompi_op_t * *)op_4(D) + 8B];
  _7 = MEM[(struct ompi_datatype_t * *)datatype_6(D) + 8B];
  MPI_Allreduce (sendbuf_8(D), recvbuf_9(D), count_10(D), _7, _5, _3); [tail call]
  return;

}



;; Function virtual void MPI::Comm::Reduce(const void*, void*, int, const MPI::Datatype&, const MPI::Op&, int) const (_ZNK3MPI4Comm6ReduceEPKvPviRKNS_8DatatypeERKNS_2OpEi, funcdef_no=2584, decl_uid=49757, symbol_order=998)

virtual void MPI::Comm::Reduce(const void*, void*, int, const MPI::Datatype&, const MPI::Op&, int) const (const struct Comm * const this, const void * sendbuf, void * recvbuf, int count, const struct Datatype & datatype, const struct Op & op, int root)
{
  struct ompi_communicator_t * _3;
  struct ompi_op_t * const _5;
  struct ompi_datatype_t * const _7;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  _5 = MEM[(struct ompi_op_t * *)op_4(D) + 8B];
  _7 = MEM[(struct ompi_datatype_t * *)datatype_6(D) + 8B];
  MPI_Reduce (sendbuf_8(D), recvbuf_9(D), count_10(D), _7, _5, root_11(D), _3); [tail call]
  return;

}



;; Function virtual void MPI::Comm::Alltoallv(const void*, const int*, const int*, const MPI::Datatype&, void*, const int*, const int*, const MPI::Datatype&) const (_ZNK3MPI4Comm9AlltoallvEPKvPKiS4_RKNS_8DatatypeEPvS4_S4_S7_, funcdef_no=2582, decl_uid=49739, symbol_order=996)

virtual void MPI::Comm::Alltoallv(const void*, const int*, const int*, const MPI::Datatype&, void*, const int*, const int*, const MPI::Datatype&) const (const struct Comm * const this, const void * sendbuf, const int * sendcounts, const int * sdispls, const struct Datatype & sendtype, void * recvbuf, const int * recvcounts, const int * rdispls, const struct Datatype & recvtype)
{
  struct ompi_communicator_t * _3;
  struct ompi_datatype_t * const _5;
  struct ompi_datatype_t * const _7;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  _5 = MEM[(struct ompi_datatype_t * *)recvtype_4(D) + 8B];
  _7 = MEM[(struct ompi_datatype_t * *)sendtype_6(D) + 8B];
  MPI_Alltoallv (sendbuf_8(D), sendcounts_9(D), sdispls_10(D), _7, recvbuf_11(D), recvcounts_12(D), rdispls_13(D), _5, _3); [tail call]
  return;

}



;; Function virtual void MPI::Comm::Alltoall(const void*, int, const MPI::Datatype&, void*, int, const MPI::Datatype&) const (_ZNK3MPI4Comm8AlltoallEPKviRKNS_8DatatypeEPviS5_, funcdef_no=2581, decl_uid=49729, symbol_order=995)

virtual void MPI::Comm::Alltoall(const void*, int, const MPI::Datatype&, void*, int, const MPI::Datatype&) const (const struct Comm * const this, const void * sendbuf, int sendcount, const struct Datatype & sendtype, void * recvbuf, int recvcount, const struct Datatype & recvtype)
{
  struct ompi_communicator_t * _3;
  struct ompi_datatype_t * const _5;
  struct ompi_datatype_t * const _7;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  _5 = MEM[(struct ompi_datatype_t * *)recvtype_4(D) + 8B];
  _7 = MEM[(struct ompi_datatype_t * *)sendtype_6(D) + 8B];
  MPI_Alltoall (sendbuf_8(D), sendcount_9(D), _7, recvbuf_10(D), recvcount_11(D), _5, _3); [tail call]
  return;

}



;; Function virtual void MPI::Comm::Allgatherv(const void*, int, const MPI::Datatype&, void*, const int*, const int*, const MPI::Datatype&) const (_ZNK3MPI4Comm10AllgathervEPKviRKNS_8DatatypeEPvPKiS8_S5_, funcdef_no=2580, decl_uid=49721, symbol_order=994)

virtual void MPI::Comm::Allgatherv(const void*, int, const MPI::Datatype&, void*, const int*, const int*, const MPI::Datatype&) const (const struct Comm * const this, const void * sendbuf, int sendcount, const struct Datatype & sendtype, void * recvbuf, const int * recvcounts, const int * displs, const struct Datatype & recvtype)
{
  struct ompi_communicator_t * _3;
  struct ompi_datatype_t * const _5;
  struct ompi_datatype_t * const _7;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  _5 = MEM[(struct ompi_datatype_t * *)recvtype_4(D) + 8B];
  _7 = MEM[(struct ompi_datatype_t * *)sendtype_6(D) + 8B];
  MPI_Allgatherv (sendbuf_8(D), sendcount_9(D), _7, recvbuf_10(D), recvcounts_11(D), displs_12(D), _5, _3); [tail call]
  return;

}



;; Function virtual void MPI::Comm::Allgather(const void*, int, const MPI::Datatype&, void*, int, const MPI::Datatype&) const (_ZNK3MPI4Comm9AllgatherEPKviRKNS_8DatatypeEPviS5_, funcdef_no=2579, decl_uid=49712, symbol_order=993)

virtual void MPI::Comm::Allgather(const void*, int, const MPI::Datatype&, void*, int, const MPI::Datatype&) const (const struct Comm * const this, const void * sendbuf, int sendcount, const struct Datatype & sendtype, void * recvbuf, int recvcount, const struct Datatype & recvtype)
{
  struct ompi_communicator_t * _3;
  struct ompi_datatype_t * const _5;
  struct ompi_datatype_t * const _7;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  _5 = MEM[(struct ompi_datatype_t * *)recvtype_4(D) + 8B];
  _7 = MEM[(struct ompi_datatype_t * *)sendtype_6(D) + 8B];
  MPI_Allgather (sendbuf_8(D), sendcount_9(D), _7, recvbuf_10(D), recvcount_11(D), _5, _3); [tail call]
  return;

}



;; Function virtual void MPI::Comm::Scatterv(const void*, const int*, const int*, const MPI::Datatype&, void*, int, const MPI::Datatype&, int) const (_ZNK3MPI4Comm8ScattervEPKvPKiS4_RKNS_8DatatypeEPviS7_i, funcdef_no=2578, decl_uid=49704, symbol_order=992)

virtual void MPI::Comm::Scatterv(const void*, const int*, const int*, const MPI::Datatype&, void*, int, const MPI::Datatype&, int) const (const struct Comm * const this, const void * sendbuf, const int * sendcounts, const int * displs, const struct Datatype & sendtype, void * recvbuf, int recvcount, const struct Datatype & recvtype, int root)
{
  struct ompi_communicator_t * _3;
  struct ompi_datatype_t * const _5;
  struct ompi_datatype_t * const _7;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  _5 = MEM[(struct ompi_datatype_t * *)recvtype_4(D) + 8B];
  _7 = MEM[(struct ompi_datatype_t * *)sendtype_6(D) + 8B];
  MPI_Scatterv (sendbuf_8(D), sendcounts_9(D), displs_10(D), _7, recvbuf_11(D), recvcount_12(D), _5, root_13(D), _3); [tail call]
  return;

}



;; Function virtual void MPI::Comm::Scatter(const void*, int, const MPI::Datatype&, void*, int, const MPI::Datatype&, int) const (_ZNK3MPI4Comm7ScatterEPKviRKNS_8DatatypeEPviS5_i, funcdef_no=2577, decl_uid=49694, symbol_order=991)

virtual void MPI::Comm::Scatter(const void*, int, const MPI::Datatype&, void*, int, const MPI::Datatype&, int) const (const struct Comm * const this, const void * sendbuf, int sendcount, const struct Datatype & sendtype, void * recvbuf, int recvcount, const struct Datatype & recvtype, int root)
{
  struct ompi_communicator_t * _3;
  struct ompi_datatype_t * const _5;
  struct ompi_datatype_t * const _7;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  _5 = MEM[(struct ompi_datatype_t * *)recvtype_4(D) + 8B];
  _7 = MEM[(struct ompi_datatype_t * *)sendtype_6(D) + 8B];
  MPI_Scatter (sendbuf_8(D), sendcount_9(D), _7, recvbuf_10(D), recvcount_11(D), _5, root_12(D), _3); [tail call]
  return;

}



;; Function virtual void MPI::Comm::Gatherv(const void*, int, const MPI::Datatype&, void*, const int*, const int*, const MPI::Datatype&, int) const (_ZNK3MPI4Comm7GathervEPKviRKNS_8DatatypeEPvPKiS8_S5_i, funcdef_no=2576, decl_uid=49685, symbol_order=990)

virtual void MPI::Comm::Gatherv(const void*, int, const MPI::Datatype&, void*, const int*, const int*, const MPI::Datatype&, int) const (const struct Comm * const this, const void * sendbuf, int sendcount, const struct Datatype & sendtype, void * recvbuf, const int * recvcounts, const int * displs, const struct Datatype & recvtype, int root)
{
  struct ompi_communicator_t * _3;
  struct ompi_datatype_t * const _5;
  struct ompi_datatype_t * const _7;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  _5 = MEM[(struct ompi_datatype_t * *)recvtype_4(D) + 8B];
  _7 = MEM[(struct ompi_datatype_t * *)sendtype_6(D) + 8B];
  MPI_Gatherv (sendbuf_8(D), sendcount_9(D), _7, recvbuf_10(D), recvcounts_11(D), displs_12(D), _5, root_13(D), _3); [tail call]
  return;

}



;; Function virtual void MPI::Comm::Gather(const void*, int, const MPI::Datatype&, void*, int, const MPI::Datatype&, int) const (_ZNK3MPI4Comm6GatherEPKviRKNS_8DatatypeEPviS5_i, funcdef_no=2575, decl_uid=49675, symbol_order=989)

virtual void MPI::Comm::Gather(const void*, int, const MPI::Datatype&, void*, int, const MPI::Datatype&, int) const (const struct Comm * const this, const void * sendbuf, int sendcount, const struct Datatype & sendtype, void * recvbuf, int recvcount, const struct Datatype & recvtype, int root)
{
  struct ompi_communicator_t * _3;
  struct ompi_datatype_t * const _5;
  struct ompi_datatype_t * const _7;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  _5 = MEM[(struct ompi_datatype_t * *)recvtype_4(D) + 8B];
  _7 = MEM[(struct ompi_datatype_t * *)sendtype_6(D) + 8B];
  MPI_Gather (sendbuf_8(D), sendcount_9(D), _7, recvbuf_10(D), recvcount_11(D), _5, root_12(D), _3); [tail call]
  return;

}



;; Function virtual void MPI::Comm::Bcast(void*, int, const MPI::Datatype&, int) const (_ZNK3MPI4Comm5BcastEPviRKNS_8DatatypeEi, funcdef_no=2574, decl_uid=49666, symbol_order=988)

virtual void MPI::Comm::Bcast(void*, int, const MPI::Datatype&, int) const (const struct Comm * const this, void * buffer, int count, const struct Datatype & datatype, int root)
{
  struct ompi_communicator_t * _3;
  struct ompi_datatype_t * const _5;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  _5 = MEM[(struct ompi_datatype_t * *)datatype_4(D) + 8B];
  MPI_Bcast (buffer_6(D), count_7(D), _5, root_8(D), _3); [tail call]
  return;

}



;; Function virtual void MPI::Comm::Free() (_ZN3MPI4Comm4FreeEv, funcdef_no=2571, decl_uid=49656, symbol_order=985)

virtual void MPI::Comm::Free() (struct Comm * const this)
{
  struct ompi_communicator_t * * _2;

  <bb 2>:
  _2 = &this_1(D)->D.49897.mpi_comm;
  MPI_Comm_free (_2); [tail call]
  return;

}



;; Function virtual MPI::Intercomm& MPI::Intercomm::Clone() const (_ZNK3MPI9Intercomm5CloneEv, funcdef_no=2650, decl_uid=51056, symbol_order=1064)

virtual MPI::Intercomm& MPI::Intercomm::Clone() const (const struct Intercomm * const this)
{
  struct ompi_communicator_t * newcomm;
  struct ompi_communicator_t * _3;
  void * _6;
  struct ompi_communicator_t * newcomm.84_7;

  <bb 2>:
  _3 = this_2(D)->D.51106.D.49897.mpi_comm;
  MPI_Comm_dup (_3, &newcomm);
  _6 = operator new (16);
  newcomm.84_7 = newcomm;
  MEM[(struct Comm_Null *)_6].mpi_comm = newcomm.84_7;
  MEM[(struct Intercomm *)_6].D.51106.D.49897._vptr.Comm_Null = &MEM[(void *)&_ZTVN3MPI9IntercommE + 16B];
  newcomm ={v} {CLOBBER};
  return _6;

}



;; Function virtual MPI::Group MPI::Comm::Get_group() const (_ZNK3MPI4Comm9Get_groupEv, funcdef_no=2567, decl_uid=49645, symbol_order=981)

virtual MPI::Group MPI::Comm::Get_group() const (const struct Comm * const this)
{
  struct ompi_group_t * group;
  struct ompi_communicator_t * _3;
  struct ompi_group_t * group.86_5;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  MPI_Comm_group (_3, &group);
  group.86_5 = group;
  _6(D)->_vptr.Group = &MEM[(void *)&_ZTVN3MPI5GroupE + 16B];
  _6(D)->mpi_group = group.86_5;
  group ={v} {CLOBBER};
  return _6(D);

}



;; Function virtual void MPI::Comm::Sendrecv_replace(void*, int, const MPI::Datatype&, int, int, int, int) const (_ZNK3MPI4Comm16Sendrecv_replaceEPviRKNS_8DatatypeEiiii, funcdef_no=2566, decl_uid=49643, symbol_order=980)

virtual void MPI::Comm::Sendrecv_replace(void*, int, const MPI::Datatype&, int, int, int, int) const (const struct Comm * const this, void * buf, int count, const struct Datatype & datatype, int dest, int sendtag, int source, int recvtag)
{
  struct ompi_communicator_t * _3;
  struct ompi_datatype_t * const _5;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  _5 = MEM[(struct ompi_datatype_t * *)datatype_4(D) + 8B];
  MPI_Sendrecv_replace (buf_6(D), count_7(D), _5, dest_8(D), sendtag_9(D), source_10(D), recvtag_11(D), _3, 0B); [tail call]
  return;

}



;; Function virtual void MPI::Comm::Sendrecv_replace(void*, int, const MPI::Datatype&, int, int, int, int, MPI::Status&) const (_ZNK3MPI4Comm16Sendrecv_replaceEPviRKNS_8DatatypeEiiiiRNS_6StatusE, funcdef_no=2565, decl_uid=49634, symbol_order=979)

virtual void MPI::Comm::Sendrecv_replace(void*, int, const MPI::Datatype&, int, int, int, int, MPI::Status&) const (const struct Comm * const this, void * buf, int count, const struct Datatype & datatype, int dest, int sendtag, int source, int recvtag, struct Status & status)
{
  struct MPI_Status * _2;
  struct ompi_communicator_t * _5;
  struct ompi_datatype_t * const _7;

  <bb 2>:
  _2 = &status_1(D)->mpi_status;
  _5 = this_4(D)->D.49897.mpi_comm;
  _7 = MEM[(struct ompi_datatype_t * *)datatype_6(D) + 8B];
  MPI_Sendrecv_replace (buf_8(D), count_9(D), _7, dest_10(D), sendtag_11(D), source_12(D), recvtag_13(D), _5, _2); [tail call]
  return;

}



;; Function virtual void MPI::Comm::Sendrecv(const void*, int, const MPI::Datatype&, int, int, void*, int, const MPI::Datatype&, int, int) const (_ZNK3MPI4Comm8SendrecvEPKviRKNS_8DatatypeEiiPviS5_ii, funcdef_no=2564, decl_uid=49624, symbol_order=978)

virtual void MPI::Comm::Sendrecv(const void*, int, const MPI::Datatype&, int, int, void*, int, const MPI::Datatype&, int, int) const (const struct Comm * const this, const void * sendbuf, int sendcount, const struct Datatype & sendtype, int dest, int sendtag, void * recvbuf, int recvcount, const struct Datatype & recvtype, int source, int recvtag)
{
  struct ompi_communicator_t * _3;
  struct ompi_datatype_t * const _5;
  struct ompi_datatype_t * const _7;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  _5 = MEM[(struct ompi_datatype_t * *)recvtype_4(D) + 8B];
  _7 = MEM[(struct ompi_datatype_t * *)sendtype_6(D) + 8B];
  MPI_Sendrecv (sendbuf_8(D), sendcount_9(D), _7, dest_10(D), sendtag_11(D), recvbuf_12(D), recvcount_13(D), _5, source_14(D), recvtag_15(D), _3, 0B); [tail call]
  return;

}



;; Function virtual void MPI::Comm::Sendrecv(const void*, int, const MPI::Datatype&, int, int, void*, int, const MPI::Datatype&, int, int, MPI::Status&) const (_ZNK3MPI4Comm8SendrecvEPKviRKNS_8DatatypeEiiPviS5_iiRNS_6StatusE, funcdef_no=2563, decl_uid=49612, symbol_order=977)

virtual void MPI::Comm::Sendrecv(const void*, int, const MPI::Datatype&, int, int, void*, int, const MPI::Datatype&, int, int, MPI::Status&) const (const struct Comm * const this, const void * sendbuf, int sendcount, const struct Datatype & sendtype, int dest, int sendtag, void * recvbuf, int recvcount, const struct Datatype & recvtype, int source, int recvtag, struct Status & status)
{
  struct MPI_Status * _2;
  struct ompi_communicator_t * _5;
  struct ompi_datatype_t * const _7;
  struct ompi_datatype_t * const _9;

  <bb 2>:
  _2 = &status_1(D)->mpi_status;
  _5 = this_4(D)->D.49897.mpi_comm;
  _7 = MEM[(struct ompi_datatype_t * *)recvtype_6(D) + 8B];
  _9 = MEM[(struct ompi_datatype_t * *)sendtype_8(D) + 8B];
  MPI_Sendrecv (sendbuf_10(D), sendcount_11(D), _9, dest_12(D), sendtag_13(D), recvbuf_14(D), recvcount_15(D), _7, source_16(D), recvtag_17(D), _5, _2); [tail call]
  return;

}



;; Function virtual MPI::Prequest MPI::Comm::Recv_init(void*, int, const MPI::Datatype&, int, int) const (_ZNK3MPI4Comm9Recv_initEPviRKNS_8DatatypeEii, funcdef_no=2562, decl_uid=49599, symbol_order=976)

virtual MPI::Prequest MPI::Comm::Recv_init(void*, int, const MPI::Datatype&, int, int) const (const struct Comm * const this, void * buf, int count, const struct Datatype & datatype, int source, int tag)
{
  struct ompi_request_t * request;
  struct ompi_communicator_t * _3;
  struct ompi_datatype_t * const _5;
  struct ompi_request_t * _13;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  _5 = MEM[(struct ompi_datatype_t * *)datatype_4(D) + 8B];
  MPI_Recv_init (buf_6(D), count_7(D), _5, source_8(D), tag_9(D), _3, &request);
  _13 = request;
  MEM[(struct Request *)_11(D)].mpi_request = _13;
  _11(D)->D.49126._vptr.Request = &MEM[(void *)&_ZTVN3MPI8PrequestE + 16B];
  request ={v} {CLOBBER};
  return _11(D);

}



;; Function virtual MPI::Prequest MPI::Comm::Rsend_init(const void*, int, const MPI::Datatype&, int, int) const (_ZNK3MPI4Comm10Rsend_initEPKviRKNS_8DatatypeEii, funcdef_no=2561, decl_uid=49592, symbol_order=975)

virtual MPI::Prequest MPI::Comm::Rsend_init(const void*, int, const MPI::Datatype&, int, int) const (const struct Comm * const this, const void * buf, int count, const struct Datatype & datatype, int dest, int tag)
{
  struct ompi_request_t * request;
  struct ompi_communicator_t * _3;
  struct ompi_datatype_t * const _5;
  struct ompi_request_t * _13;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  _5 = MEM[(struct ompi_datatype_t * *)datatype_4(D) + 8B];
  MPI_Rsend_init (buf_6(D), count_7(D), _5, dest_8(D), tag_9(D), _3, &request);
  _13 = request;
  MEM[(struct Request *)_11(D)].mpi_request = _13;
  _11(D)->D.49126._vptr.Request = &MEM[(void *)&_ZTVN3MPI8PrequestE + 16B];
  request ={v} {CLOBBER};
  return _11(D);

}



;; Function virtual MPI::Prequest MPI::Comm::Ssend_init(const void*, int, const MPI::Datatype&, int, int) const (_ZNK3MPI4Comm10Ssend_initEPKviRKNS_8DatatypeEii, funcdef_no=2560, decl_uid=49585, symbol_order=974)

virtual MPI::Prequest MPI::Comm::Ssend_init(const void*, int, const MPI::Datatype&, int, int) const (const struct Comm * const this, const void * buf, int count, const struct Datatype & datatype, int dest, int tag)
{
  struct ompi_request_t * request;
  struct ompi_communicator_t * _3;
  struct ompi_datatype_t * const _5;
  struct ompi_request_t * _13;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  _5 = MEM[(struct ompi_datatype_t * *)datatype_4(D) + 8B];
  MPI_Ssend_init (buf_6(D), count_7(D), _5, dest_8(D), tag_9(D), _3, &request);
  _13 = request;
  MEM[(struct Request *)_11(D)].mpi_request = _13;
  _11(D)->D.49126._vptr.Request = &MEM[(void *)&_ZTVN3MPI8PrequestE + 16B];
  request ={v} {CLOBBER};
  return _11(D);

}



;; Function virtual MPI::Prequest MPI::Comm::Bsend_init(const void*, int, const MPI::Datatype&, int, int) const (_ZNK3MPI4Comm10Bsend_initEPKviRKNS_8DatatypeEii, funcdef_no=2559, decl_uid=49578, symbol_order=973)

virtual MPI::Prequest MPI::Comm::Bsend_init(const void*, int, const MPI::Datatype&, int, int) const (const struct Comm * const this, const void * buf, int count, const struct Datatype & datatype, int dest, int tag)
{
  struct ompi_request_t * request;
  struct ompi_communicator_t * _3;
  struct ompi_datatype_t * const _5;
  struct ompi_request_t * _13;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  _5 = MEM[(struct ompi_datatype_t * *)datatype_4(D) + 8B];
  MPI_Bsend_init (buf_6(D), count_7(D), _5, dest_8(D), tag_9(D), _3, &request);
  _13 = request;
  MEM[(struct Request *)_11(D)].mpi_request = _13;
  _11(D)->D.49126._vptr.Request = &MEM[(void *)&_ZTVN3MPI8PrequestE + 16B];
  request ={v} {CLOBBER};
  return _11(D);

}



;; Function virtual MPI::Prequest MPI::Comm::Send_init(const void*, int, const MPI::Datatype&, int, int) const (_ZNK3MPI4Comm9Send_initEPKviRKNS_8DatatypeEii, funcdef_no=2555, decl_uid=49571, symbol_order=972)

virtual MPI::Prequest MPI::Comm::Send_init(const void*, int, const MPI::Datatype&, int, int) const (const struct Comm * const this, const void * buf, int count, const struct Datatype & datatype, int dest, int tag)
{
  struct ompi_request_t * request;
  struct ompi_communicator_t * _3;
  struct ompi_datatype_t * const _5;
  struct ompi_request_t * _13;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  _5 = MEM[(struct ompi_datatype_t * *)datatype_4(D) + 8B];
  MPI_Send_init (buf_6(D), count_7(D), _5, dest_8(D), tag_9(D), _3, &request);
  _13 = request;
  MEM[(struct Request *)_11(D)].mpi_request = _13;
  _11(D)->D.49126._vptr.Request = &MEM[(void *)&_ZTVN3MPI8PrequestE + 16B];
  request ={v} {CLOBBER};
  return _11(D);

}



;; Function virtual void MPI::Comm::Probe(int, int) const (_ZNK3MPI4Comm5ProbeEii, funcdef_no=2554, decl_uid=49564, symbol_order=968)

virtual void MPI::Comm::Probe(int, int) const (const struct Comm * const this, int source, int tag)
{
  struct ompi_communicator_t * _3;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  MPI_Probe (source_4(D), tag_5(D), _3, 0B); [tail call]
  return;

}



;; Function virtual void MPI::Comm::Probe(int, int, MPI::Status&) const (_ZNK3MPI4Comm5ProbeEiiRNS_6StatusE, funcdef_no=2553, decl_uid=49560, symbol_order=967)

virtual void MPI::Comm::Probe(int, int, MPI::Status&) const (const struct Comm * const this, int source, int tag, struct Status & status)
{
  struct MPI_Status * _2;
  struct ompi_communicator_t * _5;

  <bb 2>:
  _2 = &status_1(D)->mpi_status;
  _5 = this_4(D)->D.49897.mpi_comm;
  MPI_Probe (source_6(D), tag_7(D), _5, _2); [tail call]
  return;

}



;; Function virtual bool MPI::Comm::Iprobe(int, int) const (_ZNK3MPI4Comm6IprobeEii, funcdef_no=2552, decl_uid=49555, symbol_order=966)

virtual bool MPI::Comm::Iprobe(int, int) const (const struct Comm * const this, int source, int tag)
{
  int t;
  struct ompi_communicator_t * _3;
  int t.87_7;
  bool _8;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  MPI_Iprobe (source_4(D), tag_5(D), _3, &t, 0B);
  t.87_7 = t;
  _8 = t.87_7 != 0;
  t ={v} {CLOBBER};
  return _8;

}



;; Function virtual bool MPI::Comm::Iprobe(int, int, MPI::Status&) const (_ZNK3MPI4Comm6IprobeEiiRNS_6StatusE, funcdef_no=2551, decl_uid=49551, symbol_order=965)

virtual bool MPI::Comm::Iprobe(int, int, MPI::Status&) const (const struct Comm * const this, int source, int tag, struct Status & status)
{
  int t;
  struct MPI_Status * _2;
  struct ompi_communicator_t * _5;
  int t.88_9;
  bool _10;

  <bb 2>:
  _2 = &status_1(D)->mpi_status;
  _5 = this_4(D)->D.49897.mpi_comm;
  MPI_Iprobe (source_6(D), tag_7(D), _5, &t, _2);
  t.88_9 = t;
  _10 = t.88_9 != 0;
  t ={v} {CLOBBER};
  return _10;

}



;; Function virtual MPI::Request MPI::Comm::Irsend(const void*, int, const MPI::Datatype&, int, int) const (_ZNK3MPI4Comm6IrsendEPKviRKNS_8DatatypeEii, funcdef_no=2549, decl_uid=49539, symbol_order=963)

virtual MPI::Request MPI::Comm::Irsend(const void*, int, const MPI::Datatype&, int, int) const (const struct Comm * const this, const void * buf, int count, const struct Datatype & datatype, int dest, int tag)
{
  struct ompi_request_t * request;
  struct ompi_communicator_t * _3;
  struct ompi_datatype_t * const _5;
  struct ompi_request_t * request.89_11;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  _5 = MEM[(struct ompi_datatype_t * *)datatype_4(D) + 8B];
  MPI_Irsend (buf_6(D), count_7(D), _5, dest_8(D), tag_9(D), _3, &request);
  request.89_11 = request;
  _12(D)->_vptr.Request = &MEM[(void *)&_ZTVN3MPI7RequestE + 16B];
  _12(D)->mpi_request = request.89_11;
  request ={v} {CLOBBER};
  return _12(D);

}



;; Function virtual MPI::Request MPI::Comm::Issend(const void*, int, const MPI::Datatype&, int, int) const (_ZNK3MPI4Comm6IssendEPKviRKNS_8DatatypeEii, funcdef_no=2548, decl_uid=49532, symbol_order=962)

virtual MPI::Request MPI::Comm::Issend(const void*, int, const MPI::Datatype&, int, int) const (const struct Comm * const this, const void * buf, int count, const struct Datatype & datatype, int dest, int tag)
{
  struct ompi_request_t * request;
  struct ompi_communicator_t * _3;
  struct ompi_datatype_t * const _5;
  struct ompi_request_t * request.90_11;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  _5 = MEM[(struct ompi_datatype_t * *)datatype_4(D) + 8B];
  MPI_Issend (buf_6(D), count_7(D), _5, dest_8(D), tag_9(D), _3, &request);
  request.90_11 = request;
  _12(D)->_vptr.Request = &MEM[(void *)&_ZTVN3MPI7RequestE + 16B];
  _12(D)->mpi_request = request.90_11;
  request ={v} {CLOBBER};
  return _12(D);

}



;; Function virtual MPI::Request MPI::Comm::Ibsend(const void*, int, const MPI::Datatype&, int, int) const (_ZNK3MPI4Comm6IbsendEPKviRKNS_8DatatypeEii, funcdef_no=2547, decl_uid=49525, symbol_order=961)

virtual MPI::Request MPI::Comm::Ibsend(const void*, int, const MPI::Datatype&, int, int) const (const struct Comm * const this, const void * buf, int count, const struct Datatype & datatype, int dest, int tag)
{
  struct ompi_request_t * request;
  struct ompi_communicator_t * _3;
  struct ompi_datatype_t * const _5;
  struct ompi_request_t * request.91_11;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  _5 = MEM[(struct ompi_datatype_t * *)datatype_4(D) + 8B];
  MPI_Ibsend (buf_6(D), count_7(D), _5, dest_8(D), tag_9(D), _3, &request);
  request.91_11 = request;
  _12(D)->_vptr.Request = &MEM[(void *)&_ZTVN3MPI7RequestE + 16B];
  _12(D)->mpi_request = request.91_11;
  request ={v} {CLOBBER};
  return _12(D);

}



;; Function virtual void MPI::Comm::Rsend(const void*, int, const MPI::Datatype&, int, int) const (_ZNK3MPI4Comm5RsendEPKviRKNS_8DatatypeEii, funcdef_no=2545, decl_uid=49511, symbol_order=959)

virtual void MPI::Comm::Rsend(const void*, int, const MPI::Datatype&, int, int) const (const struct Comm * const this, const void * buf, int count, const struct Datatype & datatype, int dest, int tag)
{
  struct ompi_communicator_t * _3;
  struct ompi_datatype_t * const _5;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  _5 = MEM[(struct ompi_datatype_t * *)datatype_4(D) + 8B];
  MPI_Rsend (buf_6(D), count_7(D), _5, dest_8(D), tag_9(D), _3); [tail call]
  return;

}



;; Function virtual void MPI::Comm::Ssend(const void*, int, const MPI::Datatype&, int, int) const (_ZNK3MPI4Comm5SsendEPKviRKNS_8DatatypeEii, funcdef_no=2544, decl_uid=49504, symbol_order=958)

virtual void MPI::Comm::Ssend(const void*, int, const MPI::Datatype&, int, int) const (const struct Comm * const this, const void * buf, int count, const struct Datatype & datatype, int dest, int tag)
{
  struct ompi_communicator_t * _3;
  struct ompi_datatype_t * const _5;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  _5 = MEM[(struct ompi_datatype_t * *)datatype_4(D) + 8B];
  MPI_Ssend (buf_6(D), count_7(D), _5, dest_8(D), tag_9(D), _3); [tail call]
  return;

}



;; Function virtual void MPI::Comm::Bsend(const void*, int, const MPI::Datatype&, int, int) const (_ZNK3MPI4Comm5BsendEPKviRKNS_8DatatypeEii, funcdef_no=2543, decl_uid=49497, symbol_order=957)

virtual void MPI::Comm::Bsend(const void*, int, const MPI::Datatype&, int, int) const (const struct Comm * const this, const void * buf, int count, const struct Datatype & datatype, int dest, int tag)
{
  struct ompi_communicator_t * _3;
  struct ompi_datatype_t * const _5;

  <bb 2>:
  _3 = this_2(D)->D.49897.mpi_comm;
  _5 = MEM[(struct ompi_datatype_t * *)datatype_4(D) + 8B];
  MPI_Bsend (buf_6(D), count_7(D), _5, dest_8(D), tag_9(D), _3); [tail call]
  return;

}



;; Function virtual int MPI::Graphcomm::Map(int, const int*, const int*) const (_ZNK3MPI9Graphcomm3MapEiPKiS2_, funcdef_no=2647, decl_uid=50981, symbol_order=1061)

virtual int MPI::Graphcomm::Map(int, const int*, const int*) const (const struct Graphcomm * const this, int nnodes, const int * index, const int * edges)
{
  int newrank;
  struct ompi_communicator_t * _3;
  int _8;

  <bb 2>:
  _3 = this_2(D)->D.51017.D.50796.D.49897.mpi_comm;
  MPI_Graph_map (_3, nnodes_4(D), index_5(D), edges_6(D), &newrank);
  _8 = newrank;
  newrank ={v} {CLOBBER};
  return _8;

}



;; Function virtual void MPI::Graphcomm::Get_neighbors(int, int, int*) const (_ZNK3MPI9Graphcomm13Get_neighborsEiiPi, funcdef_no=2646, decl_uid=50976, symbol_order=1060)

virtual void MPI::Graphcomm::Get_neighbors(int, int, int*) const (const struct Graphcomm * const this, int rank, int maxneighbors, int * neighbors)
{
  struct ompi_communicator_t * _3;

  <bb 2>:
  _3 = this_2(D)->D.51017.D.50796.D.49897.mpi_comm;
  MPI_Graph_neighbors (_3, rank_4(D), maxneighbors_5(D), neighbors_6(D)); [tail call]
  return;

}



;; Function virtual int MPI::Graphcomm::Get_neighbors_count(int) const (_ZNK3MPI9Graphcomm19Get_neighbors_countEi, funcdef_no=2645, decl_uid=50971, symbol_order=1059)

virtual int MPI::Graphcomm::Get_neighbors_count(int) const (const struct Graphcomm * const this, int rank)
{
  int nneighbors;
  struct ompi_communicator_t * _3;
  int _6;

  <bb 2>:
  _3 = this_2(D)->D.51017.D.50796.D.49897.mpi_comm;
  MPI_Graph_neighbors_count (_3, rank_4(D), &nneighbors);
  _6 = nneighbors;
  nneighbors ={v} {CLOBBER};
  return _6;

}



;; Function virtual void MPI::Graphcomm::Get_topo(int, int, int*, int*) const (_ZNK3MPI9Graphcomm8Get_topoEiiPiS1_, funcdef_no=2644, decl_uid=50968, symbol_order=1058)

virtual void MPI::Graphcomm::Get_topo(int, int, int*, int*) const (const struct Graphcomm * const this, int maxindex, int maxedges, int * index, int * edges)
{
  struct ompi_communicator_t * _3;

  <bb 2>:
  _3 = this_2(D)->D.51017.D.50796.D.49897.mpi_comm;
  MPI_Graph_get (_3, maxindex_4(D), maxedges_5(D), index_6(D), edges_7(D)); [tail call]
  return;

}



;; Function virtual void MPI::Graphcomm::Get_dims(int*, int*) const (_ZNK3MPI9Graphcomm8Get_dimsEPiS1_, funcdef_no=2643, decl_uid=50962, symbol_order=1057)

virtual void MPI::Graphcomm::Get_dims(int*, int*) const (const struct Graphcomm * const this, int * nnodes, int * nedges)
{
  struct ompi_communicator_t * _3;

  <bb 2>:
  _3 = this_2(D)->D.51017.D.50796.D.49897.mpi_comm;
  MPI_Graphdims_get (_3, nnodes_4(D), nedges_5(D)); [tail call]
  return;

}



;; Function virtual MPI::Intercomm MPI::Intracomm::Spawn_multiple(int, const char**, const char***, const int*, const MPI::Info*, int, int*) (_ZN3MPI9Intracomm14Spawn_multipleEiPPKcPS3_PKiPKNS_4InfoEiPi, funcdef_no=2626, decl_uid=50757, symbol_order=1040)

Removing basic block 8
Removing basic block 9
Removing basic block 10
virtual MPI::Intercomm MPI::Intracomm::Spawn_multiple(int, const char**, const char***, const int*, const MPI::Info*, int, int*) (struct Intracomm * const this, int count, const char * * array_of_commands, const char * * * array_of_argv, const int * array_of_maxprocs, const struct Info * array_of_info, int root, int * array_of_errcodes)
{
  sizetype ivtmp.723;
  struct ompi_communicator_t * newcomm;
  sizetype _1;
  sizetype _5;
  struct ompi_communicator_t * _8;
  struct ompi_communicator_t * newcomm.92_16;
  unsigned int _18;
  unsigned int _21;
  sizetype _23;
  size_t iftmp.93_24;
  struct ompi_info_t * * const _25;
  struct ompi_info_t * const _32;
  sizetype _42;

  <bb 2>:
  _23 = (sizetype) count_3(D);
  if (_23 <= 1143914305352105984)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  iftmp.93_24 = _23 * 8;
  _25 = operator new [] (iftmp.93_24);
  if (count_3(D) > 0)
    goto <bb 6>;
  else
    goto <bb 4>;

  <bb 4>:
  _8 = this_7(D)->D.50796.D.49897.mpi_comm;
  MPI_Comm_spawn_multiple (count_3(D), array_of_commands_9(D), array_of_argv_10(D), array_of_maxprocs_11(D), _25, root_12(D), _8, &newcomm, array_of_errcodes_13(D));
  operator delete [] (_25);
  newcomm.92_16 = newcomm;
  MEM[(struct Comm_Null *)_17(D)].mpi_comm = newcomm.92_16;
  _17(D)->D.51106.D.49897._vptr.Comm_Null = &MEM[(void *)&_ZTVN3MPI9IntercommE + 16B];
  newcomm ={v} {CLOBBER};
  return _17(D);

  <bb 5>:
  __cxa_throw_bad_array_new_length ();

  <bb 6>:
  _21 = (unsigned int) count_3(D);
  _18 = _21 + 4294967295;
  _5 = (sizetype) _18;
  _1 = _5 + 1;
  _42 = _1 * 8;

  <bb 7>:
  # ivtmp.723_6 = PHI <0(6), ivtmp.723_36(7)>
  _32 = MEM[base: array_of_info_4(D), index: ivtmp.723_6, step: 2, offset: 8B];
  MEM[base: _25, index: ivtmp.723_6, offset: 0B] = _32;
  ivtmp.723_36 = ivtmp.723_6 + 8;
  if (ivtmp.723_36 != _42)
    goto <bb 7>;
  else
    goto <bb 4>;

}



;; Function virtual MPI::Intercomm MPI::Intracomm::Spawn(const char*, const char**, int, const MPI::Info&, int, int*) const (_ZNK3MPI9Intracomm5SpawnEPKcPS2_iRKNS_4InfoEiPi, funcdef_no=2623, decl_uid=50740, symbol_order=1037)

virtual MPI::Intercomm MPI::Intracomm::Spawn(const char*, const char**, int, const MPI::Info&, int, int*) const (const struct Intracomm * const this, const char * command, const char * * argv, int maxprocs, const struct Info & info, int root, int * array_of_errcodes)
{
  struct ompi_communicator_t * newcomm;
  struct ompi_communicator_t * _3;
  struct ompi_info_t * const _5;
  struct ompi_communicator_t * newcomm.95_12;

  <bb 2>:
  _3 = this_2(D)->D.50796.D.49897.mpi_comm;
  _5 = MEM[(struct ompi_info_t * *)info_4(D) + 8B];
  MPI_Comm_spawn (command_6(D), argv_7(D), maxprocs_8(D), _5, root_9(D), _3, &newcomm, array_of_errcodes_10(D));
  newcomm.95_12 = newcomm;
  MEM[(struct Comm_Null *)_13(D)].mpi_comm = newcomm.95_12;
  _13(D)->D.51106.D.49897._vptr.Comm_Null = &MEM[(void *)&_ZTVN3MPI9IntercommE + 16B];
  newcomm ={v} {CLOBBER};
  return _13(D);

}



;; Function virtual MPI::Intercomm MPI::Intracomm::Spawn(const char*, const char**, int, const MPI::Info&, int) const (_ZNK3MPI9Intracomm5SpawnEPKcPS2_iRKNS_4InfoEi, funcdef_no=2622, decl_uid=50732, symbol_order=1036)

virtual MPI::Intercomm MPI::Intracomm::Spawn(const char*, const char**, int, const MPI::Info&, int) const (const struct Intracomm * const this, const char * command, const char * * argv, int maxprocs, const struct Info & info, int root)
{
  struct ompi_communicator_t * newcomm;
  struct ompi_communicator_t * _3;
  struct ompi_info_t * const _5;
  struct ompi_communicator_t * newcomm.96_11;

  <bb 2>:
  _3 = this_2(D)->D.50796.D.49897.mpi_comm;
  _5 = MEM[(struct ompi_info_t * *)info_4(D) + 8B];
  MPI_Comm_spawn (command_6(D), argv_7(D), maxprocs_8(D), _5, root_9(D), _3, &newcomm, 0B);
  newcomm.96_11 = newcomm;
  MEM[(struct Comm_Null *)_12(D)].mpi_comm = newcomm.96_11;
  _12(D)->D.51106.D.49897._vptr.Comm_Null = &MEM[(void *)&_ZTVN3MPI9IntercommE + 16B];
  newcomm ={v} {CLOBBER};
  return _12(D);

}



;; Function virtual MPI::Intercomm MPI::Intracomm::Connect(const char*, const MPI::Info&, int) const (_ZNK3MPI9Intracomm7ConnectEPKcRKNS_4InfoEi, funcdef_no=2621, decl_uid=50725, symbol_order=1035)

virtual MPI::Intercomm MPI::Intracomm::Connect(const char*, const MPI::Info&, int) const (const struct Intracomm * const this, const char * port_name, const struct Info & info, int root)
{
  struct ompi_communicator_t * newcomm;
  struct ompi_communicator_t * _3;
  struct ompi_info_t * const _5;
  struct ompi_communicator_t * newcomm.97_9;

  <bb 2>:
  _3 = this_2(D)->D.50796.D.49897.mpi_comm;
  _5 = MEM[(struct ompi_info_t * *)info_4(D) + 8B];
  MPI_Comm_connect (port_name_6(D), _5, root_7(D), _3, &newcomm);
  newcomm.97_9 = newcomm;
  MEM[(struct Comm_Null *)_10(D)].mpi_comm = newcomm.97_9;
  _10(D)->D.51106.D.49897._vptr.Comm_Null = &MEM[(void *)&_ZTVN3MPI9IntercommE + 16B];
  newcomm ={v} {CLOBBER};
  return _10(D);

}



;; Function virtual MPI::Intercomm MPI::Intracomm::Accept(const char*, const MPI::Info&, int) const (_ZNK3MPI9Intracomm6AcceptEPKcRKNS_4InfoEi, funcdef_no=2620, decl_uid=50720, symbol_order=1034)

virtual MPI::Intercomm MPI::Intracomm::Accept(const char*, const MPI::Info&, int) const (const struct Intracomm * const this, const char * port_name, const struct Info & info, int root)
{
  struct ompi_communicator_t * newcomm;
  struct ompi_communicator_t * _3;
  struct ompi_info_t * const _5;
  struct ompi_communicator_t * newcomm.98_9;

  <bb 2>:
  _3 = this_2(D)->D.50796.D.49897.mpi_comm;
  _5 = MEM[(struct ompi_info_t * *)info_4(D) + 8B];
  MPI_Comm_accept (port_name_6(D), _5, root_7(D), _3, &newcomm);
  newcomm.98_9 = newcomm;
  MEM[(struct Comm_Null *)_10(D)].mpi_comm = newcomm.98_9;
  _10(D)->D.51106.D.49897._vptr.Comm_Null = &MEM[(void *)&_ZTVN3MPI9IntercommE + 16B];
  newcomm ={v} {CLOBBER};
  return _10(D);

}



;; Function virtual MPI::Intercomm MPI::Intracomm::Create_intercomm(int, const MPI::Comm&, int, int) const (_ZNK3MPI9Intracomm16Create_intercommEiRKNS_4CommEii, funcdef_no=2617, decl_uid=50703, symbol_order=1031)

virtual MPI::Intercomm MPI::Intracomm::Create_intercomm(int, const MPI::Comm&, int, int) const (const struct Intracomm * const this, int local_leader, const struct Comm & peer_comm, int remote_leader, int tag)
{
  struct ompi_communicator_t * newintercomm;
  struct ompi_communicator_t * const _3;
  struct ompi_communicator_t * _5;
  struct ompi_communicator_t * newintercomm.102_10;

  <bb 2>:
  _3 = MEM[(struct ompi_communicator_t * *)peer_comm_1(D) + 8B];
  _5 = this_4(D)->D.50796.D.49897.mpi_comm;
  MPI_Intercomm_create (_5, local_leader_6(D), _3, remote_leader_7(D), tag_8(D), &newintercomm);
  newintercomm.102_10 = newintercomm;
  MEM[(struct Comm_Null *)_11(D)].mpi_comm = newintercomm.102_10;
  _11(D)->D.51106.D.49897._vptr.Comm_Null = &MEM[(void *)&_ZTVN3MPI9IntercommE + 16B];
  newintercomm ={v} {CLOBBER};
  return _11(D);

}



;; Function virtual void MPI::Intracomm::Exscan(const void*, void*, int, const MPI::Datatype&, const MPI::Op&) const (_ZNK3MPI9Intracomm6ExscanEPKvPviRKNS_8DatatypeERKNS_2OpE, funcdef_no=2612, decl_uid=50686, symbol_order=1026)

virtual void MPI::Intracomm::Exscan(const void*, void*, int, const MPI::Datatype&, const MPI::Op&) const (const struct Intracomm * const this, const void * sendbuf, void * recvbuf, int count, const struct Datatype & datatype, const struct Op & op)
{
  struct ompi_communicator_t * _3;
  struct ompi_op_t * const _5;
  struct ompi_datatype_t * const _7;

  <bb 2>:
  _3 = this_2(D)->D.50796.D.49897.mpi_comm;
  _5 = MEM[(struct ompi_op_t * *)op_4(D) + 8B];
  _7 = MEM[(struct ompi_datatype_t * *)datatype_6(D) + 8B];
  MPI_Exscan (sendbuf_8(D), recvbuf_9(D), count_10(D), _7, _5, _3); [tail call]
  return;

}



;; Function virtual void MPI::Intracomm::Scan(const void*, void*, int, const MPI::Datatype&, const MPI::Op&) const (_ZNK3MPI9Intracomm4ScanEPKvPviRKNS_8DatatypeERKNS_2OpE, funcdef_no=2611, decl_uid=50679, symbol_order=1025)

virtual void MPI::Intracomm::Scan(const void*, void*, int, const MPI::Datatype&, const MPI::Op&) const (const struct Intracomm * const this, const void * sendbuf, void * recvbuf, int count, const struct Datatype & datatype, const struct Op & op)
{
  struct ompi_communicator_t * _3;
  struct ompi_op_t * const _5;
  struct ompi_datatype_t * const _7;

  <bb 2>:
  _3 = this_2(D)->D.50796.D.49897.mpi_comm;
  _5 = MEM[(struct ompi_op_t * *)op_4(D) + 8B];
  _7 = MEM[(struct ompi_datatype_t * *)datatype_6(D) + 8B];
  MPI_Scan (sendbuf_8(D), recvbuf_9(D), count_10(D), _7, _5, _3); [tail call]
  return;

}



;; Function virtual int MPI::Cartcomm::Map(int, const int*, const bool*) const (_ZNK3MPI8Cartcomm3MapEiPKiPKb, funcdef_no=2637, decl_uid=50874, symbol_order=1051)

Removing basic block 7
Removing basic block 8
Removing basic block 9
Removing basic block 10
virtual int MPI::Cartcomm::Map(int, const int*, const bool*) const (const struct Cartcomm * const this, int ndims, const int * dims, const bool * periods)
{
  unsigned long ivtmp.742;
  int i;
  int newrank;
  int * int_periods;
  sizetype _5;
  size_t iftmp.106_6;
  bool _15;
  int _16;
  struct ompi_communicator_t * _20;
  int _24;

  <bb 2>:
  _5 = (sizetype) ndims_4(D);
  if (_5 <= 2287828610704211968)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  iftmp.106_6 = _5 * 4;
  int_periods_9 = operator new [] (iftmp.106_6);
  if (ndims_4(D) > 0)
    goto <bb 6>;
  else
    goto <bb 4>;

  <bb 4>:
  _20 = this_19(D)->D.50910.D.50796.D.49897.mpi_comm;
  MPI_Cart_map (_20, ndims_4(D), dims_21(D), int_periods_9, &newrank);
  operator delete [] (int_periods_9);
  _24 = newrank;
  newrank ={v} {CLOBBER};
  return _24;

  <bb 5>:
  __cxa_throw_bad_array_new_length ();

  <bb 6>:
  # ivtmp.742_29 = PHI <0(3), ivtmp.742_37(6)>
  _15 = MEM[base: periods_13(D), index: ivtmp.742_29, offset: 0B];
  _16 = (int) _15;
  MEM[base: int_periods_9, index: ivtmp.742_29, step: 4, offset: 0B] = _16;
  ivtmp.742_37 = ivtmp.742_29 + 1;
  i_36 = (int) ivtmp.742_37;
  if (ndims_4(D) > i_36)
    goto <bb 6>;
  else
    goto <bb 4>;

}



;; Function virtual int MPI::Cartcomm::Get_dim() const (_ZNK3MPI8Cartcomm7Get_dimEv, funcdef_no=2631, decl_uid=50846, symbol_order=1045)

virtual int MPI::Cartcomm::Get_dim() const (const struct Cartcomm * const this)
{
  int ndims;
  struct ompi_communicator_t * _3;
  int _5;

  <bb 2>:
  _3 = this_2(D)->D.50910.D.50796.D.49897.mpi_comm;
  MPI_Cartdim_get (_3, &ndims);
  _5 = ndims;
  ndims ={v} {CLOBBER};
  return _5;

}



;; Function virtual void MPI::Cartcomm::Get_coords(int, int, int*) const (_ZNK3MPI8Cartcomm10Get_coordsEiiPi, funcdef_no=2634, decl_uid=50860, symbol_order=1048)

virtual void MPI::Cartcomm::Get_coords(int, int, int*) const (const struct Cartcomm * const this, int rank, int maxdims, int * coords)
{
  struct ompi_communicator_t * _3;

  <bb 2>:
  _3 = this_2(D)->D.50910.D.50796.D.49897.mpi_comm;
  MPI_Cart_coords (_3, rank_4(D), maxdims_5(D), coords_6(D)); [tail call]
  return;

}



;; Function virtual int MPI::Cartcomm::Get_cart_rank(const int*) const (_ZNK3MPI8Cartcomm13Get_cart_rankEPKi, funcdef_no=2633, decl_uid=50855, symbol_order=1047)

virtual int MPI::Cartcomm::Get_cart_rank(const int*) const (const struct Cartcomm * const this, const int * coords)
{
  int rank;
  struct ompi_communicator_t * _3;
  int _6;

  <bb 2>:
  _3 = this_2(D)->D.50910.D.50796.D.49897.mpi_comm;
  MPI_Cart_rank (_3, coords_4(D), &rank);
  _6 = rank;
  rank ={v} {CLOBBER};
  return _6;

}



;; Function virtual void MPI::Cartcomm::Get_topo(int, int*, bool*, int*) const (_ZNK3MPI8Cartcomm8Get_topoEiPiPbS1_, funcdef_no=2632, decl_uid=50852, symbol_order=1046)

Removing basic block 49
Removing basic block 50
Removing basic block 51
Removing basic block 52
Removing basic block 53
Removing basic block 54
Removing basic block 55
Removing basic block 56
Removing basic block 57
Removing basic block 58
Removing basic block 59
Removing basic block 60
Removing basic block 61
Removing basic block 62
Removing basic block 63
Removing basic block 64
Removing basic block 65
Removing basic block 66
Removing basic block 67
Removing basic block 68
Removing basic block 69
Removing basic block 70
Removing basic block 71
Removing basic block 72
Removing basic block 73
Removing basic block 74
Removing basic block 75
Removing basic block 76
Removing basic block 77
Removing basic block 78
Removing basic block 79
Removing basic block 80
Removing basic block 81
Removing basic block 82
Removing basic block 83
Removing basic block 84
Removing basic block 85
Removing basic block 86
Removing basic block 87
Removing basic block 88
Removing basic block 89
virtual void MPI::Cartcomm::Get_topo(int, int*, bool*, int*) const (const struct Cartcomm * const this, int maxdims, int * dims, bool * periods, int * coords)
{
  unsigned long ivtmp.791;
  unsigned long ivtmp.783;
  unsigned long ivtmp.780;
  unsigned int ivtmp.778;
  vector(16) unsigned char * vectp_periods.777;
  vector(8) short unsigned int vect_patt_59.775;
  vector(16) unsigned char vect_patt_59.774;
  vector(4) unsigned int vect_patt_60.770;
  vector(4) int vect__30.769;
  vector(4) int vect__30.768;
  vector(4) int vect__30.767;
  vector(4) int vect__30.766;
  vector(4) int * vectp_int_periods.765;
  unsigned int ratio_mult_vf.762;
  unsigned int bnd.761;
  unsigned int niters.760;
  sizetype prolog_loop_adjusted_niters.759;
  unsigned int prologue_after_cost_adjust.758;
  unsigned int prolog_loop_niters.757;
  unsigned int niters.755;
  int i;
  int * int_periods;
  struct ompi_communicator_t * _1;
  bool _2;
  int _3;
  sizetype _7;
  size_t iftmp.109_8;
  unsigned int _12;
  bool _17;
  int _18;
  int _26;
  bool _27;
  sizetype _33;
  int * _39;
  unsigned int _42;
  struct ompi_communicator_t * _45;
  unsigned int _47;
  unsigned long _48;
  unsigned long _49;
  unsigned char patt_59;
  unsigned int _70;
  unsigned int _71;
  sizetype _75;
  bool * _76;
  long unsigned int _77;
  int * _78;
  int _79;
  bool _80;
  unsigned int _85;
  long unsigned int _87;
  sizetype _90;
  bool * _91;
  int _93;
  sizetype _95;
  bool * _120;
  long unsigned int _121;
  int * _122;
  int _123;
  bool _124;
  sizetype _129;
  bool * _130;
  long unsigned int _131;
  int * _132;
  int _133;
  bool _134;
  sizetype _139;
  bool * _140;
  long unsigned int _141;
  int * _142;
  int _143;
  bool _144;
  sizetype _149;
  bool * _150;
  long unsigned int _151;
  int * _152;
  int _153;
  bool _154;
  sizetype _159;
  bool * _160;
  long unsigned int _161;
  int * _162;
  int _163;
  bool _164;
  sizetype _169;
  bool * _170;
  long unsigned int _171;
  int * _172;
  int _173;
  bool _174;
  sizetype _179;
  bool * _180;
  long unsigned int _181;
  int * _182;
  int _183;
  bool _184;
  sizetype _189;
  bool * _190;
  long unsigned int _191;
  int * _192;
  int _193;
  bool _194;
  sizetype _199;
  bool * _200;
  long unsigned int _201;
  int * _202;
  int _203;
  bool _204;
  sizetype _209;
  bool * _210;
  long unsigned int _211;
  int * _212;
  int _213;
  bool _214;
  sizetype _219;
  bool * _220;
  long unsigned int _221;
  int * _222;
  int _223;
  bool _224;
  sizetype _229;
  bool * _230;
  long unsigned int _231;
  int * _232;
  int _233;
  bool _234;
  sizetype _239;
  bool * _240;
  long unsigned int _241;
  int * _242;
  int _243;
  bool _244;
  int _254;
  bool _255;
  int _266;
  bool _267;
  int _278;
  bool _279;
  int _290;
  bool _291;
  int _302;
  bool _303;
  int _314;
  bool _315;
  int _326;
  bool _327;
  int _338;
  bool _339;
  int _350;
  bool _351;
  int _362;
  bool _363;
  int _374;
  bool _375;
  int _386;
  bool _387;
  int _398;
  bool _399;
  int _410;
  bool _411;
  int _422;
  bool _423;
  void * _431;
  void * _435;

  <bb 2>:
  _7 = (sizetype) maxdims_6(D);
  if (_7 <= 2287828610704211968)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  iftmp.109_8 = _7 * 4;
  int_periods_11 = operator new [] (iftmp.109_8);
  if (maxdims_6(D) > 0)
    goto <bb 5>;
  else
    goto <bb 47>;

  <bb 4>:
  __cxa_throw_bad_array_new_length ();

  <bb 5>:
  # ivtmp.791_96 = PHI <0(3), ivtmp.791_99(5)>
  _17 = MEM[base: periods_15(D), index: ivtmp.791_96, offset: 0B];
  _18 = (int) _17;
  MEM[base: int_periods_11, index: ivtmp.791_96, step: 4, offset: 0B] = _18;
  ivtmp.791_99 = ivtmp.791_96 + 1;
  i_116 = (int) ivtmp.791_99;
  if (maxdims_6(D) > i_116)
    goto <bb 5>;
  else
    goto <bb 26>;

  <bb 6>:
  # ivtmp.778_249 = PHI <0(46), ivtmp.778_248(6)>
  # ivtmp.780_247 = PHI <ivtmp.780_64(46), ivtmp.780_61(6)>
  # ivtmp.783_428 = PHI <ivtmp.783_430(46), ivtmp.783_429(6)>
  _431 = (void *) ivtmp.780_247;
  vect__30.766_98 = MEM[base: _431, offset: 0B];
  vect__30.767_100 = MEM[base: _431, offset: 16B];
  vect__30.768_102 = MEM[base: _431, offset: 32B];
  vect__30.769_104 = MEM[base: _431, offset: 48B];
  vect_patt_60.770_108 = VEC_COND_EXPR <vect__30.766_98 != { 0, 0, 0, 0 }, { 1, 1, 1, 1 }, { 0, 0, 0, 0 }>;
  vect_patt_60.770_109 = VEC_COND_EXPR <vect__30.767_100 != { 0, 0, 0, 0 }, { 1, 1, 1, 1 }, { 0, 0, 0, 0 }>;
  vect_patt_60.770_110 = VEC_COND_EXPR <vect__30.768_102 != { 0, 0, 0, 0 }, { 1, 1, 1, 1 }, { 0, 0, 0, 0 }>;
  vect_patt_60.770_111 = VEC_COND_EXPR <vect__30.769_104 != { 0, 0, 0, 0 }, { 1, 1, 1, 1 }, { 0, 0, 0, 0 }>;
  vect_patt_59.775_112 = VEC_PACK_TRUNC_EXPR <vect_patt_60.770_108, vect_patt_60.770_109>;
  vect_patt_59.775_113 = VEC_PACK_TRUNC_EXPR <vect_patt_60.770_110, vect_patt_60.770_111>;
  vect_patt_59.774_114 = VEC_PACK_TRUNC_EXPR <vect_patt_59.775_112, vect_patt_59.775_113>;
  _435 = (void *) ivtmp.783_428;
  MEM[base: _435, offset: 0B] = vect_patt_59.774_114;
  ivtmp.778_248 = ivtmp.778_249 + 1;
  ivtmp.780_61 = ivtmp.780_247 + 64;
  ivtmp.783_429 = ivtmp.783_428 + 16;
  if (bnd.761_69 > ivtmp.778_248)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 7>:
  _75 = (sizetype) i_246;
  _76 = periods_15(D) + _75;
  _77 = _75 * 4;
  _78 = int_periods_11 + _77;
  _79 = *_78;
  _80 = _79 != 0;
  *_76 = _80;
  goto <bb 23>;

  <bb 8>:
  _93 = (int) ratio_mult_vf.762_72;
  i_92 = i_52 + _93;
  if (niters.760_68 == ratio_mult_vf.762_72)
    goto <bb 23>;
  else
    goto <bb 9>;

  <bb 9>:
  # i_86 = PHI <i_92(8), i_52(45)>
  _90 = (sizetype) i_86;
  _91 = periods_15(D) + _90;
  _87 = _90 * 4;
  _39 = int_periods_11 + _87;
  _26 = *_39;
  _27 = _26 != 0;
  *_91 = _27;
  i_29 = i_86 + 1;
  if (maxdims_6(D) > i_29)
    goto <bb 10>;
  else
    goto <bb 23>;

  <bb 10>:
  _33 = (sizetype) i_29;
  _120 = periods_15(D) + _33;
  _121 = _33 * 4;
  _122 = int_periods_11 + _121;
  _123 = *_122;
  _124 = _123 != 0;
  *_120 = _124;
  i_126 = i_86 + 2;
  if (maxdims_6(D) > i_126)
    goto <bb 11>;
  else
    goto <bb 23>;

  <bb 11>:
  _129 = (sizetype) i_126;
  _130 = periods_15(D) + _129;
  _131 = _129 * 4;
  _132 = int_periods_11 + _131;
  _133 = *_132;
  _134 = _133 != 0;
  *_130 = _134;
  i_136 = i_86 + 3;
  if (maxdims_6(D) > i_136)
    goto <bb 12>;
  else
    goto <bb 23>;

  <bb 12>:
  _139 = (sizetype) i_136;
  _140 = periods_15(D) + _139;
  _141 = _139 * 4;
  _142 = int_periods_11 + _141;
  _143 = *_142;
  _144 = _143 != 0;
  *_140 = _144;
  i_146 = i_86 + 4;
  if (maxdims_6(D) > i_146)
    goto <bb 13>;
  else
    goto <bb 23>;

  <bb 13>:
  _149 = (sizetype) i_146;
  _150 = periods_15(D) + _149;
  _151 = _149 * 4;
  _152 = int_periods_11 + _151;
  _153 = *_152;
  _154 = _153 != 0;
  *_150 = _154;
  i_156 = i_86 + 5;
  if (maxdims_6(D) > i_156)
    goto <bb 14>;
  else
    goto <bb 23>;

  <bb 14>:
  _159 = (sizetype) i_156;
  _160 = periods_15(D) + _159;
  _161 = _159 * 4;
  _162 = int_periods_11 + _161;
  _163 = *_162;
  _164 = _163 != 0;
  *_160 = _164;
  i_166 = i_86 + 6;
  if (maxdims_6(D) > i_166)
    goto <bb 15>;
  else
    goto <bb 23>;

  <bb 15>:
  _169 = (sizetype) i_166;
  _170 = periods_15(D) + _169;
  _171 = _169 * 4;
  _172 = int_periods_11 + _171;
  _173 = *_172;
  _174 = _173 != 0;
  *_170 = _174;
  i_176 = i_86 + 7;
  if (maxdims_6(D) > i_176)
    goto <bb 16>;
  else
    goto <bb 23>;

  <bb 16>:
  _179 = (sizetype) i_176;
  _180 = periods_15(D) + _179;
  _181 = _179 * 4;
  _182 = int_periods_11 + _181;
  _183 = *_182;
  _184 = _183 != 0;
  *_180 = _184;
  i_186 = i_86 + 8;
  if (maxdims_6(D) > i_186)
    goto <bb 17>;
  else
    goto <bb 23>;

  <bb 17>:
  _189 = (sizetype) i_186;
  _190 = periods_15(D) + _189;
  _191 = _189 * 4;
  _192 = int_periods_11 + _191;
  _193 = *_192;
  _194 = _193 != 0;
  *_190 = _194;
  i_196 = i_86 + 9;
  if (maxdims_6(D) > i_196)
    goto <bb 18>;
  else
    goto <bb 23>;

  <bb 18>:
  _199 = (sizetype) i_196;
  _200 = periods_15(D) + _199;
  _201 = _199 * 4;
  _202 = int_periods_11 + _201;
  _203 = *_202;
  _204 = _203 != 0;
  *_200 = _204;
  i_206 = i_86 + 10;
  if (maxdims_6(D) > i_206)
    goto <bb 19>;
  else
    goto <bb 23>;

  <bb 19>:
  _209 = (sizetype) i_206;
  _210 = periods_15(D) + _209;
  _211 = _209 * 4;
  _212 = int_periods_11 + _211;
  _213 = *_212;
  _214 = _213 != 0;
  *_210 = _214;
  i_216 = i_86 + 11;
  if (maxdims_6(D) > i_216)
    goto <bb 20>;
  else
    goto <bb 23>;

  <bb 20>:
  _219 = (sizetype) i_216;
  _220 = periods_15(D) + _219;
  _221 = _219 * 4;
  _222 = int_periods_11 + _221;
  _223 = *_222;
  _224 = _223 != 0;
  *_220 = _224;
  i_226 = i_86 + 12;
  if (maxdims_6(D) > i_226)
    goto <bb 21>;
  else
    goto <bb 23>;

  <bb 21>:
  _229 = (sizetype) i_226;
  _230 = periods_15(D) + _229;
  _231 = _229 * 4;
  _232 = int_periods_11 + _231;
  _233 = *_232;
  _234 = _233 != 0;
  *_230 = _234;
  i_236 = i_86 + 13;
  if (maxdims_6(D) > i_236)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  _239 = (sizetype) i_236;
  _240 = periods_15(D) + _239;
  _241 = _239 * 4;
  _242 = int_periods_11 + _241;
  _243 = *_242;
  _244 = _243 != 0;
  *_240 = _244;
  i_246 = i_86 + 14;
  if (maxdims_6(D) > i_246)
    goto <bb 7>;
  else
    goto <bb 23>;

  <bb 23>:

  <bb 24>:

  <bb 25>:
  operator delete [] (int_periods_11); [tail call]
  return;

  <bb 26>:
  _1 = this_21(D)->D.50910.D.50796.D.49897.mpi_comm;
  MPI_Cart_get (_1, maxdims_6(D), dims_23(D), int_periods_11, coords_24(D));
  niters.755_55 = (unsigned int) maxdims_6(D);
  _49 = (unsigned long) periods_15(D);
  _48 = -_49;
  _47 = (unsigned int) _48;
  _42 = _47 & 15;
  prolog_loop_niters.757_53 = MIN_EXPR <_42, niters.755_55>;
  if (maxdims_6(D) <= 16)
    goto <bb 48>;
  else
    goto <bb 27>;

  <bb 27>:
  # prologue_after_cost_adjust.758_56 = PHI <prolog_loop_niters.757_53(26)>
  if (prologue_after_cost_adjust.758_56 == 0)
    goto <bb 45>;
  else
    goto <bb 28>;

  <bb 28>:
  # prologue_after_cost_adjust.758_30 = PHI <prologue_after_cost_adjust.758_56(27), prologue_after_cost_adjust.758_157(48)>
  _254 = *int_periods_11;
  _255 = _254 != 0;
  *periods_15(D) = _255;
  if (prologue_after_cost_adjust.758_30 != 1)
    goto <bb 29>;
  else
    goto <bb 44>;

  <bb 29>:
  _266 = MEM[(int *)int_periods_11 + 4B];
  _267 = _266 != 0;
  MEM[(bool *)periods_15(D) + 1B] = _267;
  if (prologue_after_cost_adjust.758_30 != 2)
    goto <bb 30>;
  else
    goto <bb 44>;

  <bb 30>:
  _278 = MEM[(int *)int_periods_11 + 8B];
  _279 = _278 != 0;
  MEM[(bool *)periods_15(D) + 2B] = _279;
  if (prologue_after_cost_adjust.758_30 != 3)
    goto <bb 31>;
  else
    goto <bb 44>;

  <bb 31>:
  _290 = MEM[(int *)int_periods_11 + 12B];
  _291 = _290 != 0;
  MEM[(bool *)periods_15(D) + 3B] = _291;
  if (prologue_after_cost_adjust.758_30 != 4)
    goto <bb 32>;
  else
    goto <bb 44>;

  <bb 32>:
  _302 = MEM[(int *)int_periods_11 + 16B];
  _303 = _302 != 0;
  MEM[(bool *)periods_15(D) + 4B] = _303;
  if (prologue_after_cost_adjust.758_30 != 5)
    goto <bb 33>;
  else
    goto <bb 44>;

  <bb 33>:
  _314 = MEM[(int *)int_periods_11 + 20B];
  _315 = _314 != 0;
  MEM[(bool *)periods_15(D) + 5B] = _315;
  if (prologue_after_cost_adjust.758_30 != 6)
    goto <bb 34>;
  else
    goto <bb 44>;

  <bb 34>:
  _326 = MEM[(int *)int_periods_11 + 24B];
  _327 = _326 != 0;
  MEM[(bool *)periods_15(D) + 6B] = _327;
  if (prologue_after_cost_adjust.758_30 != 7)
    goto <bb 35>;
  else
    goto <bb 44>;

  <bb 35>:
  _338 = MEM[(int *)int_periods_11 + 28B];
  _339 = _338 != 0;
  MEM[(bool *)periods_15(D) + 7B] = _339;
  if (prologue_after_cost_adjust.758_30 != 8)
    goto <bb 36>;
  else
    goto <bb 44>;

  <bb 36>:
  _350 = MEM[(int *)int_periods_11 + 32B];
  _351 = _350 != 0;
  MEM[(bool *)periods_15(D) + 8B] = _351;
  if (prologue_after_cost_adjust.758_30 != 9)
    goto <bb 37>;
  else
    goto <bb 44>;

  <bb 37>:
  _362 = MEM[(int *)int_periods_11 + 36B];
  _363 = _362 != 0;
  MEM[(bool *)periods_15(D) + 9B] = _363;
  if (prologue_after_cost_adjust.758_30 != 10)
    goto <bb 38>;
  else
    goto <bb 44>;

  <bb 38>:
  _374 = MEM[(int *)int_periods_11 + 40B];
  _375 = _374 != 0;
  MEM[(bool *)periods_15(D) + 10B] = _375;
  if (prologue_after_cost_adjust.758_30 != 11)
    goto <bb 39>;
  else
    goto <bb 44>;

  <bb 39>:
  _386 = MEM[(int *)int_periods_11 + 44B];
  _387 = _386 != 0;
  MEM[(bool *)periods_15(D) + 11B] = _387;
  if (prologue_after_cost_adjust.758_30 != 12)
    goto <bb 40>;
  else
    goto <bb 44>;

  <bb 40>:
  _398 = MEM[(int *)int_periods_11 + 48B];
  _399 = _398 != 0;
  MEM[(bool *)periods_15(D) + 12B] = _399;
  if (prologue_after_cost_adjust.758_30 != 13)
    goto <bb 41>;
  else
    goto <bb 44>;

  <bb 41>:
  _410 = MEM[(int *)int_periods_11 + 52B];
  _411 = _410 != 0;
  MEM[(bool *)periods_15(D) + 13B] = _411;
  if (prologue_after_cost_adjust.758_30 != 14)
    goto <bb 42>;
  else
    goto <bb 44>;

  <bb 42>:
  _422 = MEM[(int *)int_periods_11 + 56B];
  _423 = _422 != 0;
  MEM[(bool *)periods_15(D) + 14B] = _423;
  if (prologue_after_cost_adjust.758_30 == 16)
    goto <bb 43>;
  else
    goto <bb 44>;

  <bb 43>:
  _3 = MEM[(int *)int_periods_11 + 60B];
  _2 = _3 != 0;
  MEM[(bool *)periods_15(D) + 15B] = _2;

  <bb 44>:
  # i_51 = PHI <16(43), 1(28), 2(29), 3(30), 4(31), 5(32), 6(33), 7(34), 8(35), 9(36), 10(37), 11(38), 12(39), 13(40), 14(41), 15(42)>
  if (niters.755_55 == prologue_after_cost_adjust.758_30)
    goto <bb 24>;
  else
    goto <bb 45>;

  <bb 45>:
  # i_52 = PHI <i_51(44), 0(27)>
  # prologue_after_cost_adjust.758_128 = PHI <prologue_after_cost_adjust.758_30(44), prologue_after_cost_adjust.758_56(27)>
  prolog_loop_adjusted_niters.759_67 = (sizetype) prologue_after_cost_adjust.758_128;
  niters.760_68 = niters.755_55 - prologue_after_cost_adjust.758_128;
  _70 = niters.760_68 + 4294967280;
  _71 = _70 >> 4;
  bnd.761_69 = _71 + 1;
  ratio_mult_vf.762_72 = bnd.761_69 << 4;
  _12 = niters.755_55 + 4294967295;
  _85 = _12 - prologue_after_cost_adjust.758_128;
  if (_85 <= 14)
    goto <bb 9>;
  else
    goto <bb 46>;

  <bb 46>:
  _95 = prolog_loop_adjusted_niters.759_67 * 4;
  vectp_int_periods.765_94 = int_periods_11 + _95;
  vectp_periods.777_115 = periods_15(D) + prolog_loop_adjusted_niters.759_67;
  ivtmp.780_64 = (unsigned long) vectp_int_periods.765_94;
  ivtmp.783_430 = (unsigned long) vectp_periods.777_115;
  goto <bb 6>;

  <bb 47>:
  _45 = this_21(D)->D.50910.D.50796.D.49897.mpi_comm;
  MPI_Cart_get (_45, maxdims_6(D), dims_23(D), int_periods_11, coords_24(D));
  goto <bb 25>;

  <bb 48>:
  # prologue_after_cost_adjust.758_157 = PHI <niters.755_55(26)>
  goto <bb 28>;

}



;; Function virtual void MPI::Grequest::Complete() (_ZN3MPI8Grequest8CompleteEv, funcdef_no=2539, decl_uid=49181, symbol_order=953)

virtual void MPI::Grequest::Complete() (struct Grequest * const this)
{
  struct ompi_request_t * _3;

  <bb 2>:
  _3 = this_2(D)->D.49217.mpi_request;
  MPI_Grequest_complete (_3); [tail call]
  return;

}



;; Function virtual bool MPI::Request::Get_status() const (_ZNK3MPI7Request10Get_statusEv, funcdef_no=2534, decl_uid=49015, symbol_order=948)

virtual bool MPI::Request::Get_status() const (const struct Request * const this)
{
  int flag;
  struct ompi_request_t * _3;
  int flag.113_5;
  bool _6;

  <bb 2>:
  _3 = this_2(D)->mpi_request;
  MPI_Request_get_status (_3, &flag, 0B);
  flag.113_5 = flag;
  _6 = flag.113_5 != 0;
  flag ={v} {CLOBBER};
  return _6;

}



;; Function virtual bool MPI::Request::Get_status(MPI::Status&) const (_ZNK3MPI7Request10Get_statusERNS_6StatusE, funcdef_no=2533, decl_uid=49013, symbol_order=947)

Removing basic block 5
virtual bool MPI::Request::Get_status(MPI::Status&) const (const struct Request * const this, struct Status & status)
{
  struct MPI_Status c_status;
  int flag;
  struct ompi_request_t * _5;
  int flag.114_7;
  bool _10;

  <bb 2>:
  flag = 0;
  _5 = this_4(D)->mpi_request;
  MPI_Request_get_status (_5, &flag, &c_status);
  flag.114_7 = flag;
  if (flag.114_7 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  status_8(D)->mpi_status = c_status;

  <bb 4>:
  _10 = flag.114_7 != 0;
  flag ={v} {CLOBBER};
  c_status ={v} {CLOBBER};
  return _10;

}



;; Function virtual void MPI::Request::Cancel() const (_ZNK3MPI7Request6CancelEv, funcdef_no=2530, decl_uid=49010, symbol_order=944)

virtual void MPI::Request::Cancel() const (const struct Request * const this)
{
  struct ompi_request_t * const * _2;

  <bb 2>:
  _2 = &this_1(D)->mpi_request;
  MPI_Cancel (_2); [tail call]
  return;

}



;; Function virtual void MPI::Request::Free() (_ZN3MPI7Request4FreeEv, funcdef_no=2515, decl_uid=48960, symbol_order=929)

virtual void MPI::Request::Free() (struct Request * const this)
{
  struct ompi_request_t * * _2;

  <bb 2>:
  _2 = &this_1(D)->mpi_request;
  MPI_Request_free (_2); [tail call]
  return;

}



;; Function virtual bool MPI::Request::Test() (_ZN3MPI7Request4TestEv, funcdef_no=2517, decl_uid=48958, symbol_order=931)

virtual bool MPI::Request::Test() (struct Request * const this)
{
  int t;
  struct ompi_request_t * * _2;
  int t.115_5;
  bool _6;

  <bb 2>:
  _2 = &this_1(D)->mpi_request;
  MPI_Test (_2, &t, 0B);
  t.115_5 = t;
  _6 = t.115_5 != 0;
  t ={v} {CLOBBER};
  return _6;

}



;; Function virtual bool MPI::Request::Test(MPI::Status&) (_ZN3MPI7Request4TestERNS_6StatusE, funcdef_no=2516, decl_uid=48956, symbol_order=930)

virtual bool MPI::Request::Test(MPI::Status&) (struct Request * const this, struct Status & status)
{
  int t;
  struct MPI_Status * _2;
  struct ompi_request_t * * _4;
  int t.116_7;
  bool _8;

  <bb 2>:
  _2 = &status_1(D)->mpi_status;
  _4 = &this_3(D)->mpi_request;
  MPI_Test (_4, &t, _2);
  t.116_7 = t;
  _8 = t.116_7 != 0;
  t ={v} {CLOBBER};
  return _8;

}



;; Function virtual void MPI::Prequest::Start() (_ZN3MPI8Prequest5StartEv, funcdef_no=2531, decl_uid=49093, symbol_order=945)

virtual void MPI::Prequest::Start() (struct Prequest * const this)
{
  struct ompi_request_t * * _2;

  <bb 2>:
  _2 = &this_1(D)->D.49126.mpi_request;
  MPI_Start (_2); [tail call]
  return;

}



;; Function virtual void MPI::Datatype::Set_name(const char*) (_ZN3MPI8Datatype8Set_nameEPKc, funcdef_no=2455, decl_uid=48562, symbol_order=869)

virtual void MPI::Datatype::Set_name(const char*) (struct Datatype * const this, const char * type_name)
{
  struct ompi_datatype_t * _3;

  <bb 2>:
  _3 = this_2(D)->mpi_datatype;
  MPI_Type_set_name (_3, type_name_4(D)); [tail call]
  return;

}



;; Function virtual void MPI::Datatype::Set_attr(int, const void*) (_ZN3MPI8Datatype8Set_attrEiPKv, funcdef_no=2454, decl_uid=48559, symbol_order=868)

virtual void MPI::Datatype::Set_attr(int, const void*) (struct Datatype * const this, int type_keyval, const void * attribute_val)
{
  struct ompi_datatype_t * _3;

  <bb 2>:
  _3 = this_2(D)->mpi_datatype;
  MPI_Type_set_attr (_3, type_keyval_4(D), attribute_val_5(D)); [tail call]
  return;

}



;; Function virtual void MPI::Datatype::Get_name(char*, int&) const (_ZNK3MPI8Datatype8Get_nameEPcRi, funcdef_no=2453, decl_uid=48555, symbol_order=867)

virtual void MPI::Datatype::Get_name(char*, int&) const (const struct Datatype * const this, char * type_name, int & resultlen)
{
  struct ompi_datatype_t * _3;

  <bb 2>:
  _3 = this_2(D)->mpi_datatype;
  MPI_Type_get_name (_3, type_name_4(D), resultlen_5(D)); [tail call]
  return;

}



;; Function virtual void MPI::Datatype::Get_envelope(int&, int&, int&, int&) const (_ZNK3MPI8Datatype12Get_envelopeERiS1_S1_S1_, funcdef_no=2452, decl_uid=48551, symbol_order=866)

virtual void MPI::Datatype::Get_envelope(int&, int&, int&, int&) const (const struct Datatype * const this, int & num_integers, int & num_addresses, int & num_datatypes, int & combiner)
{
  struct ompi_datatype_t * _3;

  <bb 2>:
  _3 = this_2(D)->mpi_datatype;
  MPI_Type_get_envelope (_3, num_integers_4(D), num_addresses_5(D), num_datatypes_6(D), combiner_7(D)); [tail call]
  return;

}



;; Function virtual void MPI::Datatype::Get_contents(int, int, int, int*, MPI::Aint*, MPI::Datatype*) const (_ZNK3MPI8Datatype12Get_contentsEiiiPiPlPS0_, funcdef_no=2451, decl_uid=48545, symbol_order=865)

Removing basic block 8
Removing basic block 9
Removing basic block 10
virtual void MPI::Datatype::Get_contents(int, int, int, int*, MPI::Aint*, MPI::Datatype*) const (const struct Datatype * const this, int max_integers, int max_addresses, int max_datatypes, int * array_of_integers, Aint * array_of_addresses, struct Datatype * array_of_datatypes)
{
  sizetype ivtmp.826;
  struct ompi_datatype_t * * c_datatypes;
  sizetype _1;
  sizetype _2;
  unsigned int _3;
  sizetype _5;
  size_t iftmp.117_6;
  struct ompi_datatype_t * _11;
  struct ompi_datatype_t * const _23;
  unsigned int _30;
  sizetype _36;

  <bb 2>:
  _5 = (sizetype) max_datatypes_4(D);
  if (_5 <= 1143914305352105984)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  iftmp.117_6 = _5 * 8;
  c_datatypes_9 = operator new [] (iftmp.117_6);
  _11 = this_10(D)->mpi_datatype;
  MPI_Type_get_contents (_11, max_integers_12(D), max_addresses_13(D), max_datatypes_4(D), array_of_integers_14(D), array_of_addresses_15(D), c_datatypes_9);
  if (max_datatypes_4(D) > 0)
    goto <bb 6>;
  else
    goto <bb 4>;

  <bb 4>:
  operator delete [] (c_datatypes_9); [tail call]
  return;

  <bb 5>:
  __cxa_throw_bad_array_new_length ();

  <bb 6>:
  _30 = (unsigned int) max_datatypes_4(D);
  _3 = _30 + 4294967295;
  _2 = (sizetype) _3;
  _1 = _2 + 1;
  _36 = _1 * 8;

  <bb 7>:
  # ivtmp.826_31 = PHI <0(6), ivtmp.826_32(7)>
  _23 = MEM[base: c_datatypes_9, index: ivtmp.826_31, offset: 0];
  MEM[base: array_of_datatypes_21(D), index: ivtmp.826_31, step: 2, offset: 8B] = _23;
  ivtmp.826_32 = ivtmp.826_31 + 8;
  if (ivtmp.826_32 != _36)
    goto <bb 7>;
  else
    goto <bb 4>;

}



;; Function virtual bool MPI::Datatype::Get_attr(int, void*) const (_ZNK3MPI8Datatype8Get_attrEiPv, funcdef_no=2450, decl_uid=48537, symbol_order=864)

virtual bool MPI::Datatype::Get_attr(int, void*) const (const struct Datatype * const this, int type_keyval, void * attribute_val)
{
  int ret;
  struct ompi_datatype_t * _3;
  int ret.118_7;
  bool _8;

  <bb 2>:
  _3 = this_2(D)->mpi_datatype;
  MPI_Type_get_attr (_3, type_keyval_4(D), attribute_val_5(D), &ret);
  ret.118_7 = ret;
  _8 = ret.118_7 != 0;
  ret ={v} {CLOBBER};
  return _8;

}



;; Function virtual void MPI::Datatype::Delete_attr(int) (_ZN3MPI8Datatype11Delete_attrEi, funcdef_no=2448, decl_uid=48531, symbol_order=862)

virtual void MPI::Datatype::Delete_attr(int) (struct Datatype * const this, int type_keyval)
{
  struct ompi_datatype_t * _3;

  <bb 2>:
  _3 = this_2(D)->mpi_datatype;
  MPI_Type_delete_attr (_3, type_keyval_4(D)); [tail call]
  return;

}



;; Function virtual MPI::Datatype MPI::Datatype::Dup() const (_ZNK3MPI8Datatype3DupEv, funcdef_no=2443, decl_uid=48505, symbol_order=857)

virtual MPI::Datatype MPI::Datatype::Dup() const (const struct Datatype * const this)
{
  struct ompi_datatype_t * type;
  struct ompi_datatype_t * _3;
  struct ompi_datatype_t * type.119_5;

  <bb 2>:
  _3 = this_2(D)->mpi_datatype;
  MPI_Type_dup (_3, &type);
  type.119_5 = type;
  _6(D)->_vptr.Datatype = &MEM[(void *)&_ZTVN3MPI8DatatypeE + 16B];
  _6(D)->mpi_datatype = type.119_5;
  type ={v} {CLOBBER};
  return _6(D);

}



;; Function virtual MPI::Datatype MPI::Datatype::Create_darray(int, int, int, const int*, const int*, const int*, const int*, int) const (_ZNK3MPI8Datatype13Create_darrayEiiiPKiS2_S2_S2_i, funcdef_no=2438, decl_uid=48492, symbol_order=852)

virtual MPI::Datatype MPI::Datatype::Create_darray(int, int, int, const int*, const int*, const int*, const int*, int) const (const struct Datatype * const this, int size, int rank, int ndims, const int * array_of_gsizes, const int * array_of_distribs, const int * array_of_dargs, const int * array_of_psizes, int order)
{
  struct ompi_datatype_t * type;
  struct ompi_datatype_t * _3;
  struct ompi_datatype_t * type.120_13;

  <bb 2>:
  _3 = this_2(D)->mpi_datatype;
  MPI_Type_create_darray (size_4(D), rank_5(D), ndims_6(D), array_of_gsizes_7(D), array_of_distribs_8(D), array_of_dargs_9(D), array_of_psizes_10(D), order_11(D), _3, &type);
  type.120_13 = type;
  _14(D)->_vptr.Datatype = &MEM[(void *)&_ZTVN3MPI8DatatypeE + 16B];
  _14(D)->mpi_datatype = type.120_13;
  type ={v} {CLOBBER};
  return _14(D);

}



;; Function virtual MPI::Datatype MPI::Datatype::Create_subarray(int, const int*, const int*, const int*, int) const (_ZNK3MPI8Datatype15Create_subarrayEiPKiS2_S2_i, funcdef_no=2437, decl_uid=48482, symbol_order=851)

virtual MPI::Datatype MPI::Datatype::Create_subarray(int, const int*, const int*, const int*, int) const (const struct Datatype * const this, int ndims, const int * array_of_sizes, const int * array_of_subsizes, const int * array_of_starts, int order)
{
  struct ompi_datatype_t * type;
  struct ompi_datatype_t * _3;
  struct ompi_datatype_t * type.121_10;

  <bb 2>:
  _3 = this_2(D)->mpi_datatype;
  MPI_Type_create_subarray (ndims_4(D), array_of_sizes_5(D), array_of_subsizes_6(D), array_of_starts_7(D), order_8(D), _3, &type);
  type.121_10 = type;
  _11(D)->_vptr.Datatype = &MEM[(void *)&_ZTVN3MPI8DatatypeE + 16B];
  _11(D)->mpi_datatype = type.121_10;
  type ={v} {CLOBBER};
  return _11(D);

}



;; Function virtual void MPI::Datatype::Unpack_external(const char*, const void*, MPI::Aint, MPI::Aint&, void*, int) const (_ZNK3MPI8Datatype15Unpack_externalEPKcPKvlRlPvi, funcdef_no=2436, decl_uid=48475, symbol_order=850)

virtual void MPI::Datatype::Unpack_external(const char*, const void*, MPI::Aint, MPI::Aint&, void*, int) const (const struct Datatype * const this, const char * datarep, const void * inbuf, Aint insize, Aint & position, void * outbuf, int outcount)
{
  struct ompi_datatype_t * _3;

  <bb 2>:
  _3 = this_2(D)->mpi_datatype;
  MPI_Unpack_external (datarep_4(D), inbuf_5(D), insize_6(D), position_7(D), outbuf_8(D), outcount_9(D), _3); [tail call]
  return;

}



;; Function virtual MPI::Aint MPI::Datatype::Pack_external_size(const char*, int) const (_ZNK3MPI8Datatype18Pack_external_sizeEPKci, funcdef_no=2435, decl_uid=48467, symbol_order=849)

virtual MPI::Aint MPI::Datatype::Pack_external_size(const char*, int) const (const struct Datatype * const this, const char * datarep, int incount)
{
  MPI_Aint addr;
  struct ompi_datatype_t * _3;
  Aint _7;

  <bb 2>:
  _3 = this_2(D)->mpi_datatype;
  MPI_Pack_external_size (datarep_4(D), incount_5(D), _3, &addr);
  _7 = addr;
  addr ={v} {CLOBBER};
  return _7;

}



;; Function virtual void MPI::Datatype::Pack_external(const char*, const void*, int, void*, MPI::Aint, MPI::Aint&) const (_ZNK3MPI8Datatype13Pack_externalEPKcPKviPvlRl, funcdef_no=2434, decl_uid=48463, symbol_order=848)

virtual void MPI::Datatype::Pack_external(const char*, const void*, int, void*, MPI::Aint, MPI::Aint&) const (const struct Datatype * const this, const char * datarep, const void * inbuf, int incount, void * outbuf, Aint outsize, Aint & position)
{
  struct ompi_datatype_t * _3;

  <bb 2>:
  _3 = this_2(D)->mpi_datatype;
  MPI_Pack_external (datarep_4(D), inbuf_5(D), incount_6(D), _3, outbuf_7(D), outsize_8(D), position_9(D)); [tail call]
  return;

}



;; Function virtual int MPI::Datatype::Pack_size(int, const MPI::Comm&) const (_ZNK3MPI8Datatype9Pack_sizeEiRKNS_4CommE, funcdef_no=2433, decl_uid=48455, symbol_order=847)

virtual int MPI::Datatype::Pack_size(int, const MPI::Comm&) const (const struct Datatype * const this, int incount, const struct Comm & comm)
{
  int size;
  struct ompi_communicator_t * const _3;
  struct ompi_datatype_t * _5;
  int _8;

  <bb 2>:
  _3 = MEM[(struct ompi_communicator_t * *)comm_1(D) + 8B];
  _5 = this_4(D)->mpi_datatype;
  MPI_Pack_size (incount_6(D), _5, _3, &size);
  _8 = size;
  size ={v} {CLOBBER};
  return _8;

}



;; Function virtual void MPI::Datatype::Unpack(const void*, int, void*, int, int&, const MPI::Comm&) const (_ZNK3MPI8Datatype6UnpackEPKviPviRiRKNS_4CommE, funcdef_no=2432, decl_uid=48451, symbol_order=846)

virtual void MPI::Datatype::Unpack(const void*, int, void*, int, int&, const MPI::Comm&) const (const struct Datatype * const this, const void * inbuf, int insize, void * outbuf, int outcount, int & position, const struct Comm & comm)
{
  struct ompi_communicator_t * const _3;
  struct ompi_datatype_t * _5;

  <bb 2>:
  _3 = MEM[(struct ompi_communicator_t * *)comm_1(D) + 8B];
  _5 = this_4(D)->mpi_datatype;
  MPI_Unpack (inbuf_6(D), insize_7(D), position_8(D), outbuf_9(D), outcount_10(D), _5, _3); [tail call]
  return;

}



;; Function virtual void MPI::Datatype::Pack(const void*, int, void*, int, int&, const MPI::Comm&) const (_ZNK3MPI8Datatype4PackEPKviPviRiRKNS_4CommE, funcdef_no=2431, decl_uid=48443, symbol_order=845)

virtual void MPI::Datatype::Pack(const void*, int, void*, int, int&, const MPI::Comm&) const (const struct Datatype * const this, const void * inbuf, int incount, void * outbuf, int outsize, int & position, const struct Comm & comm)
{
  struct ompi_communicator_t * const _3;
  struct ompi_datatype_t * _5;

  <bb 2>:
  _3 = MEM[(struct ompi_communicator_t * *)comm_1(D) + 8B];
  _5 = this_4(D)->mpi_datatype;
  MPI_Pack (inbuf_6(D), incount_7(D), _5, outbuf_8(D), outsize_9(D), position_10(D), _3); [tail call]
  return;

}



;; Function virtual void MPI::Datatype::Commit() (_ZN3MPI8Datatype6CommitEv, funcdef_no=2430, decl_uid=48433, symbol_order=844)

virtual void MPI::Datatype::Commit() (struct Datatype * const this)
{
  struct ompi_datatype_t * * _2;

  <bb 2>:
  _2 = &this_1(D)->mpi_datatype;
  MPI_Type_commit (_2); [tail call]
  return;

}



;; Function virtual void MPI::Datatype::Get_true_extent(MPI::Aint&, MPI::Aint&) const (_ZNK3MPI8Datatype15Get_true_extentERlS1_, funcdef_no=2429, decl_uid=48431, symbol_order=843)

virtual void MPI::Datatype::Get_true_extent(MPI::Aint&, MPI::Aint&) const (const struct Datatype * const this, Aint & lb, Aint & extent)
{
  struct ompi_datatype_t * _3;

  <bb 2>:
  _3 = this_2(D)->mpi_datatype;
  MPI_Type_get_true_extent (_3, lb_4(D), extent_5(D)); [tail call]
  return;

}



;; Function virtual void MPI::Datatype::Get_extent(MPI::Aint&, MPI::Aint&) const (_ZNK3MPI8Datatype10Get_extentERlS1_, funcdef_no=2428, decl_uid=48427, symbol_order=842)

virtual void MPI::Datatype::Get_extent(MPI::Aint&, MPI::Aint&) const (const struct Datatype * const this, Aint & lb, Aint & extent)
{
  struct ompi_datatype_t * _3;

  <bb 2>:
  _3 = this_2(D)->mpi_datatype;
  MPI_Type_get_extent (_3, lb_4(D), extent_5(D)); [tail call]
  return;

}



;; Function virtual int MPI::Datatype::Get_size() const (_ZNK3MPI8Datatype8Get_sizeEv, funcdef_no=2427, decl_uid=48423, symbol_order=841)

virtual int MPI::Datatype::Get_size() const (const struct Datatype * const this)
{
  int size;
  struct ompi_datatype_t * _3;
  int _5;

  <bb 2>:
  _3 = this_2(D)->mpi_datatype;
  MPI_Type_size (_3, &size);
  _5 = size;
  size ={v} {CLOBBER};
  return _5;

}



;; Function virtual MPI::Datatype MPI::Datatype::Create_resized(MPI::Aint, MPI::Aint) const (_ZNK3MPI8Datatype14Create_resizedEll, funcdef_no=2426, decl_uid=48421, symbol_order=840)

virtual MPI::Datatype MPI::Datatype::Create_resized(MPI::Aint, MPI::Aint) const (const struct Datatype * const this, const Aint lb, const Aint extent)
{
  struct ompi_datatype_t * newtype;
  struct ompi_datatype_t * _3;
  struct ompi_datatype_t * newtype.122_7;

  <bb 2>:
  _3 = this_2(D)->mpi_datatype;
  MPI_Type_create_resized (_3, lb_4(D), extent_5(D), &newtype);
  newtype.122_7 = newtype;
  _8(D)->_vptr.Datatype = &MEM[(void *)&_ZTVN3MPI8DatatypeE + 16B];
  _8(D)->mpi_datatype = newtype.122_7;
  newtype ={v} {CLOBBER};
  return _8(D);

}



;; Function virtual MPI::Datatype MPI::Datatype::Create_indexed_block(int, int, const int*) const (_ZNK3MPI8Datatype20Create_indexed_blockEiiPKi, funcdef_no=2425, decl_uid=48417, symbol_order=839)

virtual MPI::Datatype MPI::Datatype::Create_indexed_block(int, int, const int*) const (const struct Datatype * const this, int count, int blocklength, const int * array_of_displacements)
{
  struct ompi_datatype_t * newtype;
  struct ompi_datatype_t * _3;
  struct ompi_datatype_t * newtype.123_8;

  <bb 2>:
  _3 = this_2(D)->mpi_datatype;
  MPI_Type_create_indexed_block (count_4(D), blocklength_5(D), array_of_displacements_6(D), _3, &newtype);
  newtype.123_8 = newtype;
  _9(D)->_vptr.Datatype = &MEM[(void *)&_ZTVN3MPI8DatatypeE + 16B];
  _9(D)->mpi_datatype = newtype.123_8;
  newtype ={v} {CLOBBER};
  return _9(D);

}



;; Function virtual MPI::Datatype MPI::Datatype::Create_hvector(int, int, MPI::Aint) const (_ZNK3MPI8Datatype14Create_hvectorEiil, funcdef_no=2424, decl_uid=48412, symbol_order=838)

virtual MPI::Datatype MPI::Datatype::Create_hvector(int, int, MPI::Aint) const (const struct Datatype * const this, int count, int blocklength, Aint stride)
{
  struct ompi_datatype_t * newtype;
  struct ompi_datatype_t * _3;
  struct ompi_datatype_t * newtype.124_8;

  <bb 2>:
  _3 = this_2(D)->mpi_datatype;
  MPI_Type_create_hvector (count_4(D), blocklength_5(D), stride_6(D), _3, &newtype);
  newtype.124_8 = newtype;
  _9(D)->_vptr.Datatype = &MEM[(void *)&_ZTVN3MPI8DatatypeE + 16B];
  _9(D)->mpi_datatype = newtype.124_8;
  newtype ={v} {CLOBBER};
  return _9(D);

}



;; Function virtual MPI::Datatype MPI::Datatype::Create_hindexed(int, const int*, const Aint*) const (_ZNK3MPI8Datatype15Create_hindexedEiPKiPKl, funcdef_no=2423, decl_uid=48407, symbol_order=837)

virtual MPI::Datatype MPI::Datatype::Create_hindexed(int, const int*, const Aint*) const (const struct Datatype * const this, int count, const int * array_of_blocklengths, const Aint * array_of_displacements)
{
  struct ompi_datatype_t * newtype;
  struct ompi_datatype_t * _3;
  struct ompi_datatype_t * newtype.125_8;

  <bb 2>:
  _3 = this_2(D)->mpi_datatype;
  MPI_Type_create_hindexed (count_4(D), array_of_blocklengths_5(D), array_of_displacements_6(D), _3, &newtype);
  newtype.125_8 = newtype;
  _9(D)->_vptr.Datatype = &MEM[(void *)&_ZTVN3MPI8DatatypeE + 16B];
  _9(D)->mpi_datatype = newtype.125_8;
  newtype ={v} {CLOBBER};
  return _9(D);

}



;; Function virtual MPI::Datatype MPI::Datatype::Create_indexed(int, const int*, const int*) const (_ZNK3MPI8Datatype14Create_indexedEiPKiS2_, funcdef_no=2421, decl_uid=48397, symbol_order=835)

virtual MPI::Datatype MPI::Datatype::Create_indexed(int, const int*, const int*) const (const struct Datatype * const this, int count, const int * array_of_blocklengths, const int * array_of_displacements)
{
  struct ompi_datatype_t * newtype;
  struct ompi_datatype_t * _3;
  struct ompi_datatype_t * newtype.126_8;

  <bb 2>:
  _3 = this_2(D)->mpi_datatype;
  MPI_Type_indexed (count_4(D), array_of_blocklengths_5(D), array_of_displacements_6(D), _3, &newtype);
  newtype.126_8 = newtype;
  _9(D)->_vptr.Datatype = &MEM[(void *)&_ZTVN3MPI8DatatypeE + 16B];
  _9(D)->mpi_datatype = newtype.126_8;
  newtype ={v} {CLOBBER};
  return _9(D);

}



;; Function virtual MPI::Datatype MPI::Datatype::Create_vector(int, int, int) const (_ZNK3MPI8Datatype13Create_vectorEiii, funcdef_no=2420, decl_uid=48392, symbol_order=834)

virtual MPI::Datatype MPI::Datatype::Create_vector(int, int, int) const (const struct Datatype * const this, int count, int blocklength, int stride)
{
  struct ompi_datatype_t * newtype;
  struct ompi_datatype_t * _3;
  struct ompi_datatype_t * newtype.127_8;

  <bb 2>:
  _3 = this_2(D)->mpi_datatype;
  MPI_Type_vector (count_4(D), blocklength_5(D), stride_6(D), _3, &newtype);
  newtype.127_8 = newtype;
  _9(D)->_vptr.Datatype = &MEM[(void *)&_ZTVN3MPI8DatatypeE + 16B];
  _9(D)->mpi_datatype = newtype.127_8;
  newtype ={v} {CLOBBER};
  return _9(D);

}



;; Function virtual MPI::Datatype MPI::Datatype::Create_contiguous(int) const (_ZNK3MPI8Datatype17Create_contiguousEi, funcdef_no=2419, decl_uid=48387, symbol_order=833)

virtual MPI::Datatype MPI::Datatype::Create_contiguous(int) const (const struct Datatype * const this, int count)
{
  struct ompi_datatype_t * newtype;
  struct ompi_datatype_t * _3;
  struct ompi_datatype_t * newtype.128_6;

  <bb 2>:
  _3 = this_2(D)->mpi_datatype;
  MPI_Type_contiguous (count_4(D), _3, &newtype);
  newtype.128_6 = newtype;
  _7(D)->_vptr.Datatype = &MEM[(void *)&_ZTVN3MPI8DatatypeE + 16B];
  _7(D)->mpi_datatype = newtype.128_6;
  newtype ={v} {CLOBBER};
  return _7(D);

}



;; Function virtual void MPI::Comm::Alltoallw(const void*, const int*, const int*, const MPI::Datatype*, void*, const int*, const int*, const MPI::Datatype*) const (_ZNK3MPI4Comm9AlltoallwEPKvPKiS4_PKNS_8DatatypeEPvS4_S4_S7_, funcdef_no=2583, decl_uid=49749, symbol_order=997)

Removing basic block 11
Removing basic block 12
Removing basic block 13
virtual void MPI::Comm::Alltoallw(const void*, const int*, const int*, const MPI::Datatype*, void*, const int*, const int*, const MPI::Datatype*) const (const struct Comm * const this, const void * sendbuf, const int * sendcounts, const int * sdispls, const struct Datatype * sendtypes, void * recvbuf, const int * recvcounts, const int * rdispls, const struct Datatype * recvtypes)
{
  sizetype ivtmp.883;
  int size;
  int (*__vtbl_ptr_type) () * _6;
  int (*__vtbl_ptr_type) () _7;
  const int _9;
  int _10;
  sizetype _11;
  size_t iftmp.82_12;
  struct ompi_datatype_t * * const _14;
  struct ompi_datatype_t * const _21;
  struct ompi_datatype_t * const _29;
  struct ompi_communicator_t * _32;
  long unsigned int _33;
  long unsigned int _34;
  struct ompi_datatype_t * const * _35;
  void * PROF_45;
  const int _47;
  struct ompi_communicator_t * _49;
  int _50;
  sizetype _64;
  sizetype _65;
  sizetype _66;
  unsigned int _67;
  unsigned int _68;
  struct ompi_datatype_t * * _69;
  sizetype _74;
  sizetype _75;

  <bb 2>:
  _6 = this_5(D)->D.49897._vptr.Comm_Null;
  _7 = MEM[(int (*__vtbl_ptr_type) () *)_6 + 216B];
  PROF_45 = [obj_type_ref] OBJ_TYPE_REF(_7;(const struct Comm)this_5(D)->27);
  if (PROF_45 == Get_size)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _49 = this_5(D)->D.49897.mpi_comm;
  MPI_Comm_size (_49, &size);
  _50 = size;
  size ={v} {CLOBBER};
  goto <bb 5>;

  <bb 4>:
  _47 = OBJ_TYPE_REF(_7;(const struct Comm)this_5(D)->27) (this_5(D));

  <bb 5>:
  # _9 = PHI <_47(4), _50(3)>
  _10 = _9 * 2;
  _11 = (sizetype) _10;
  if (_11 <= 1143914305352105984)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:
  iftmp.82_12 = _11 * 8;
  _14 = operator new [] (iftmp.82_12);
  if (_9 > 0)
    goto <bb 9>;
  else
    goto <bb 7>;

  <bb 7>:
  _32 = this_5(D)->D.49897.mpi_comm;
  _33 = (long unsigned int) _9;
  _34 = _33 * 8;
  _35 = _14 + _34;
  MPI_Alltoallw (sendbuf_36(D), sendcounts_37(D), sdispls_38(D), _14, recvbuf_39(D), recvcounts_40(D), rdispls_41(D), _35, _32);
  operator delete [] (_14);
  return;

  <bb 8>:
  __cxa_throw_bad_array_new_length ();

  <bb 9>:
  _68 = (unsigned int) _9;
  _67 = _68 + 4294967295;
  _66 = (sizetype) _67;
  _65 = _66 + 1;
  _64 = _65 * 8;
  _75 = (sizetype) _9;
  _74 = _75 * 8;
  _69 = _14 + _74;

  <bb 10>:
  # ivtmp.883_48 = PHI <0(9), ivtmp.883_76(10)>
  _21 = MEM[base: sendtypes_19(D), index: ivtmp.883_48, step: 2, offset: 8B];
  MEM[base: _14, index: ivtmp.883_48, offset: 0B] = _21;
  _29 = MEM[base: recvtypes_27(D), index: ivtmp.883_48, step: 2, offset: 8B];
  MEM[base: _69, index: ivtmp.883_48, offset: 0B] = _29;
  ivtmp.883_76 = ivtmp.883_48 + 8;
  if (ivtmp.883_76 != _64)
    goto <bb 10>;
  else
    goto <bb 7>;

}



;; Function virtual MPI::Intercomm MPI::Intracomm::Spawn_multiple(int, const char**, const char***, const int*, const MPI::Info*, int) (_ZN3MPI9Intracomm14Spawn_multipleEiPPKcPS3_PKiPKNS_4InfoEi, funcdef_no=2624, decl_uid=50748, symbol_order=1038)

Removing basic block 8
Removing basic block 9
Removing basic block 10
virtual MPI::Intercomm MPI::Intracomm::Spawn_multiple(int, const char**, const char***, const int*, const MPI::Info*, int) (struct Intracomm * const this, int count, const char * * array_of_commands, const char * * * array_of_argv, const int * array_of_maxprocs, const struct Info * array_of_info, int root)
{
  sizetype ivtmp.896;
  struct ompi_communicator_t * newcomm;
  sizetype _1;
  sizetype _5;
  struct ompi_communicator_t * _8;
  struct ompi_communicator_t * newcomm.94_15;
  unsigned int _17;
  unsigned int _20;
  sizetype _22;
  size_t iftmp.93_23;
  struct ompi_info_t * * const _24;
  struct ompi_info_t * const _31;
  sizetype _41;

  <bb 2>:
  _22 = (sizetype) count_3(D);
  if (_22 <= 1143914305352105984)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  iftmp.93_23 = _22 * 8;
  _24 = operator new [] (iftmp.93_23);
  if (count_3(D) > 0)
    goto <bb 6>;
  else
    goto <bb 4>;

  <bb 4>:
  _8 = this_7(D)->D.50796.D.49897.mpi_comm;
  MPI_Comm_spawn_multiple (count_3(D), array_of_commands_9(D), array_of_argv_10(D), array_of_maxprocs_11(D), _24, root_12(D), _8, &newcomm, 0B);
  operator delete [] (_24);
  newcomm.94_15 = newcomm;
  MEM[(struct Comm_Null *)_16(D)].mpi_comm = newcomm.94_15;
  _16(D)->D.51106.D.49897._vptr.Comm_Null = &MEM[(void *)&_ZTVN3MPI9IntercommE + 16B];
  newcomm ={v} {CLOBBER};
  return _16(D);

  <bb 5>:
  __cxa_throw_bad_array_new_length ();

  <bb 6>:
  _20 = (unsigned int) count_3(D);
  _17 = _20 + 4294967295;
  _5 = (sizetype) _17;
  _1 = _5 + 1;
  _41 = _1 * 8;

  <bb 7>:
  # ivtmp.896_6 = PHI <0(6), ivtmp.896_35(7)>
  _31 = MEM[base: array_of_info_4(D), index: ivtmp.896_6, step: 2, offset: 8B];
  MEM[base: _24, index: ivtmp.896_6, offset: 0B] = _31;
  ivtmp.896_35 = ivtmp.896_6 + 8;
  if (ivtmp.896_35 != _41)
    goto <bb 7>;
  else
    goto <bb 4>;

}



;; Function virtual MPI::Graphcomm MPI::Intracomm::Create_graph(int, const int*, const int*, bool) const (_ZNK3MPI9Intracomm12Create_graphEiPKiS2_b, funcdef_no=2619, decl_uid=50715, symbol_order=1033)

virtual MPI::Graphcomm MPI::Intracomm::Create_graph(int, const int*, const int*, bool) const (const struct Intracomm * const this, int nnodes, const int * index, const int * edges, bool reorder)
{
  void * D.59757;
  int status;
  int t;
  struct ompi_communicator_t * newcomm;
  int _2;
  struct ompi_communicator_t * _5;
  struct Comm * _13;
  int t.58_14;
  struct ompi_communicator_t * _15;
  struct ompi_communicator_t * pretmp_17;
  int status.101_18;
  struct ompi_communicator_t * _19;
  struct ompi_communicator_t * prephitmp_34;

  <bb 2>:
  _2 = (int) reorder_1(D);
  _5 = this_4(D)->D.50796.D.49897.mpi_comm;
  MPI_Graph_create (_5, nnodes_6(D), index_7(D), edges_8(D), _2, &newcomm);
  _13 = &MEM[(struct Intracomm *)_10(D)].D.50796;
  MPI::Comm::Comm (_13);
  _10(D)->D.51017.D.50796.D.49897._vptr.Comm_Null = &MEM[(void *)&_ZTVN3MPI9GraphcommE + 16B];
  status = 0;
  MPI_Initialized (&t);

  <bb 3>:
  t.58_14 = t;
  t ={v} {CLOBBER};
  if (t.58_14 != 0)
    goto <bb 4>;
  else
    goto <bb 11>;

  <bb 4>:
  _15 = newcomm;
  if (_15 != &ompi_mpi_comm_null)
    goto <bb 10>;
  else
    goto <bb 12>;

  <bb 5>:
  status.101_18 = status;
  if (status.101_18 == 2)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  _19 = newcomm;
  _10(D)->D.51017.D.50796.D.49897.mpi_comm = _19;
  goto <bb 8>;

  <bb 7>:
  _10(D)->D.51017.D.50796.D.49897.mpi_comm = &ompi_mpi_comm_null;

  <bb 8>:
  status ={v} {CLOBBER};
  newcomm ={v} {CLOBBER};
  return _10(D);

<L3>:
  status ={v} {CLOBBER};
  MEM[(struct Comm_Null *)_10(D)]._vptr.Comm_Null = &MEM[(void *)&_ZTVN3MPI9Comm_NullE + 16B];
  _23 = __builtin_eh_pointer (3);
  __builtin_unwind_resume (_23);

  <bb 10>:
  MPI_Topo_test (_15, &status);
  goto <bb 5>;

  <bb 11>:
  pretmp_17 = newcomm;

  <bb 12>:
  # prephitmp_34 = PHI <_15(4), pretmp_17(11)>
  _10(D)->D.51017.D.50796.D.49897.mpi_comm = prephitmp_34;
  goto <bb 8>;

}



;; Function virtual MPI::Graphcomm& MPI::Graphcomm::Clone() const (_ZNK3MPI9Graphcomm5CloneEv, funcdef_no=2648, decl_uid=50958, symbol_order=1062)

virtual MPI::Graphcomm& MPI::Graphcomm::Clone() const (const struct Graphcomm * const this)
{
  void * D.59776;
  int status;
  int t;
  struct ompi_communicator_t * newcomm;
  struct ompi_communicator_t * _3;
  void * _6;
  struct Comm * _10;
  int t.58_11;
  struct ompi_communicator_t * _12;
  struct ompi_communicator_t * pretmp_14;
  int status.101_15;
  struct ompi_communicator_t * _16;
  struct ompi_communicator_t * prephitmp_32;

  <bb 2>:
  _3 = this_2(D)->D.51017.D.50796.D.49897.mpi_comm;
  MPI_Comm_dup (_3, &newcomm);
  _6 = operator new (16);
  _10 = &MEM[(struct Intracomm *)_6].D.50796;
  MPI::Comm::Comm (_10);

  <bb 3>:
  MEM[(struct Graphcomm *)_6].D.51017.D.50796.D.49897._vptr.Comm_Null = &MEM[(void *)&_ZTVN3MPI9GraphcommE + 16B];
  status = 0;
  MPI_Initialized (&t);

  <bb 4>:
  t.58_11 = t;
  t ={v} {CLOBBER};
  if (t.58_11 != 0)
    goto <bb 5>;
  else
    goto <bb 12>;

  <bb 5>:
  _12 = newcomm;
  if (_12 != &ompi_mpi_comm_null)
    goto <bb 11>;
  else
    goto <bb 13>;

  <bb 6>:
  status.101_15 = status;
  if (status.101_15 == 2)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _16 = newcomm;
  MEM[(struct Graphcomm *)_6].D.51017.D.50796.D.49897.mpi_comm = _16;
  goto <bb 9>;

  <bb 8>:
  MEM[(struct Graphcomm *)_6].D.51017.D.50796.D.49897.mpi_comm = &ompi_mpi_comm_null;

  <bb 9>:
  status ={v} {CLOBBER};
  newcomm ={v} {CLOBBER};
  return _6;

<L2>:
  status ={v} {CLOBBER};
  operator delete (_6);
  _18 = __builtin_eh_pointer (2);
  __builtin_unwind_resume (_18);

  <bb 11>:
  MPI_Topo_test (_12, &status);
  goto <bb 6>;

  <bb 12>:
  pretmp_14 = newcomm;

  <bb 13>:
  # prephitmp_32 = PHI <_12(5), pretmp_14(12)>
  MEM[(struct Graphcomm *)_6].D.51017.D.50796.D.49897.mpi_comm = prephitmp_32;
  goto <bb 9>;

}



;; Function virtual MPI::Cartcomm& MPI::Cartcomm::Clone() const (_ZNK3MPI8Cartcomm5CloneEv, funcdef_no=2638, decl_uid=50844, symbol_order=1052)

virtual MPI::Cartcomm& MPI::Cartcomm::Clone() const (const struct Cartcomm * const this)
{
  void * D.59794;
  int status;
  int t;
  struct ompi_communicator_t * newcomm;
  struct ompi_communicator_t * _3;
  void * _6;
  struct Comm * _10;
  int t.58_11;
  struct ompi_communicator_t * _12;
  struct ompi_communicator_t * pretmp_14;
  int status.57_15;
  struct ompi_communicator_t * _16;
  struct ompi_communicator_t * prephitmp_32;

  <bb 2>:
  _3 = this_2(D)->D.50910.D.50796.D.49897.mpi_comm;
  MPI_Comm_dup (_3, &newcomm);
  _6 = operator new (16);
  _10 = &MEM[(struct Intracomm *)_6].D.50796;
  MPI::Comm::Comm (_10);

  <bb 3>:
  MEM[(struct Cartcomm *)_6].D.50910.D.50796.D.49897._vptr.Comm_Null = &MEM[(void *)&_ZTVN3MPI8CartcommE + 16B];
  status = 0;
  MPI_Initialized (&t);

  <bb 4>:
  t.58_11 = t;
  t ={v} {CLOBBER};
  if (t.58_11 != 0)
    goto <bb 5>;
  else
    goto <bb 12>;

  <bb 5>:
  _12 = newcomm;
  if (_12 != &ompi_mpi_comm_null)
    goto <bb 11>;
  else
    goto <bb 13>;

  <bb 6>:
  status.57_15 = status;
  if (status.57_15 == 1)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _16 = newcomm;
  MEM[(struct Cartcomm *)_6].D.50910.D.50796.D.49897.mpi_comm = _16;
  goto <bb 9>;

  <bb 8>:
  MEM[(struct Cartcomm *)_6].D.50910.D.50796.D.49897.mpi_comm = &ompi_mpi_comm_null;

  <bb 9>:
  status ={v} {CLOBBER};
  newcomm ={v} {CLOBBER};
  return _6;

<L2>:
  status ={v} {CLOBBER};
  operator delete (_6);
  _18 = __builtin_eh_pointer (2);
  __builtin_unwind_resume (_18);

  <bb 11>:
  MPI_Topo_test (_12, &status);
  goto <bb 6>;

  <bb 12>:
  pretmp_14 = newcomm;

  <bb 13>:
  # prephitmp_32 = PHI <_12(5), pretmp_14(12)>
  MEM[(struct Cartcomm *)_6].D.50910.D.50796.D.49897.mpi_comm = prephitmp_32;
  goto <bb 9>;

}



;; Function virtual MPI::Intracomm MPI::Intercomm::Merge(bool) const (_ZNK3MPI9Intercomm5MergeEb, funcdef_no=2653, decl_uid=51063, symbol_order=1067)

virtual MPI::Intracomm MPI::Intercomm::Merge(bool) const (const struct Intercomm * const this, bool high)
{
  void * D.59810;
  int flag;
  int t;
  struct ompi_communicator_t * newcomm;
  int _2;
  struct ompi_communicator_t * _5;
  struct ompi_communicator_t * newcomm.75_7;
  struct Comm * _11;
  int t.58_12;
  bool _13;
  int flag.78_14;
  bool _33;
  bool _34;

  <bb 2>:
  _2 = (int) high_1(D);
  _5 = this_4(D)->D.51106.D.49897.mpi_comm;
  MPI_Intercomm_merge (_5, _2, &newcomm);
  newcomm.75_7 = newcomm;
  _11 = &_8(D)->D.50796;
  MPI::Comm::Comm (_11);
  _8(D)->D.50796.D.49897._vptr.Comm_Null = &MEM[(void *)&_ZTVN3MPI9IntracommE + 16B];
  flag = 0;
  MPI_Initialized (&t);

  <bb 3>:
  t.58_12 = t;
  t ={v} {CLOBBER};
  _34 = newcomm.75_7 != &ompi_mpi_comm_null;
  _33 = t.58_12 != 0;
  _13 = _33 & _34;
  if (_13 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 4>:
  flag.78_14 = flag;
  if (flag.78_14 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _8(D)->D.50796.D.49897.mpi_comm = &ompi_mpi_comm_null;
  goto <bb 7>;

  <bb 6>:
  _8(D)->D.50796.D.49897.mpi_comm = newcomm.75_7;

  <bb 7>:
  flag ={v} {CLOBBER};
  newcomm ={v} {CLOBBER};
  return _8(D);

<L3>:
  flag ={v} {CLOBBER};
  MEM[(struct Comm_Null *)_8(D)]._vptr.Comm_Null = &MEM[(void *)&_ZTVN3MPI9Comm_NullE + 16B];
  _30 = __builtin_eh_pointer (3);
  __builtin_unwind_resume (_30);

  <bb 9>:
  MPI_Comm_test_inter (newcomm.75_7, &flag);
  goto <bb 4>;

  <bb 10>:
  _8(D)->D.50796.D.49897.mpi_comm = newcomm.75_7;
  goto <bb 7>;

}



;; Function virtual MPI::Intracomm MPI::Intracomm::Create(const MPI::Group&) const (_ZNK3MPI9Intracomm6CreateERKNS_5GroupE, funcdef_no=2615, decl_uid=50693, symbol_order=1029)

virtual MPI::Intracomm MPI::Intracomm::Create(const MPI::Group&) const (const struct Intracomm * const this, const struct Group & group)
{
  void * D.59827;
  int flag;
  int t;
  struct ompi_communicator_t * newcomm;
  struct ompi_group_t * const _3;
  struct ompi_communicator_t * _5;
  struct ompi_communicator_t * newcomm.104_7;
  struct Comm * _11;
  int t.58_12;
  bool _13;
  int flag.78_14;
  bool _33;
  bool _34;

  <bb 2>:
  _3 = MEM[(struct ompi_group_t * *)group_2(D) + 8B];
  _5 = this_4(D)->D.50796.D.49897.mpi_comm;
  MPI_Comm_create (_5, _3, &newcomm);
  newcomm.104_7 = newcomm;
  _11 = &_8(D)->D.50796;
  MPI::Comm::Comm (_11);
  _8(D)->D.50796.D.49897._vptr.Comm_Null = &MEM[(void *)&_ZTVN3MPI9IntracommE + 16B];
  flag = 0;
  MPI_Initialized (&t);

  <bb 3>:
  t.58_12 = t;
  t ={v} {CLOBBER};
  _34 = newcomm.104_7 != &ompi_mpi_comm_null;
  _33 = t.58_12 != 0;
  _13 = _33 & _34;
  if (_13 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 4>:
  flag.78_14 = flag;
  if (flag.78_14 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _8(D)->D.50796.D.49897.mpi_comm = &ompi_mpi_comm_null;
  goto <bb 7>;

  <bb 6>:
  _8(D)->D.50796.D.49897.mpi_comm = newcomm.104_7;

  <bb 7>:
  flag ={v} {CLOBBER};
  newcomm ={v} {CLOBBER};
  return _8(D);

<L3>:
  flag ={v} {CLOBBER};
  MEM[(struct Comm_Null *)_8(D)]._vptr.Comm_Null = &MEM[(void *)&_ZTVN3MPI9Comm_NullE + 16B];
  _30 = __builtin_eh_pointer (3);
  __builtin_unwind_resume (_30);

  <bb 9>:
  MPI_Comm_test_inter (newcomm.104_7, &flag);
  goto <bb 4>;

  <bb 10>:
  _8(D)->D.50796.D.49897.mpi_comm = newcomm.104_7;
  goto <bb 7>;

}



;; Function virtual MPI::Intracomm MPI::Intracomm::Split(int, int) const (_ZNK3MPI9Intracomm5SplitEii, funcdef_no=2616, decl_uid=50697, symbol_order=1030)

virtual MPI::Intracomm MPI::Intracomm::Split(int, int) const (const struct Intracomm * const this, int color, int key)
{
  void * D.59844;
  int flag;
  int t;
  struct ompi_communicator_t * newcomm;
  struct ompi_communicator_t * _3;
  struct ompi_communicator_t * newcomm.103_7;
  struct Comm * _11;
  int t.58_12;
  bool _13;
  int flag.78_14;
  bool _33;
  bool _34;

  <bb 2>:
  _3 = this_2(D)->D.50796.D.49897.mpi_comm;
  MPI_Comm_split (_3, color_4(D), key_5(D), &newcomm);
  newcomm.103_7 = newcomm;
  _11 = &_8(D)->D.50796;
  MPI::Comm::Comm (_11);
  _8(D)->D.50796.D.49897._vptr.Comm_Null = &MEM[(void *)&_ZTVN3MPI9IntracommE + 16B];
  flag = 0;
  MPI_Initialized (&t);

  <bb 3>:
  t.58_12 = t;
  t ={v} {CLOBBER};
  _34 = newcomm.103_7 != &ompi_mpi_comm_null;
  _33 = t.58_12 != 0;
  _13 = _33 & _34;
  if (_13 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 4>:
  flag.78_14 = flag;
  if (flag.78_14 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _8(D)->D.50796.D.49897.mpi_comm = &ompi_mpi_comm_null;
  goto <bb 7>;

  <bb 6>:
  _8(D)->D.50796.D.49897.mpi_comm = newcomm.103_7;

  <bb 7>:
  flag ={v} {CLOBBER};
  newcomm ={v} {CLOBBER};
  return _8(D);

<L3>:
  flag ={v} {CLOBBER};
  MEM[(struct Comm_Null *)_8(D)]._vptr.Comm_Null = &MEM[(void *)&_ZTVN3MPI9Comm_NullE + 16B];
  _30 = __builtin_eh_pointer (3);
  __builtin_unwind_resume (_30);

  <bb 9>:
  MPI_Comm_test_inter (newcomm.103_7, &flag);
  goto <bb 4>;

  <bb 10>:
  _8(D)->D.50796.D.49897.mpi_comm = newcomm.103_7;
  goto <bb 7>;

}



;; Function virtual MPI::Intracomm& MPI::Intracomm::Clone() const (_ZNK3MPI9Intracomm5CloneEv, funcdef_no=2614, decl_uid=50690, symbol_order=1028)

virtual MPI::Intracomm& MPI::Intracomm::Clone() const (const struct Intracomm * const this)
{
  void * D.59862;
  int flag;
  int t;
  struct ompi_communicator_t * newcomm;
  struct ompi_communicator_t * _3;
  void * _6;
  struct ompi_communicator_t * newcomm.111_7;
  struct Comm * _11;
  int t.58_12;
  bool _13;
  int flag.78_14;
  bool _34;
  bool _35;

  <bb 2>:
  _3 = this_2(D)->D.50796.D.49897.mpi_comm;
  MPI_Comm_dup (_3, &newcomm);
  _6 = operator new (16);
  newcomm.111_7 = newcomm;
  _11 = &MEM[(struct Intracomm *)_6].D.50796;
  MPI::Comm::Comm (_11);

  <bb 3>:
  MEM[(struct Intracomm *)_6].D.50796.D.49897._vptr.Comm_Null = &MEM[(void *)&_ZTVN3MPI9IntracommE + 16B];
  flag = 0;
  MPI_Initialized (&t);

  <bb 4>:
  t.58_12 = t;
  t ={v} {CLOBBER};
  _35 = newcomm.111_7 != &ompi_mpi_comm_null;
  _34 = t.58_12 != 0;
  _13 = _34 & _35;
  if (_13 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 5>:
  flag.78_14 = flag;
  if (flag.78_14 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  MEM[(struct Intracomm *)_6].D.50796.D.49897.mpi_comm = &ompi_mpi_comm_null;
  goto <bb 8>;

  <bb 7>:
  MEM[(struct Intracomm *)_6].D.50796.D.49897.mpi_comm = newcomm.111_7;

  <bb 8>:
  flag ={v} {CLOBBER};
  newcomm ={v} {CLOBBER};
  return _6;

<L2>:
  flag ={v} {CLOBBER};
  operator delete (_6);
  _15 = __builtin_eh_pointer (2);
  __builtin_unwind_resume (_15);

  <bb 10>:
  MPI_Comm_test_inter (newcomm.111_7, &flag);
  goto <bb 5>;

  <bb 11>:
  MEM[(struct Intracomm *)_6].D.50796.D.49897.mpi_comm = newcomm.111_7;
  goto <bb 8>;

}



;; Function virtual MPI::Cartcomm MPI::Intracomm::Create_cart(int, const int*, const bool*, bool) const (_ZNK3MPI9Intracomm11Create_cartEiPKiPKbb, funcdef_no=2618, decl_uid=50709, symbol_order=1032)

virtual MPI::Cartcomm MPI::Intracomm::Create_cart(int, const int*, const bool*, bool) const (const struct Intracomm * const this, int ndims, const int * dims, const bool * periods, bool reorder)
{
  void * D.59884;
  unsigned long ivtmp.914;
  int status;
  int t;
  int i;
  struct ompi_communicator_t * newcomm;
  int * int_periods;
  sizetype _5;
  size_t iftmp.54_6;
  bool _15;
  int _16;
  int _20;
  struct ompi_communicator_t * _22;
  struct Comm * _30;
  int t.58_31;
  struct ompi_communicator_t * _32;
  int status.57_35;
  struct ompi_communicator_t * _36;
  struct ompi_communicator_t * pretmp_60;
  struct ompi_communicator_t * prephitmp_61;

  <bb 2>:
  _5 = (sizetype) ndims_4(D);
  if (_5 <= 2287828610704211968)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  iftmp.54_6 = _5 * 4;
  int_periods_9 = operator new [] (iftmp.54_6);
  if (ndims_4(D) > 0)
    goto <bb 6>;
  else
    goto <bb 4>;

  <bb 4>:
  _20 = (int) reorder_19(D);
  _22 = this_21(D)->D.50796.D.49897.mpi_comm;
  MPI_Cart_create (_22, ndims_4(D), dims_23(D), int_periods_9, _20, &newcomm);
  operator delete [] (int_periods_9);
  _30 = &MEM[(struct Intracomm *)_26(D)].D.50796;
  MPI::Comm::Comm (_30);
  _26(D)->D.50910.D.50796.D.49897._vptr.Comm_Null = &MEM[(void *)&_ZTVN3MPI8CartcommE + 16B];
  status = 0;
  MPI_Initialized (&t);
  goto <bb 7>;

  <bb 5>:
  __cxa_throw_bad_array_new_length ();

  <bb 6>:
  # ivtmp.914_37 = PHI <0(3), ivtmp.914_59(6)>
  _15 = MEM[base: periods_13(D), index: ivtmp.914_37, offset: 0B];
  _16 = (int) _15;
  MEM[base: int_periods_9, index: ivtmp.914_37, step: 4, offset: 0B] = _16;
  ivtmp.914_59 = ivtmp.914_37 + 1;
  i_56 = (int) ivtmp.914_59;
  if (ndims_4(D) > i_56)
    goto <bb 6>;
  else
    goto <bb 4>;

  <bb 7>:
  t.58_31 = t;
  t ={v} {CLOBBER};
  if (t.58_31 != 0)
    goto <bb 8>;
  else
    goto <bb 15>;

  <bb 8>:
  _32 = newcomm;
  if (_32 != &ompi_mpi_comm_null)
    goto <bb 14>;
  else
    goto <bb 16>;

  <bb 9>:
  status.57_35 = status;
  if (status.57_35 == 1)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  _36 = newcomm;
  _26(D)->D.50910.D.50796.D.49897.mpi_comm = _36;
  goto <bb 12>;

  <bb 11>:
  _26(D)->D.50910.D.50796.D.49897.mpi_comm = &ompi_mpi_comm_null;

  <bb 12>:
  status ={v} {CLOBBER};
  newcomm ={v} {CLOBBER};
  return _26(D);

<L12>:
  status ={v} {CLOBBER};
  MEM[(struct Comm_Null *)_26(D)]._vptr.Comm_Null = &MEM[(void *)&_ZTVN3MPI9Comm_NullE + 16B];
  _10 = __builtin_eh_pointer (3);
  __builtin_unwind_resume (_10);

  <bb 14>:
  MPI_Topo_test (_32, &status);
  goto <bb 9>;

  <bb 15>:
  pretmp_60 = newcomm;

  <bb 16>:
  # prephitmp_61 = PHI <_32(8), pretmp_60(15)>
  _26(D)->D.50910.D.50796.D.49897.mpi_comm = prephitmp_61;
  goto <bb 12>;

}



;; Function virtual MPI::Cartcomm MPI::Cartcomm::Sub(const bool*) const (_ZNK3MPI8Cartcomm3SubEPKb, funcdef_no=2636, decl_uid=50869, symbol_order=1050)

virtual MPI::Cartcomm MPI::Cartcomm::Sub(const bool*) const (const struct Cartcomm * const this, const bool * remain_dims)
{
  void * D.59910;
  unsigned long ivtmp.922;
  int status;
  int t;
  struct ompi_communicator_t * newcomm;
  int * int_remain_dims;
  int ndims;
  struct ompi_communicator_t * _6;
  int ndims.108_8;
  sizetype _9;
  size_t iftmp.107_10;
  int ndims.108_13;
  bool _19;
  int _20;
  struct ompi_communicator_t * _23;
  struct Comm * _31;
  int t.58_32;
  struct ompi_communicator_t * _33;
  int ndims.108_34;
  int status.57_36;
  struct ompi_communicator_t * _37;
  int _53;
  unsigned int _56;
  struct ompi_communicator_t * pretmp_61;
  struct ompi_communicator_t * prephitmp_62;
  unsigned int _63;

  <bb 2>:
  _6 = this_5(D)->D.50910.D.50796.D.49897.mpi_comm;
  MPI_Cartdim_get (_6, &ndims);
  ndims.108_8 = ndims;
  _9 = (sizetype) ndims.108_8;
  if (_9 <= 2287828610704211968)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  iftmp.107_10 = _9 * 4;
  int_remain_dims_12 = operator new [] (iftmp.107_10);
  ndims.108_34 = ndims;
  if (ndims.108_34 > 0)
    goto <bb 6>;
  else
    goto <bb 4>;

  <bb 4>:
  _23 = this_5(D)->D.50910.D.50796.D.49897.mpi_comm;
  MPI_Cart_sub (_23, int_remain_dims_12, &newcomm);
  operator delete [] (int_remain_dims_12);
  _31 = &MEM[(struct Intracomm *)_26(D)].D.50796;
  MPI::Comm::Comm (_31);
  _26(D)->D.50910.D.50796.D.49897._vptr.Comm_Null = &MEM[(void *)&_ZTVN3MPI8CartcommE + 16B];
  status = 0;
  MPI_Initialized (&t);
  goto <bb 7>;

  <bb 5>:
  __cxa_throw_bad_array_new_length ();

  <bb 6>:
  # ivtmp.922_38 = PHI <0(3), ivtmp.922_59(6)>
  _19 = MEM[base: remain_dims_17(D), index: ivtmp.922_38, offset: 0B];
  _20 = (int) _19;
  MEM[base: int_remain_dims_12, index: ivtmp.922_38, step: 4, offset: 0B] = _20;
  _63 = (unsigned int) ivtmp.922_38;
  _56 = _63 + 1;
  _53 = (int) _56;
  ndims.108_13 = ndims;
  ivtmp.922_59 = ivtmp.922_38 + 1;
  if (ndims.108_13 > _53)
    goto <bb 6>;
  else
    goto <bb 4>;

  <bb 7>:
  t.58_32 = t;
  t ={v} {CLOBBER};
  if (t.58_32 != 0)
    goto <bb 8>;
  else
    goto <bb 15>;

  <bb 8>:
  _33 = newcomm;
  if (_33 != &ompi_mpi_comm_null)
    goto <bb 14>;
  else
    goto <bb 16>;

  <bb 9>:
  status.57_36 = status;
  if (status.57_36 == 1)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  _37 = newcomm;
  _26(D)->D.50910.D.50796.D.49897.mpi_comm = _37;
  goto <bb 12>;

  <bb 11>:
  _26(D)->D.50910.D.50796.D.49897.mpi_comm = &ompi_mpi_comm_null;

  <bb 12>:
  status ={v} {CLOBBER};
  ndims ={v} {CLOBBER};
  newcomm ={v} {CLOBBER};
  return _26(D);

<L12>:
  status ={v} {CLOBBER};
  MEM[(struct Comm_Null *)_26(D)]._vptr.Comm_Null = &MEM[(void *)&_ZTVN3MPI9Comm_NullE + 16B];
  _14 = __builtin_eh_pointer (3);
  __builtin_unwind_resume (_14);

  <bb 14>:
  MPI_Topo_test (_33, &status);
  goto <bb 9>;

  <bb 15>:
  pretmp_61 = newcomm;

  <bb 16>:
  # prephitmp_62 = PHI <_33(8), pretmp_61(15)>
  _26(D)->D.50910.D.50796.D.49897.mpi_comm = prephitmp_62;
  goto <bb 12>;

}



;; Function int main(int, char**) (main, funcdef_no=2809, decl_uid=54015, symbol_order=1224) (executed once)

int main(int, char**) (int argc, char * * argv)
{
  unsigned long ivtmp.1137;
  unsigned long ivtmp.1130;
  unsigned int ivtmp.1128;
  sizetype ivtmp.1121;
  sizetype ivtmp.1112;
  sizetype ivtmp.1103;
  sizetype ivtmp.1094;
  unsigned long ivtmp.1083;
  unsigned int ivtmp.1082;
  sizetype ivtmp.1079;
  sizetype ivtmp.1078;
  long unsigned int ivtmp.1076;
  sizetype ivtmp.1068;
  sizetype ivtmp.1059;
  sizetype ivtmp.1050;
  sizetype ivtmp.1041;
  sizetype ivtmp.1032;
  sizetype ivtmp.1023;
  sizetype ivtmp.1014;
  sizetype ivtmp.1005;
  unsigned long ivtmp.994;
  unsigned int ivtmp.993;
  sizetype ivtmp.990;
  sizetype ivtmp.989;
  long unsigned int ivtmp.987;
  sizetype ivtmp.979;
  sizetype ivtmp.970;
  sizetype ivtmp.961;
  sizetype ivtmp.952;
  unsigned long ivtmp.944;
  vector(2) double * vectp_pretmp.940;
  unsigned int ratio_mult_vf.936;
  unsigned int bnd.935;
  unsigned int niters.934;
  sizetype prolog_loop_adjusted_niters.933;
  unsigned int prologue_after_cost_adjust.932;
  unsigned int prolog_loop_niters.931;
  unsigned int niters.929;
  fmtflags __old;
  struct ompi_request_t * request;
  struct ompi_request_t * request;
  struct ompi_request_t * request;
  struct ompi_request_t * request;
  struct ompi_request_t * request;
  struct ompi_request_t * request;
  struct ompi_request_t * request;
  struct ompi_request_t * request;
  struct ompi_request_t * request;
  struct ompi_request_t * request;
  struct ompi_request_t * request;
  struct ompi_request_t * request;
  struct ompi_request_t * request;
  struct ompi_request_t * request;
  struct ompi_request_t * request;
  struct ompi_request_t * request;
  int rank;
  int size;
  int size;
  int i;
  int i;
  int j;
  int j;
  int i;
  int i;
  int j;
  int j;
  double allSum;
  bool checkIter;
  double diffSum;
  bool isNextFirstElemRed;
  bool isNextFirstElemRed;
  int i;
  unsigned int iteration;
  bool isTopRightElementRed;
  bool isBottomLeftElementRed;
  double * * elems;
  bool hasDown;
  bool hasUp;
  bool hasRight;
  bool hasLeft;
  struct ompi_request_t * reqSum;
  struct Request reqRR;
  struct Request reqSR;
  struct Request reqRD;
  struct Request reqSD;
  struct Request reqRU;
  struct Request reqSU;
  struct Request reqRL;
  struct Request reqSL;
  double * bufRU;
  double * bufSU;
  double * bufRD;
  double * bufSD;
  double * bufRR;
  double * bufSR;
  double * bufRL;
  double * bufSL;
  int destD;
  int destU;
  int destR;
  int destL;
  bool wrapAround[2];
  int threads[2];
  bool isFirstElemRed;
  int horTotal;
  int verTotal;
  int verDeficit;
  int horDeficit;
  int verElements;
  int horElements;
  int horZones;
  int verZones;
  double time_initial;
  struct Cartcomm cartComm;
  struct Cartcomm D.54069;
  sizetype _21;
  sizetype _22;
  long unsigned int _37;
  unsigned int _90;
  sizetype _135;
  struct ompi_request_t * _140;
  struct ompi_communicator_t * _143;
  double _144;
  struct ompi_communicator_t * const _152;
  struct ompi_communicator_t * const _154;
  struct ompi_communicator_t * _155;
  struct ompi_communicator_t * _156;
  struct ompi_communicator_t * _157;
  struct ompi_communicator_t * _158;
  int destL.1_159;
  int destR.2_161;
  int destU.3_163;
  int destD.4_165;
  sizetype _175;
  size_t iftmp.5_176;
  void * _182;
  sizetype _204;
  size_t iftmp.8_205;
  sizetype _208;
  long int _209;
  unsigned int _212;
  long unsigned int _215;
  long unsigned int _216;
  double * _217;
  sizetype _222;
  sizetype _226;
  long int _227;
  unsigned int _228;
  unsigned int _229;
  sizetype _240;
  size_t iftmp.20_241;
  sizetype _244;
  long int _245;
  sizetype _258;
  void * _259;
  sizetype _262;
  long int _263;
  int destU.3_274;
  struct ompi_communicator_t * _275;
  int destL.1_276;
  struct ompi_communicator_t * _277;
  bool _278;
  unsigned int verElements.32_280;
  unsigned int _281;
  bool _282;
  bool isNextFirstElemRed.34_284;
  int destD.4_286;
  struct ompi_communicator_t * _287;
  unsigned int horElements.35_290;
  unsigned int _291;
  bool _292;
  bool isNextFirstElemRed.36_294;
  int destR.2_296;
  struct ompi_communicator_t * _297;
  int _301;
  int _303;
  unsigned int verTotal.37_305;
  unsigned int _306;
  unsigned int horTotal.38_308;
  unsigned int _309;
  unsigned int _314;
  struct ompi_communicator_t * _319;
  unsigned int _325;
  void * _327;
  double _328;
  int destR.2_331;
  struct ompi_datatype_t * const _332;
  struct ompi_communicator_t * _333;
  sizetype _336;
  sizetype _338;
  double _340;
  double * _342;
  int destL.1_343;
  struct ompi_datatype_t * const _344;
  struct ompi_communicator_t * _345;
  sizetype _347;
  double * _349;
  sizetype _350;
  double _352;
  double * _354;
  int destU.3_355;
  struct ompi_datatype_t * const _356;
  struct ompi_communicator_t * _357;
  double * _361;
  double * _365;
  double _368;
  double * * _370;
  int destD.4_371;
  struct ompi_datatype_t * const _372;
  bool isFirstElemRed.33_373;
  int _374;
  int _375;
  int _377;
  double * * _381;
  struct ompi_communicator_t * _383;
  long unsigned int _386;
  double _392;
  int destR.2_395;
  struct ompi_datatype_t * const _396;
  struct ompi_communicator_t * _397;
  unsigned int _402;
  double _404;
  double * _406;
  int destL.1_407;
  struct ompi_datatype_t * const _408;
  struct ompi_communicator_t * _409;
  double * _415;
  double _416;
  double * _418;
  int destU.3_419;
  struct ompi_datatype_t * const _420;
  struct ompi_communicator_t * _421;
  double * _427;
  double * _431;
  double _432;
  int destD.4_435;
  struct ompi_datatype_t * const _436;
  struct ompi_communicator_t * _437;
  double _446;
  int destR.2_449;
  struct ompi_datatype_t * const _450;
  struct ompi_communicator_t * _451;
  sizetype _454;
  sizetype _456;
  double _458;
  double * _460;
  int destL.1_461;
  struct ompi_datatype_t * const _462;
  struct ompi_communicator_t * _463;
  sizetype _465;
  double * _467;
  sizetype _468;
  double _470;
  double * _472;
  int destU.3_473;
  struct ompi_datatype_t * const _474;
  struct ompi_communicator_t * _475;
  double * _479;
  int _482;
  double * _483;
  double _486;
  double * * _488;
  int destD.4_489;
  bool isFirstElemRed.33_490;
  int _491;
  int _493;
  int _494;
  double * _496;
  double * * _498;
  struct ompi_communicator_t * const _500;
  struct ompi_op_t * const _501;
  struct ompi_datatype_t * const _502;
  struct ompi_communicator_t * _504;
  long unsigned int _507;
  sizetype _509;
  sizetype _510;
  double * * _511;
  double _513;
  int destR.2_516;
  struct ompi_datatype_t * const _517;
  struct ompi_communicator_t * _518;
  unsigned long _523;
  double _525;
  double * _527;
  int destL.1_528;
  struct ompi_datatype_t * const _529;
  struct ompi_communicator_t * _530;
  double * _536;
  double _537;
  double * _539;
  int destU.3_540;
  struct ompi_datatype_t * const _541;
  struct ompi_communicator_t * _542;
  double * _548;
  double * _551;
  double * _552;
  double _553;
  int destD.4_556;
  sizetype _557;
  double _558;
  double allSum.48_562;
  double _564;
  long int _570;
  double _571;
  int (*__vtbl_ptr_type) () * _572;
  struct __ostream_type & _573;
  sizetype _575;
  __type _643;
  int _644;
  struct ompi_datatype_t * const _645;
  struct ompi_datatype_t * const _646;
  struct ompi_datatype_t * const _647;
  struct ompi_datatype_t * const _648;
  struct ompi_datatype_t * const _649;
  struct ompi_request_t * request.59_650;
  struct ompi_request_t * request.59_651;
  struct ompi_request_t * request.59_652;
  struct ompi_request_t * request.59_653;
  struct ompi_request_t * request.60_654;
  struct ompi_request_t * request.60_655;
  struct ompi_request_t * request.60_656;
  struct ompi_request_t * request.60_657;
  struct ompi_request_t * request.59_658;
  struct ompi_request_t * request.59_659;
  struct ompi_request_t * request.59_660;
  struct ompi_request_t * request.59_661;
  struct ompi_datatype_t * const _662;
  struct ompi_request_t * request.60_663;
  struct ompi_request_t * request.60_664;
  struct ompi_request_t * request.60_665;
  struct ompi_request_t * request.60_666;
  struct ios_base * _667;
  sizetype _767;
  double * _814;
  double * _817;
  double _819;
  sizetype _826;
  double _828;
  double _829;
  double _830;
  unsigned long _833;
  double * _835;
  double * _838;
  double _839;
  double _840;
  unsigned long _843;
  double * _844;
  double * _845;
  double _846;
  double * _848;
  double _849;
  double _850;
  double * _853;
  double _854;
  double _855;
  unsigned long _857;
  unsigned long _858;
  double * _859;
  double * _860;
  double _861;
  double _862;
  double _863;
  double _864;
  double _873;
  double _874;
  sizetype _875;
  unsigned int _877;
  double * _878;
  double * _879;
  double _880;
  double * _882;
  double _883;
  double _884;
  double * _887;
  double _888;
  double _889;
  double * _893;
  double * _894;
  double _895;
  double _896;
  double _897;
  double _898;
  sizetype _903;
  double * _905;
  double * _908;
  double _910;
  double _919;
  double _920;
  double _921;
  double * _926;
  double * _929;
  double _930;
  double _931;
  double * _935;
  double * _936;
  double _937;
  double * _939;
  double _940;
  double _941;
  double * _944;
  double _945;
  double _946;
  unsigned int _948;
  sizetype _949;
  double * _950;
  double * _951;
  double _952;
  double _953;
  double _954;
  double _955;
  double _964;
  double _965;
  void * _967;
  double * _969;
  double * _970;
  double _971;
  double * _973;
  double _974;
  double _975;
  double * _978;
  double _979;
  double _980;
  double * _984;
  double * _985;
  double _986;
  double _987;
  double _988;
  double _989;
  int __a.50_991;
  int _992;
  int _994;
  _Ios_Fmtflags _995;
  double * _999;
  double * _1007;
  unsigned long _1028;
  double * * _1029;
  unsigned int _1032;
  unsigned int _1035;
  sizetype _1048;
  double * _1054;
  sizetype _1056;
  sizetype _1057;
  unsigned int _1058;
  sizetype _1060;
  sizetype _1061;
  sizetype _1074;
  sizetype _1075;
  int _1080;
  unsigned int _1084;
  unsigned int _1085;
  unsigned int _1088;
  unsigned int _1089;
  double * _1099;
  sizetype _1101;
  sizetype _1103;
  sizetype _1104;
  unsigned int _1107;
  unsigned int _1108;
  unsigned int _1111;
  double * _1113;
  unsigned int _1114;
  unsigned int _1115;
  unsigned int _1116;
  unsigned int _1117;
  sizetype _1118;
  sizetype _1119;
  sizetype _1120;
  unsigned int _1121;
  unsigned int _1122;
  unsigned int _1124;
  double * _1125;
  sizetype _1126;
  sizetype _1127;
  sizetype _1128;
  unsigned int _1129;
  unsigned int _1130;
  unsigned int _1131;
  int _1133;
  unsigned int _1134;
  void * _1137;
  void * _1140;
  long unsigned int _1141;
  long unsigned int _1142;
  long unsigned int _1144;
  long unsigned int _1145;
  unsigned int _1146;
  unsigned int _1147;
  unsigned int _1148;
  sizetype _1151;
  bool pretmp_1161;
  bool prephitmp_1162;
  double * _1201;
  double * pretmp_1215;
  sizetype pretmp_1218;
  double * * pretmp_1219;
  double * pretmp_1223;
  double * _1227;
  int pretmp_1231;
  int prephitmp_1232;
  double * _1238;
  double * _1246;
  sizetype _1247;
  sizetype _1248;
  sizetype _1249;
  unsigned int _1250;
  unsigned int _1251;
  unsigned int _1252;
  double * _1254;
  sizetype _1255;
  sizetype _1265;
  sizetype _1266;
  unsigned int _1268;
  unsigned int _1269;
  unsigned int _1270;
  double * _1272;
  sizetype _1273;
  sizetype _1274;
  sizetype _1276;
  unsigned int _1277;
  unsigned int _1278;
  double * _1281;
  sizetype _1289;
  double * pretmp_1294;
  sizetype pretmp_1300;
  double * * pretmp_1301;
  double * pretmp_1302;
  sizetype pretmp_1313;
  sizetype _1315;
  sizetype _1316;
  unsigned int _1317;
  unsigned int _1318;
  unsigned int _1319;
  int _1325;
  unsigned int _1326;
  double * pretmp_1331;
  sizetype pretmp_1337;
  double * * pretmp_1338;
  double * pretmp_1339;
  void * _1342;
  int pretmp_1346;
  int prephitmp_1347;
  void * _1348;
  long unsigned int _1349;
  long unsigned int _1350;
  long unsigned int _1351;
  long unsigned int _1352;
  long unsigned int _1353;
  unsigned int _1354;
  unsigned int _1355;
  unsigned int _1356;
  sizetype pretmp_1397;
  size_t pretmp_1398;
  sizetype pretmp_1401;
  double * pretmp_1409;
  sizetype pretmp_1415;
  double * * pretmp_1416;
  double * pretmp_1417;
  size_t pretmp_1423;
  size_t prephitmp_1424;
  size_t pretmp_1430;
  size_t prephitmp_1431;
  sizetype pretmp_1434;
  double * * pretmp_1435;
  double * pretmp_1436;
  size_t pretmp_1441;
  bool pretmp_1445;
  bool prephitmp_1446;
  sizetype _1448;
  double * _1449;
  double * * _1451;
  sizetype _1455;
  sizetype _1459;
  double * _1460;
  double * * _1462;
  sizetype _1466;
  bool pretmp_1469;
  bool prephitmp_1470;

  <bb 2>:
  MPI_Init (0B, 0B);
  MPI::InitializeIntercepts ();
  MPI::Comm::Comm (&MEM[(struct Intracomm *)&cartComm].D.50796);
  cartComm.D.50910.D.50796.D.49897._vptr.Comm_Null = &MEM[(void *)&_ZTVN3MPI8CartcommE + 16B];
  wrapAround[0] = 0;
  wrapAround[1] = 0;
  reqSL._vptr.Request = &MEM[(void *)&_ZTVN3MPI7RequestE + 16B];
  _140 = REQUEST_NULL.mpi_request;
  reqSL.mpi_request = _140;
  reqRL._vptr.Request = &MEM[(void *)&_ZTVN3MPI7RequestE + 16B];
  reqRL.mpi_request = _140;
  reqSU._vptr.Request = &MEM[(void *)&_ZTVN3MPI7RequestE + 16B];
  reqSU.mpi_request = _140;
  reqRU._vptr.Request = &MEM[(void *)&_ZTVN3MPI7RequestE + 16B];
  reqRU.mpi_request = _140;
  reqSD._vptr.Request = &MEM[(void *)&_ZTVN3MPI7RequestE + 16B];
  reqSD.mpi_request = _140;
  reqRD._vptr.Request = &MEM[(void *)&_ZTVN3MPI7RequestE + 16B];
  reqRD.mpi_request = _140;
  reqSR._vptr.Request = &MEM[(void *)&_ZTVN3MPI7RequestE + 16B];
  reqSR.mpi_request = _140;
  reqRR._vptr.Request = &MEM[(void *)&_ZTVN3MPI7RequestE + 16B];
  reqRR.mpi_request = _140;
  _143 = MEM[(const struct Comm *)&COMM_WORLD].D.49897.mpi_comm;
  MPI_Comm_size (_143, &size);
  horZones_642 = size;
  size ={v} {CLOBBER};
  _144 = (double) horZones_642;
  _643 = __builtin_sqrt (_144);
  horZones_146 = (int) _643;
  if (horZones_146 == 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  horZones_794 = MIN_EXPR <horZones_146, horZones_642>;

  <bb 4>:
  # horZones_2 = PHI <1(2), horZones_794(3)>
  verZones_148 = horZones_642 / horZones_2;
  threads[0] = horZones_2;
  threads[1] = verZones_148;
  D.54069 = MPI::Intracomm::Create_cart (&COMM_WORLD, 2, &threads, &wrapAround, 1); [return slot optimization]
  _152 = MEM[(struct ompi_communicator_t * *)&D.54069 + 8B];
  cartComm.D.50910.D.50796.D.49897.mpi_comm = _152;
  D.54069 ={v} {CLOBBER};
  _154 = MEM[(struct ompi_communicator_t * *)&COMM_NULL + 8B];
  if (_152 == _154)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 5>:
  MPI_Finalize ();

  <bb 6>:
  cartComm ={v} {CLOBBER};
  isFirstElemRed ={v} {CLOBBER};
  threads ={v} {CLOBBER};
  wrapAround ={v} {CLOBBER};
  destL ={v} {CLOBBER};
  destR ={v} {CLOBBER};
  destU ={v} {CLOBBER};
  destD ={v} {CLOBBER};
  reqSL ={v} {CLOBBER};
  reqRL ={v} {CLOBBER};
  reqSU ={v} {CLOBBER};
  reqRU ={v} {CLOBBER};
  reqSD ={v} {CLOBBER};
  reqRD ={v} {CLOBBER};
  reqSR ={v} {CLOBBER};
  reqRR ={v} {CLOBBER};
  reqSum ={v} {CLOBBER};
  return 0;

  <bb 7>:
  MPI_Comm_size (_152, &size);
  size ={v} {CLOBBER};
  _155 = MEM[(const struct Comm *)&cartComm].D.49897.mpi_comm;
  MPI_Comm_rank (_155, &rank);
  _644 = rank;
  rank ={v} {CLOBBER};
  _156 = cartComm.D.50910.D.50796.D.49897.mpi_comm;
  MPI_Cart_shift (_156, 0, 1, &destL, &destR);
  _157 = cartComm.D.50910.D.50796.D.49897.mpi_comm;
  MPI_Cart_shift (_157, 1, 1, &destU, &destD);
  destL.1_159 = destL;
  hasLeft_160 = destL.1_159 != -2;
  destR.2_161 = destR;
  hasRight_162 = destR.2_161 != -2;
  destU.3_163 = destU;
  hasUp_164 = destU.3_163 != -2;
  destD.4_165 = destD;
  hasDown_166 = destD.4_165 != -2;
  horElements_167 = 1000 / horZones_2;
  verElements_168 = 1000 / verZones_148;
  if (hasRight_162 != 0)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  horDeficit_169 = 1000 % horZones_2;
  horElements_170 = horElements_167 + horDeficit_169;

  <bb 9>:
  # horElements_3 = PHI <horElements_167(7), horElements_170(8)>
  if (hasDown_166 != 0)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  verDeficit_171 = 1000 % verZones_148;
  verElements_172 = verElements_168 + verDeficit_171;

  <bb 11>:
  # verElements_4 = PHI <verElements_168(9), verElements_172(10)>
  verTotal_173 = verElements_4 + 2;
  horTotal_174 = horElements_3 + 2;
  _175 = (sizetype) horTotal_174;
  if (_175 <= 1143914305352105984)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:
  iftmp.5_176 = _175 * 8;
  elems_178 = operator new [] (iftmp.5_176);
  if (horTotal_174 > 0)
    goto <bb 13>;
  else
    goto <bb 19>;

  <bb 13>:
  _1060 = (sizetype) verTotal_173;
  if (_1060 <= 1143914305352105984)
    goto <bb 15>;
  else
    goto <bb 17>;

  <bb 14>:
  __cxa_throw_bad_array_new_length ();

  <bb 15>:
  pretmp_1441 = _1060 * 8;
  ivtmp.1137_981 = (unsigned long) elems_178;
  _325 = (unsigned int) horElements_3;
  _1058 = _325 + 1;
  _1057 = (sizetype) _1058;
  _1056 = _1057 + 1;
  _1048 = _1056 * 8;
  _1029 = elems_178 + _1048;
  _1028 = (unsigned long) _1029;
  _1032 = (unsigned int) verElements_4;
  _90 = _1032 + 2;
  _1080 = (int) _90;
  _875 = (sizetype) _1080;
  _826 = _875 * 8;

  <bb 16>:
  # ivtmp.1137_904 = PHI <ivtmp.1137_981(15), ivtmp.1137_200(209)>
  _182 = operator new [] (pretmp_1441);
  if (_1060 != 0)
    goto <bb 18>;
  else
    goto <bb 209>;

  <bb 17>:
  __cxa_throw_bad_array_new_length ();

  <bb 18>:
  __builtin_memset (_182, 0, _826);
  goto <bb 209>;

  <bb 19>:
  if (hasRight_162 != 0)
    goto <bb 206>;
  else
    goto <bb 20>;

  <bb 20>:
  if (verTotal_173 > 0)
    goto <bb 21>;
  else
    goto <bb 43>;

  <bb 21>:
  pretmp_1434 = iftmp.5_176 + 18446744073709551608;
  pretmp_1435 = elems_178 + pretmp_1434;
  pretmp_1436 = *pretmp_1435;
  _877 = (unsigned int) verElements_4;
  niters.929_812 = _877 + 2;
  _833 = (unsigned long) pretmp_1436;
  _843 = _833 & 15;
  _857 = _843 >> 3;
  _858 = -_857;
  _402 = (unsigned int) _858;
  _1035 = _402 & 1;
  prolog_loop_niters.931_891 = MIN_EXPR <_1035, niters.929_812>;
  if (niters.929_812 <= 6)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:

  <bb 23>:
  # prologue_after_cost_adjust.932_252 = PHI <niters.929_812(22), prolog_loop_niters.931_891(21)>
  if (prologue_after_cost_adjust.932_252 == 0)
    goto <bb 31>;
  else
    goto <bb 24>;

  <bb 24>:
  *pretmp_1436 = 1.0e+0;
  if (prologue_after_cost_adjust.932_252 != 1)
    goto <bb 25>;
  else
    goto <bb 30>;

  <bb 25>:
  MEM[(double *)pretmp_1436 + 8B] = 1.0e+0;
  if (prologue_after_cost_adjust.932_252 != 2)
    goto <bb 26>;
  else
    goto <bb 30>;

  <bb 26>:
  MEM[(double *)pretmp_1436 + 16B] = 1.0e+0;
  if (prologue_after_cost_adjust.932_252 != 3)
    goto <bb 27>;
  else
    goto <bb 30>;

  <bb 27>:
  MEM[(double *)pretmp_1436 + 24B] = 1.0e+0;
  if (prologue_after_cost_adjust.932_252 != 4)
    goto <bb 28>;
  else
    goto <bb 30>;

  <bb 28>:
  MEM[(double *)pretmp_1436 + 32B] = 1.0e+0;
  if (prologue_after_cost_adjust.932_252 == 6)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  MEM[(double *)pretmp_1436 + 40B] = 1.0e+0;

  <bb 30>:
  # i_1062 = PHI <6(29), 1(24), 2(25), 3(26), 4(27), 5(28)>
  if (prologue_after_cost_adjust.932_252 == niters.929_812)
    goto <bb 42>;
  else
    goto <bb 31>;

  <bb 31>:
  # i_253 = PHI <i_1062(30), 0(23)>
  prolog_loop_adjusted_niters.933_235 = (sizetype) prologue_after_cost_adjust.932_252;
  niters.934_1077 = niters.929_812 - prologue_after_cost_adjust.932_252;
  _228 = niters.934_1077 + 4294967294;
  _229 = _228 >> 1;
  bnd.935_1076 = _229 + 1;
  ratio_mult_vf.936_230 = bnd.935_1076 << 1;
  _212 = _877 - prologue_after_cost_adjust.932_252;
  if (_212 == 4294967295)
    goto <bb 35>;
  else
    goto <bb 32>;

  <bb 32>:
  _903 = prolog_loop_adjusted_niters.933_235 * 8;
  vectp_pretmp.940_902 = pretmp_1436 + _903;
  ivtmp.1130_330 = (unsigned long) vectp_pretmp.940_902;

  <bb 33>:
  # ivtmp.1128_1046 = PHI <0(32), ivtmp.1128_323(33)>
  # ivtmp.1130_324 = PHI <ivtmp.1130_330(32), ivtmp.1130_326(33)>
  _327 = (void *) ivtmp.1130_324;
  MEM[base: _327, offset: 0B] = { 1.0e+0, 1.0e+0 };
  ivtmp.1128_323 = ivtmp.1128_1046 + 1;
  ivtmp.1130_326 = ivtmp.1130_324 + 16;
  if (ivtmp.1128_323 < bnd.935_1076)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 34>:
  _482 = (int) ratio_mult_vf.936_230;
  i_481 = i_253 + _482;
  if (ratio_mult_vf.936_230 == niters.934_1077)
    goto <bb 41>;
  else
    goto <bb 35>;

  <bb 35>:
  # i_430 = PHI <i_481(34), i_253(31)>
  _215 = (long unsigned int) i_430;
  _216 = _215 * 8;
  _217 = pretmp_1436 + _216;
  *_217 = 1.0e+0;
  goto <bb 41>;

  <bb 36>:
  iftmp.8_205 = _204 * 8;
  bufSR_207 = operator new [] (iftmp.8_205);
  _208 = _204 + 18446744073709551615;
  _209 = (long int) _208;
  if (_209 != -1)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 37>:
  __cxa_throw_bad_array_new_length ();

  <bb 38>:
  bufRR_214 = operator new [] (iftmp.8_205);
  if (_209 != -1)
    goto <bb 40>;
  else
    goto <bb 210>;

  <bb 39>:
  __builtin_memset (bufSR_207, 0, iftmp.8_205);
  goto <bb 38>;

  <bb 40>:
  __builtin_memset (bufRR_214, 0, iftmp.8_205);
  goto <bb 210>;

  <bb 41>:

  <bb 42>:

  <bb 43>:
  if (hasLeft_160 != 0)
    goto <bb 44>;
  else
    goto <bb 51>;

  <bb 44>:
  _222 = (sizetype) verElements_4;
  if (_222 <= 1143914305352105984)
    goto <bb 45>;
  else
    goto <bb 47>;

  <bb 45>:
  pretmp_1430 = _222 * 8;

  <bb 46>:
  # bufSR_1059 = PHI <bufSR_202(D)(45), bufSR_207(210)>
  # bufRR_26 = PHI <bufRR_203(D)(45), bufRR_214(210)>
  # _22 = PHI <_222(45), _204(210)>
  # prephitmp_1431 = PHI <pretmp_1430(45), iftmp.8_205(210)>
  bufSL_225 = operator new [] (prephitmp_1431);
  _226 = _22 + 18446744073709551615;
  _227 = (long int) _226;
  if (_227 != -1)
    goto <bb 49>;
  else
    goto <bb 48>;

  <bb 47>:
  __cxa_throw_bad_array_new_length ();

  <bb 48>:
  bufRL_232 = operator new [] (prephitmp_1431);
  if (_227 != -1)
    goto <bb 50>;
  else
    goto <bb 51>;

  <bb 49>:
  _575 = _22 * 8;
  __builtin_memset (bufSL_225, 0, _575);
  goto <bb 48>;

  <bb 50>:
  _767 = _22 * 8;
  __builtin_memset (bufRL_232, 0, _767);

  <bb 51>:
  # bufSL_5 = PHI <bufSL_220(D)(43), bufSL_225(50), bufSL_225(48), bufSL_220(D)(210)>
  # bufRL_6 = PHI <bufRL_221(D)(43), bufRL_232(50), bufRL_232(48), bufRL_221(D)(210)>
  # bufSR_74 = PHI <bufSR_202(D)(43), bufSR_1059(50), bufSR_1059(48), bufSR_207(210)>
  # bufRR_25 = PHI <bufRR_203(D)(43), bufRR_26(50), bufRR_26(48), bufRR_214(210)>
  if (hasUp_164 != 0)
    goto <bb 52>;
  else
    goto <bb 212>;

  <bb 52>:
  _240 = (sizetype) horElements_3;
  if (_240 <= 1143914305352105984)
    goto <bb 53>;
  else
    goto <bb 54>;

  <bb 53>:
  iftmp.20_241 = iftmp.5_176 - 16;
  bufSU_243 = operator new [] (iftmp.20_241);
  _244 = _240 + 18446744073709551615;
  _245 = (long int) _244;
  if (_245 != -1)
    goto <bb 56>;
  else
    goto <bb 55>;

  <bb 54>:
  __cxa_throw_bad_array_new_length ();

  <bb 55>:
  bufRU_250 = operator new [] (iftmp.20_241);
  if (_245 != -1)
    goto <bb 57>;
  else
    goto <bb 211>;

  <bb 56>:
  __builtin_memset (bufSU_243, 0, iftmp.20_241);
  goto <bb 55>;

  <bb 57>:
  __builtin_memset (bufRU_250, 0, iftmp.20_241);
  goto <bb 211>;

  <bb 58>:
  _258 = (sizetype) horElements_3;
  if (_258 <= 1143914305352105984)
    goto <bb 59>;
  else
    goto <bb 61>;

  <bb 59>:
  pretmp_1423 = iftmp.5_176 - 16;

  <bb 60>:
  # bufSU_1030 = PHI <bufSU_238(D)(59), bufSU_243(211)>
  # bufRU_23 = PHI <bufRU_239(D)(59), bufRU_250(211)>
  # _21 = PHI <_258(59), _240(211)>
  # prephitmp_1424 = PHI <pretmp_1423(59), iftmp.20_241(211)>
  bufSD_261 = operator new [] (prephitmp_1424);
  _262 = _21 + 18446744073709551615;
  _263 = (long int) _262;
  if (_263 != -1)
    goto <bb 63>;
  else
    goto <bb 62>;

  <bb 61>:
  __cxa_throw_bad_array_new_length ();

  <bb 62>:
  bufRD_268 = operator new [] (prephitmp_1424);
  if (_263 != -1)
    goto <bb 64>;
  else
    goto <bb 65>;

  <bb 63>:
  __builtin_memset (bufSD_261, 0, prephitmp_1424);
  goto <bb 62>;

  <bb 64>:
  __builtin_memset (bufRD_268, 0, prephitmp_1424);

  <bb 65>:
  if (hasUp_164 != 0)
    goto <bb 66>;
  else
    goto <bb 67>;

  <bb 66>:
  # bufSD_912 = PHI <bufSD_261(65), bufSD_256(D)(211)>
  # bufRD_911 = PHI <bufRD_268(65), bufRD_257(D)(211)>
  # bufSU_899 = PHI <bufSU_1030(65), bufSU_243(211)>
  # bufRU_867 = PHI <bufRU_23(65), bufRU_250(211)>
  destU.3_274 = destU;
  _158 = MEM[(const struct Comm *)&cartComm].D.49897.mpi_comm;
  _645 = MEM[(struct ompi_datatype_t * *)&BOOL + 8B];
  MPI_Recv (&isFirstElemRed, 1, _645, destU.3_274, 1, _158, 0B);

  <bb 67>:
  # bufSD_822 = PHI <bufSD_261(65), bufSD_912(66), bufSD_256(D)(212)>
  # bufRD_1031 = PHI <bufRD_268(65), bufRD_911(66), bufRD_257(D)(212)>
  # bufSU_24 = PHI <bufSU_1030(65), bufSU_899(66), bufSU_238(D)(212)>
  # bufRU_1042 = PHI <bufRU_23(65), bufRU_867(66), bufRU_239(D)(212)>
  if (hasLeft_160 != 0)
    goto <bb 69>;
  else
    goto <bb 68>;

  <bb 68>:
  _278 = ~hasLeft_160;
  if (hasUp_164 < _278)
    goto <bb 71>;
  else
    goto <bb 70>;

  <bb 69>:
  destL.1_276 = destL;
  _275 = MEM[(const struct Comm *)&cartComm].D.49897.mpi_comm;
  _646 = MEM[(struct ompi_datatype_t * *)&BOOL + 8B];
  MPI_Recv (&isFirstElemRed, 1, _646, destL.1_276, 1, _275, 0B);
  goto <bb 68>;

  <bb 70>:
  pretmp_1161 = isFirstElemRed;
  goto <bb 72>;

  <bb 71>:
  isFirstElemRed = 1;

  <bb 72>:
  # prephitmp_1162 = PHI <pretmp_1161(70), 1(71)>
  if (hasDown_166 != 0)
    goto <bb 73>;
  else
    goto <bb 74>;

  <bb 73>:
  verElements.32_280 = (unsigned int) verElements_4;
  _281 = verElements.32_280 & 1;
  _1114 = _281 ^ 1;
  _282 = (bool) _1114;
  isNextFirstElemRed.34_284 = _282 == prephitmp_1162;
  isNextFirstElemRed = isNextFirstElemRed.34_284;
  destD.4_286 = destD;
  _277 = MEM[(const struct Comm *)&cartComm].D.49897.mpi_comm;
  _647 = MEM[(struct ompi_datatype_t * *)&BOOL + 8B];
  MPI_Send (&isNextFirstElemRed, 1, _647, destD.4_286, 1, _277);
  isNextFirstElemRed ={v} {CLOBBER};
  pretmp_1445 = isFirstElemRed;

  <bb 74>:
  # prephitmp_1446 = PHI <prephitmp_1162(72), pretmp_1445(73)>
  if (hasRight_162 != 0)
    goto <bb 75>;
  else
    goto <bb 76>;

  <bb 75>:
  horElements.35_290 = (unsigned int) horElements_3;
  _291 = horElements.35_290 & 1;
  _1115 = _291 ^ 1;
  _292 = (bool) _1115;
  isNextFirstElemRed.36_294 = _292 == prephitmp_1446;
  isNextFirstElemRed = isNextFirstElemRed.36_294;
  destR.2_296 = destR;
  _287 = MEM[(const struct Comm *)&cartComm].D.49897.mpi_comm;
  _648 = MEM[(struct ompi_datatype_t * *)&BOOL + 8B];
  MPI_Send (&isNextFirstElemRed, 1, _648, destR.2_296, 1, _287);
  isNextFirstElemRed ={v} {CLOBBER};
  pretmp_1469 = isFirstElemRed;

  <bb 76>:
  # prephitmp_1470 = PHI <prephitmp_1446(74), pretmp_1469(75)>
  if (prephitmp_1470 != 0)
    goto <bb 77>;
  else
    goto <bb 78>;

  <bb 77>:
  _301 = verElements_4 % 2;
  isBottomLeftElementRed_302 = _301 == 1;
  _303 = horElements_3 % 2;
  isTopRightElementRed_304 = _303 == 1;
  goto <bb 79>;

  <bb 78>:
  verTotal.37_305 = (unsigned int) verTotal_173;
  _306 = verTotal.37_305 & 1;
  _1116 = _306 ^ 1;
  isBottomLeftElementRed_307 = (bool) _1116;
  horTotal.38_308 = (unsigned int) horTotal_174;
  _309 = horTotal.38_308 & 1;
  _1117 = _309 ^ 1;
  isTopRightElementRed_310 = (bool) _1117;

  <bb 79>:
  # i_57 = PHI <2(77), 1(78)>
  # isBottomLeftElementRed_133 = PHI <isBottomLeftElementRed_302(77), isBottomLeftElementRed_307(78)>
  # isTopRightElementRed_131 = PHI <isTopRightElementRed_304(77), isTopRightElementRed_310(78)>
  # i_129 = PHI <1(77), 2(78)>
  if (isBottomLeftElementRed_133 != 0)
    goto <bb 80>;
  else
    goto <bb 81>;

  <bb 80>:

  <bb 81>:
  # i_59 = PHI <2(80), 1(79)>
  # i_127 = PHI <1(80), 2(79)>
  if (isTopRightElementRed_131 != 0)
    goto <bb 83>;
  else
    goto <bb 82>;

  <bb 82>:

  <bb 83>:
  # j_61 = PHI <1(82), 2(81)>
  # j_272 = PHI <2(82), 1(81)>
  _297 = MEM[(const struct Comm *)&cartComm].D.49897.mpi_comm;
  MPI_Barrier (_297);
  if (_644 == 0)
    goto <bb 84>;
  else
    goto <bb 85>;

  <bb 84>:
  time_initial_311 = MPI_Wtime ();

  <bb 85>:
  # time_initial_1 = PHI <time_initial_312(D)(83), time_initial_311(84)>
  pretmp_1397 = (sizetype) verTotal_173;
  pretmp_1398 = pretmp_1397 * 8;
  pretmp_1401 = pretmp_1398 + 18446744073709551608;
  pretmp_1313 = pretmp_1398 + 18446744073709551600;
  _1089 = (unsigned int) verElements_4;
  _1088 = (unsigned int) j_272;
  _1085 = _1089 - _1088;
  _1084 = _1085 >> 1;
  _1075 = (sizetype) _1084;
  _1074 = _1075 + 1;
  _1061 = _1074 * 16;
  _336 = (sizetype) j_272;
  _338 = _336 * 8;
  _342 = bufRR_25 + _338;
  _1111 = (unsigned int) i_129;
  _1108 = _1089 - _1111;
  _1107 = _1108 >> 1;
  _1104 = (sizetype) _1107;
  _1103 = _1104 + 1;
  _1101 = _1103 * 16;
  _347 = (sizetype) i_129;
  _350 = _347 * 8;
  _354 = bufRL_6 + _350;
  _1124 = (unsigned int) horElements_3;
  _1122 = _1124 - _1111;
  _1121 = _1122 >> 1;
  _1120 = (sizetype) _1121;
  _1119 = _1120 + 1;
  _1118 = _1119 * 16;
  _370 = elems_178 + _350;
  _1125 = bufRU_1042 + _350;
  _1131 = (unsigned int) i_127;
  _1130 = _1124 - _1131;
  _1129 = _1130 >> 1;
  _1128 = (sizetype) _1129;
  _1127 = _1128 + 1;
  _1126 = _1127 * 16;
  _1459 = (sizetype) i_127;
  _1466 = _1459 * 8;
  _1462 = elems_178 + _1466;
  _1460 = bufRD_1031 + _1466;
  _1201 = bufSR_74 + _338;
  _1227 = bufSL_5 + _350;
  _1238 = bufSU_24 + _350;
  _1246 = bufSD_822 + _1466;
  _1252 = (unsigned int) j_61;
  _1251 = _1089 - _1252;
  _1250 = _1251 >> 1;
  _1249 = (sizetype) _1250;
  _1248 = _1249 + 1;
  _1247 = _1248 * 16;
  _454 = (sizetype) j_61;
  _456 = _454 * 8;
  _460 = bufRR_25 + _456;
  _1270 = (unsigned int) i_57;
  _1269 = _1089 - _1270;
  _1268 = _1269 >> 1;
  _1266 = (sizetype) _1268;
  _1265 = _1266 + 1;
  _1255 = _1265 * 16;
  _465 = (sizetype) i_57;
  _468 = _465 * 8;
  _472 = bufRL_6 + _468;
  _1278 = _1124 - _1270;
  _1277 = _1278 >> 1;
  _1276 = (sizetype) _1277;
  _1274 = _1276 + 1;
  _1273 = _1274 * 16;
  _488 = elems_178 + _468;
  _1281 = bufRU_1042 + _468;
  _1319 = (unsigned int) i_59;
  _1318 = _1124 - _1319;
  _1317 = _1318 >> 1;
  _1316 = (sizetype) _1317;
  _1315 = _1316 + 1;
  _1289 = _1315 * 16;
  _1448 = (sizetype) i_59;
  _1455 = _1448 * 8;
  _1451 = elems_178 + _1455;
  _1449 = bufRD_1031 + _1455;
  _1007 = bufSR_74 + _456;
  _496 = bufSL_5 + _468;
  _1054 = bufSU_24 + _468;
  _551 = bufSD_822 + _1455;
  goto <bb 88>;

  <bb 86>:
  diffSum = 0.0;

  <bb 87>:

  <bb 88>:
  # iteration_866 = PHI <iteration_313(87), 1(85)>
  # checkIter_1100 = PHI <checkIter_315(87), 0(85)>
  if (hasRight_162 != 0)
    goto <bb 89>;
  else
    goto <bb 93>;

  <bb 89>:
  MPI_Wait (&reqRR.mpi_request, 0B);
  if (verElements_4 >= j_272)
    goto <bb 91>;
  else
    goto <bb 90>;

  <bb 90>:
  destR.2_331 = destR;
  _319 = MEM[(const struct Comm *)&cartComm].D.49897.mpi_comm;
  _649 = MEM[(struct ompi_datatype_t * *)&DOUBLE + 8B];
  MPI_Irecv (bufRR_25, verElements_4, _649, destR.2_331, 2, _319, &request);
  request.59_650 = request;
  request ={v} {CLOBBER};
  reqRR.mpi_request = request.59_650;
  goto <bb 93>;

  <bb 91>:
  pretmp_1415 = iftmp.5_176 + 18446744073709551608;
  pretmp_1416 = elems_178 + pretmp_1415;
  pretmp_1417 = *pretmp_1416;
  _1099 = pretmp_1417 + _338;

  <bb 92>:
  # ivtmp.1121_1047 = PHI <0(91), ivtmp.1121_335(92)>
  _328 = MEM[base: _342, index: ivtmp.1121_1047, offset: -8B];
  MEM[base: _1099, index: ivtmp.1121_1047, offset: 0B] = _328;
  ivtmp.1121_335 = ivtmp.1121_1047 + 16;
  if (ivtmp.1121_335 != _1061)
    goto <bb 92>;
  else
    goto <bb 90>;

  <bb 93>:
  if (hasLeft_160 != 0)
    goto <bb 94>;
  else
    goto <bb 98>;

  <bb 94>:
  MPI_Wait (&reqRL.mpi_request, 0B);
  if (verElements_4 >= i_129)
    goto <bb 96>;
  else
    goto <bb 95>;

  <bb 95>:
  destL.1_343 = destL;
  _333 = MEM[(const struct Comm *)&cartComm].D.49897.mpi_comm;
  _332 = MEM[(struct ompi_datatype_t * *)&DOUBLE + 8B];
  MPI_Irecv (bufRL_6, verElements_4, _332, destL.1_343, 2, _333, &request);
  request.59_651 = request;
  request ={v} {CLOBBER};
  reqRL.mpi_request = request.59_651;
  goto <bb 98>;

  <bb 96>:
  pretmp_1409 = *elems_178;
  _1113 = pretmp_1409 + _350;

  <bb 97>:
  # ivtmp.1112_871 = PHI <0(96), ivtmp.1112_346(97)>
  _340 = MEM[base: _354, index: ivtmp.1112_871, offset: -8B];
  MEM[base: _1113, index: ivtmp.1112_871, offset: 0B] = _340;
  ivtmp.1112_346 = ivtmp.1112_871 + 16;
  if (ivtmp.1112_346 != _1101)
    goto <bb 97>;
  else
    goto <bb 95>;

  <bb 98>:
  if (hasUp_164 != 0)
    goto <bb 99>;
  else
    goto <bb 102>;

  <bb 99>:
  MPI_Wait (&reqRU.mpi_request, 0B);
  if (horElements_3 >= i_129)
    goto <bb 101>;
  else
    goto <bb 100>;

  <bb 100>:
  destU.3_355 = destU;
  _345 = MEM[(const struct Comm *)&cartComm].D.49897.mpi_comm;
  _344 = MEM[(struct ompi_datatype_t * *)&DOUBLE + 8B];
  MPI_Irecv (bufRU_1042, horElements_3, _344, destU.3_355, 2, _345, &request);
  request.59_652 = request;
  request ={v} {CLOBBER};
  reqRU.mpi_request = request.59_652;
  goto <bb 102>;

  <bb 101>:
  # ivtmp.1103_1109 = PHI <0(99), ivtmp.1103_358(101)>
  _349 = MEM[base: _370, index: ivtmp.1103_1109, offset: 0B];
  _352 = MEM[base: _1125, index: ivtmp.1103_1109, offset: -8B];
  *_349 = _352;
  ivtmp.1103_358 = ivtmp.1103_1109 + 16;
  if (ivtmp.1103_358 != _1118)
    goto <bb 101>;
  else
    goto <bb 100>;

  <bb 102>:
  if (hasDown_166 != 0)
    goto <bb 103>;
  else
    goto <bb 106>;

  <bb 103>:
  MPI_Wait (&reqRD.mpi_request, 0B);
  if (horElements_3 >= i_127)
    goto <bb 105>;
  else
    goto <bb 104>;

  <bb 104>:
  destD.4_371 = destD;
  _357 = MEM[(const struct Comm *)&cartComm].D.49897.mpi_comm;
  _356 = MEM[(struct ompi_datatype_t * *)&DOUBLE + 8B];
  MPI_Irecv (bufRD_1031, horElements_3, _356, destD.4_371, 2, _357, &request);
  request.59_653 = request;
  request ={v} {CLOBBER};
  reqRD.mpi_request = request.59_653;
  goto <bb 106>;

  <bb 105>:
  # ivtmp.1094_1458 = PHI <0(103), ivtmp.1094_1465(105)>
  _361 = MEM[base: _1462, index: ivtmp.1094_1458, offset: 0B];
  _365 = _361 + pretmp_1401;
  _368 = MEM[base: _1460, index: ivtmp.1094_1458, offset: -8B];
  *_365 = _368;
  ivtmp.1094_1465 = ivtmp.1094_1458 + 16;
  if (ivtmp.1094_1465 != _1126)
    goto <bb 105>;
  else
    goto <bb 104>;

  <bb 106>:
  if (horElements_3 > 0)
    goto <bb 108>;
  else
    goto <bb 107>;

  <bb 107>:
  if (hasRight_162 != 0)
    goto <bb 119>;
  else
    goto <bb 123>;

  <bb 108>:
  isFirstElemRed.33_373 = isFirstElemRed;
  _381 = elems_178 + 8;
  ivtmp.1083_851 = (unsigned long) _381;

  <bb 109>:
  # ivtmp.1082_865 = PHI <2(108), ivtmp.1082_836(112)>
  # ivtmp.1083_815 = PHI <ivtmp.1083_851(108), ivtmp.1083_885(112)>
  _1134 = ivtmp.1082_865 + 4294967295;
  _1133 = (int) _1134;
  if (isFirstElemRed.33_373 != 0)
    goto <bb 110>;
  else
    goto <bb 113>;

  <bb 110>:
  _374 = (int) ivtmp.1082_865;
  _375 = _374 & 1;
  j_376 = _375 + 1;

  <bb 111>:
  # j_800 = PHI <j_378(113), j_376(110)>
  # prephitmp_1347 = PHI <pretmp_1346(113), _374(110)>
  if (verElements_4 >= j_800)
    goto <bb 114>;
  else
    goto <bb 112>;

  <bb 112>:
  ivtmp.1082_836 = ivtmp.1082_865 + 1;
  ivtmp.1083_885 = ivtmp.1083_815 + 8;
  if (horElements_3 >= prephitmp_1347)
    goto <bb 109>;
  else
    goto <bb 107>;

  <bb 113>:
  _377 = _1133 & 1;
  j_378 = _377 + 1;
  pretmp_1346 = (int) ivtmp.1082_865;
  goto <bb 111>;

  <bb 114>:
  _386 = (long unsigned int) j_800;
  ivtmp.1076_385 = _386 * 8;
  ivtmp.1078_387 = ivtmp.1076_385 + 18446744073709551608;
  _1151 = _386 + 1;
  ivtmp.1079_1153 = _1151 * 8;
  _1148 = (unsigned int) j_800;
  _1147 = _1089 - _1148;
  _1146 = _1147 >> 1;
  _1145 = (long unsigned int) _1146;
  _1144 = _1145 * 2;
  _1351 = _386 + 2;
  _1142 = _1351 + _1144;
  _1141 = _1142 * 8;

  <bb 115>:
  # ivtmp.1076_932 = PHI <ivtmp.1076_385(114), ivtmp.1076_384(118)>
  # ivtmp.1078_394 = PHI <ivtmp.1078_387(114), ivtmp.1078_391(118)>
  # ivtmp.1079_1155 = PHI <ivtmp.1079_1153(114), ivtmp.1079_1154(118)>
  if (checkIter_1100 != 0)
    goto <bb 116>;
  else
    goto <bb 117>;

  <bb 116>:
  _1137 = (void *) ivtmp.1083_815;
  _835 = MEM[base: _1137, offset: 0B];
  _838 = _835 + ivtmp.1076_932;
  _839 = *_838;
  _840 = _839 * -8.99999999999999911182158029987476766109466552734375e-1;
  _844 = MEM[base: _1137, offset: -8B];
  _845 = _844 + ivtmp.1076_932;
  _846 = *_845;
  _848 = _835 + ivtmp.1078_394;
  _849 = *_848;
  _850 = _846 + _849;
  _853 = _835 + ivtmp.1079_1155;
  _854 = *_853;
  _855 = _850 + _854;
  _859 = MEM[base: _1137, offset: 8B];
  _860 = _859 + ivtmp.1076_932;
  _861 = *_860;
  _862 = _855 + _861;
  _863 = _862 * 4.7499999999999997779553950749686919152736663818359375e-1;
  _864 = _840 + _863;
  _819 = diffSum;
  _828 = _864 - _839;
  _829 = _828 * _828;
  _830 = _819 + _829;
  diffSum = _830;
  *_838 = _864;
  goto <bb 118>;

  <bb 117>:
  _1140 = (void *) ivtmp.1083_815;
  _814 = MEM[base: _1140, offset: 0B];
  _817 = _814 + ivtmp.1076_932;
  _873 = *_817;
  _874 = _873 * -8.99999999999999911182158029987476766109466552734375e-1;
  _878 = MEM[base: _1140, offset: -8B];
  _879 = _878 + ivtmp.1076_932;
  _880 = *_879;
  _882 = _814 + ivtmp.1078_394;
  _883 = *_882;
  _884 = _880 + _883;
  _887 = _814 + ivtmp.1079_1155;
  _888 = *_887;
  _889 = _884 + _888;
  _893 = MEM[base: _1140, offset: 8B];
  _894 = _893 + ivtmp.1076_932;
  _895 = *_894;
  _896 = _889 + _895;
  _897 = _896 * 4.7499999999999997779553950749686919152736663818359375e-1;
  _898 = _874 + _897;
  *_817 = _898;

  <bb 118>:
  ivtmp.1076_384 = ivtmp.1076_932 + 16;
  ivtmp.1078_391 = ivtmp.1078_394 + 16;
  ivtmp.1079_1154 = ivtmp.1079_1155 + 16;
  if (ivtmp.1076_384 != _1141)
    goto <bb 115>;
  else
    goto <bb 112>;

  <bb 119>:
  MPI_Wait (&reqSR.mpi_request, 0B);
  if (verElements_4 >= j_272)
    goto <bb 121>;
  else
    goto <bb 120>;

  <bb 120>:
  destR.2_395 = destR;
  _383 = MEM[(const struct Comm *)&cartComm].D.49897.mpi_comm;
  _372 = MEM[(struct ompi_datatype_t * *)&DOUBLE + 8B];
  MPI_Isend (bufSR_74, verElements_4, _372, destR.2_395, 2, _383, &request);
  request.60_654 = request;
  request ={v} {CLOBBER};
  reqSR.mpi_request = request.60_654;
  goto <bb 123>;

  <bb 121>:
  pretmp_1337 = iftmp.5_176 + 18446744073709551600;
  pretmp_1338 = elems_178 + pretmp_1337;
  pretmp_1339 = *pretmp_1338;
  _406 = pretmp_1339 + _338;

  <bb 122>:
  # ivtmp.1068_872 = PHI <0(121), ivtmp.1068_398(122)>
  _392 = MEM[base: _406, index: ivtmp.1068_872, offset: 0B];
  MEM[base: _1201, index: ivtmp.1068_872, offset: -8B] = _392;
  ivtmp.1068_398 = ivtmp.1068_872 + 16;
  if (ivtmp.1068_398 != _1061)
    goto <bb 122>;
  else
    goto <bb 120>;

  <bb 123>:
  if (hasLeft_160 != 0)
    goto <bb 124>;
  else
    goto <bb 128>;

  <bb 124>:
  MPI_Wait (&reqSL.mpi_request, 0B);
  if (verElements_4 >= i_129)
    goto <bb 126>;
  else
    goto <bb 125>;

  <bb 125>:
  destL.1_407 = destL;
  _397 = MEM[(const struct Comm *)&cartComm].D.49897.mpi_comm;
  _396 = MEM[(struct ompi_datatype_t * *)&DOUBLE + 8B];
  MPI_Isend (bufSL_5, verElements_4, _396, destL.1_407, 2, _397, &request);
  request.60_655 = request;
  request ={v} {CLOBBER};
  reqSL.mpi_request = request.60_655;
  goto <bb 128>;

  <bb 126>:
  pretmp_1331 = MEM[(double * *)elems_178 + 8B];
  _418 = pretmp_1331 + _350;

  <bb 127>:
  # ivtmp.1059_922 = PHI <0(126), ivtmp.1059_410(127)>
  _404 = MEM[base: _418, index: ivtmp.1059_922, offset: 0B];
  MEM[base: _1227, index: ivtmp.1059_922, offset: -8B] = _404;
  ivtmp.1059_410 = ivtmp.1059_922 + 16;
  if (ivtmp.1059_410 != _1101)
    goto <bb 127>;
  else
    goto <bb 125>;

  <bb 128>:
  if (hasUp_164 != 0)
    goto <bb 129>;
  else
    goto <bb 132>;

  <bb 129>:
  MPI_Wait (&reqSU.mpi_request, 0B);
  if (horElements_3 >= i_129)
    goto <bb 131>;
  else
    goto <bb 130>;

  <bb 130>:
  destU.3_419 = destU;
  _409 = MEM[(const struct Comm *)&cartComm].D.49897.mpi_comm;
  _408 = MEM[(struct ompi_datatype_t * *)&DOUBLE + 8B];
  MPI_Isend (bufSU_24, horElements_3, _408, destU.3_419, 2, _409, &request);
  request.60_656 = request;
  request ={v} {CLOBBER};
  reqSU.mpi_request = request.60_656;
  goto <bb 132>;

  <bb 131>:
  # ivtmp.1050_1078 = PHI <0(129), ivtmp.1050_422(131)>
  _415 = MEM[base: _370, index: ivtmp.1050_1078, offset: 0B];
  _416 = MEM[(double *)_415 + 8B];
  MEM[base: _1238, index: ivtmp.1050_1078, offset: -8B] = _416;
  ivtmp.1050_422 = ivtmp.1050_1078 + 16;
  if (ivtmp.1050_422 != _1118)
    goto <bb 131>;
  else
    goto <bb 130>;

  <bb 132>:
  if (hasDown_166 != 0)
    goto <bb 133>;
  else
    goto <bb 136>;

  <bb 133>:
  MPI_Wait (&reqSD.mpi_request, 0B);
  if (horElements_3 >= i_127)
    goto <bb 135>;
  else
    goto <bb 134>;

  <bb 134>:
  destD.4_435 = destD;
  _421 = MEM[(const struct Comm *)&cartComm].D.49897.mpi_comm;
  _420 = MEM[(struct ompi_datatype_t * *)&DOUBLE + 8B];
  MPI_Isend (bufSD_822, horElements_3, _420, destD.4_435, 2, _421, &request);
  request.60_657 = request;
  request ={v} {CLOBBER};
  reqSD.mpi_request = request.60_657;
  goto <bb 136>;

  <bb 135>:
  # ivtmp.1041_1079 = PHI <0(133), ivtmp.1041_441(135)>
  _427 = MEM[base: _1462, index: ivtmp.1041_1079, offset: 0B];
  _431 = _427 + pretmp_1313;
  _432 = *_431;
  MEM[base: _1246, index: ivtmp.1041_1079, offset: -8B] = _432;
  ivtmp.1041_441 = ivtmp.1041_1079 + 16;
  if (ivtmp.1041_441 != _1126)
    goto <bb 135>;
  else
    goto <bb 134>;

  <bb 136>:
  if (hasRight_162 != 0)
    goto <bb 137>;
  else
    goto <bb 141>;

  <bb 137>:
  MPI_Wait (&reqRR.mpi_request, 0B);
  if (verElements_4 >= j_61)
    goto <bb 139>;
  else
    goto <bb 138>;

  <bb 138>:
  destR.2_449 = destR;
  _437 = MEM[(const struct Comm *)&cartComm].D.49897.mpi_comm;
  _436 = MEM[(struct ompi_datatype_t * *)&DOUBLE + 8B];
  MPI_Irecv (bufRR_25, verElements_4, _436, destR.2_449, 2, _437, &request);
  request.59_658 = request;
  request ={v} {CLOBBER};
  reqRR.mpi_request = request.59_658;
  goto <bb 141>;

  <bb 139>:
  pretmp_1300 = iftmp.5_176 + 18446744073709551608;
  pretmp_1301 = elems_178 + pretmp_1300;
  pretmp_1302 = *pretmp_1301;
  _1254 = pretmp_1302 + _456;

  <bb 140>:
  # ivtmp.1032_820 = PHI <0(139), ivtmp.1032_453(140)>
  _446 = MEM[base: _460, index: ivtmp.1032_820, offset: -8B];
  MEM[base: _1254, index: ivtmp.1032_820, offset: 0B] = _446;
  ivtmp.1032_453 = ivtmp.1032_820 + 16;
  if (ivtmp.1032_453 != _1247)
    goto <bb 140>;
  else
    goto <bb 138>;

  <bb 141>:
  if (hasLeft_160 != 0)
    goto <bb 142>;
  else
    goto <bb 146>;

  <bb 142>:
  MPI_Wait (&reqRL.mpi_request, 0B);
  if (verElements_4 >= i_57)
    goto <bb 144>;
  else
    goto <bb 143>;

  <bb 143>:
  destL.1_461 = destL;
  _451 = MEM[(const struct Comm *)&cartComm].D.49897.mpi_comm;
  _450 = MEM[(struct ompi_datatype_t * *)&DOUBLE + 8B];
  MPI_Irecv (bufRL_6, verElements_4, _450, destL.1_461, 2, _451, &request);
  request.59_659 = request;
  request ={v} {CLOBBER};
  reqRL.mpi_request = request.59_659;
  goto <bb 146>;

  <bb 144>:
  pretmp_1294 = *elems_178;
  _1272 = pretmp_1294 + _468;

  <bb 145>:
  # ivtmp.1023_966 = PHI <0(144), ivtmp.1023_464(145)>
  _458 = MEM[base: _472, index: ivtmp.1023_966, offset: -8B];
  MEM[base: _1272, index: ivtmp.1023_966, offset: 0B] = _458;
  ivtmp.1023_464 = ivtmp.1023_966 + 16;
  if (ivtmp.1023_464 != _1255)
    goto <bb 145>;
  else
    goto <bb 143>;

  <bb 146>:
  if (hasUp_164 != 0)
    goto <bb 147>;
  else
    goto <bb 150>;

  <bb 147>:
  MPI_Wait (&reqRU.mpi_request, 0B);
  if (horElements_3 >= i_57)
    goto <bb 149>;
  else
    goto <bb 148>;

  <bb 148>:
  destU.3_473 = destU;
  _463 = MEM[(const struct Comm *)&cartComm].D.49897.mpi_comm;
  _462 = MEM[(struct ompi_datatype_t * *)&DOUBLE + 8B];
  MPI_Irecv (bufRU_1042, horElements_3, _462, destU.3_473, 2, _463, &request);
  request.59_660 = request;
  request ={v} {CLOBBER};
  reqRU.mpi_request = request.59_660;
  goto <bb 150>;

  <bb 149>:
  # ivtmp.1014_1064 = PHI <0(147), ivtmp.1014_476(149)>
  _467 = MEM[base: _488, index: ivtmp.1014_1064, offset: 0B];
  _470 = MEM[base: _1281, index: ivtmp.1014_1064, offset: -8B];
  *_467 = _470;
  ivtmp.1014_476 = ivtmp.1014_1064 + 16;
  if (ivtmp.1014_476 != _1273)
    goto <bb 149>;
  else
    goto <bb 148>;

  <bb 150>:
  if (hasDown_166 != 0)
    goto <bb 151>;
  else
    goto <bb 154>;

  <bb 151>:
  MPI_Wait (&reqRD.mpi_request, 0B);
  if (horElements_3 >= i_59)
    goto <bb 153>;
  else
    goto <bb 152>;

  <bb 152>:
  destD.4_489 = destD;
  _475 = MEM[(const struct Comm *)&cartComm].D.49897.mpi_comm;
  _474 = MEM[(struct ompi_datatype_t * *)&DOUBLE + 8B];
  MPI_Irecv (bufRD_1031, horElements_3, _474, destD.4_489, 2, _475, &request);
  request.59_661 = request;
  request ={v} {CLOBBER};
  reqRD.mpi_request = request.59_661;
  goto <bb 154>;

  <bb 153>:
  # ivtmp.1005_1447 = PHI <0(151), ivtmp.1005_1454(153)>
  _479 = MEM[base: _1451, index: ivtmp.1005_1447, offset: 0B];
  _483 = _479 + pretmp_1401;
  _486 = MEM[base: _1449, index: ivtmp.1005_1447, offset: -8B];
  *_483 = _486;
  ivtmp.1005_1454 = ivtmp.1005_1447 + 16;
  if (ivtmp.1005_1454 != _1289)
    goto <bb 153>;
  else
    goto <bb 152>;

  <bb 154>:
  if (horElements_3 > 0)
    goto <bb 156>;
  else
    goto <bb 155>;

  <bb 155>:
  if (checkIter_1100 != 0)
    goto <bb 168>;
  else
    goto <bb 167>;

  <bb 156>:
  isFirstElemRed.33_490 = isFirstElemRed;
  _498 = elems_178 + 8;
  ivtmp.994_942 = (unsigned long) _498;

  <bb 157>:
  # ivtmp.993_827 = PHI <2(156), ivtmp.993_927(160)>
  # ivtmp.994_906 = PHI <ivtmp.994_942(156), ivtmp.994_976(160)>
  _1326 = ivtmp.993_827 + 4294967295;
  _1325 = (int) _1326;
  if (isFirstElemRed.33_490 != 0)
    goto <bb 158>;
  else
    goto <bb 161>;

  <bb 158>:
  _491 = _1325 & 1;
  j_492 = _491 + 1;
  pretmp_1231 = (int) ivtmp.993_827;

  <bb 159>:
  # j_634 = PHI <j_495(161), j_492(158)>
  # prephitmp_1232 = PHI <_493(161), pretmp_1231(158)>
  if (verElements_4 >= j_634)
    goto <bb 162>;
  else
    goto <bb 160>;

  <bb 160>:
  ivtmp.993_927 = ivtmp.993_827 + 1;
  ivtmp.994_976 = ivtmp.994_906 + 8;
  if (horElements_3 >= prephitmp_1232)
    goto <bb 157>;
  else
    goto <bb 155>;

  <bb 161>:
  _493 = (int) ivtmp.993_827;
  _494 = _493 & 1;
  j_495 = _494 + 1;
  goto <bb 159>;

  <bb 162>:
  _507 = (long unsigned int) j_634;
  ivtmp.987_506 = _507 * 8;
  ivtmp.989_508 = ivtmp.987_506 + 18446744073709551608;
  _135 = _507 + 1;
  ivtmp.990_62 = _135 * 8;
  _1356 = (unsigned int) j_634;
  _1355 = _1089 - _1356;
  _1354 = _1355 >> 1;
  _1353 = (long unsigned int) _1354;
  _1352 = _1353 * 2;
  _37 = _507 + 2;
  _1350 = _37 + _1352;
  _1349 = _1350 * 8;

  <bb 163>:
  # ivtmp.987_956 = PHI <ivtmp.987_506(162), ivtmp.987_505(166)>
  # ivtmp.989_515 = PHI <ivtmp.989_508(162), ivtmp.989_512(166)>
  # ivtmp.990_786 = PHI <ivtmp.990_62(162), ivtmp.990_70(166)>
  if (checkIter_1100 != 0)
    goto <bb 164>;
  else
    goto <bb 165>;

  <bb 164>:
  _1342 = (void *) ivtmp.994_906;
  _926 = MEM[base: _1342, offset: 0B];
  _929 = _926 + ivtmp.987_956;
  _930 = *_929;
  _931 = _930 * -8.99999999999999911182158029987476766109466552734375e-1;
  _935 = MEM[base: _1342, offset: -8B];
  _936 = _935 + ivtmp.987_956;
  _937 = *_936;
  _939 = _926 + ivtmp.989_515;
  _940 = *_939;
  _941 = _937 + _940;
  _944 = _926 + ivtmp.990_786;
  _945 = *_944;
  _946 = _941 + _945;
  _950 = MEM[base: _1342, offset: 8B];
  _951 = _950 + ivtmp.987_956;
  _952 = *_951;
  _953 = _946 + _952;
  _954 = _953 * 4.7499999999999997779553950749686919152736663818359375e-1;
  _955 = _931 + _954;
  _910 = diffSum;
  _919 = _955 - _930;
  _920 = _919 * _919;
  _921 = _910 + _920;
  diffSum = _921;
  *_929 = _955;
  goto <bb 166>;

  <bb 165>:
  _1348 = (void *) ivtmp.994_906;
  _905 = MEM[base: _1348, offset: 0B];
  _908 = _905 + ivtmp.987_956;
  _964 = *_908;
  _965 = _964 * -8.99999999999999911182158029987476766109466552734375e-1;
  _969 = MEM[base: _1348, offset: -8B];
  _970 = _969 + ivtmp.987_956;
  _971 = *_970;
  _973 = _905 + ivtmp.989_515;
  _974 = *_973;
  _975 = _971 + _974;
  _978 = _905 + ivtmp.990_786;
  _979 = *_978;
  _980 = _975 + _979;
  _984 = MEM[base: _1348, offset: 8B];
  _985 = _984 + ivtmp.987_956;
  _986 = *_985;
  _987 = _980 + _986;
  _988 = _987 * 4.7499999999999997779553950749686919152736663818359375e-1;
  _989 = _965 + _988;
  *_908 = _989;

  <bb 166>:
  ivtmp.987_505 = ivtmp.987_956 + 16;
  ivtmp.989_512 = ivtmp.989_515 + 16;
  ivtmp.990_70 = ivtmp.990_786 + 16;
  if (ivtmp.987_505 != _1349)
    goto <bb 163>;
  else
    goto <bb 160>;

  <bb 167>:
  if (hasRight_162 != 0)
    goto <bb 169>;
  else
    goto <bb 173>;

  <bb 168>:
  _500 = MEM[(struct ompi_communicator_t * *)&cartComm + 8B];
  _501 = MEM[(struct ompi_op_t * *)&SUM + 8B];
  _502 = MEM[(struct ompi_datatype_t * *)&DOUBLE + 8B];
  MPI_Iallreduce (&diffSum, &allSum, 1, _502, _501, _500, &reqSum);
  goto <bb 167>;

  <bb 169>:
  MPI_Wait (&reqSR.mpi_request, 0B);
  if (verElements_4 >= j_61)
    goto <bb 171>;
  else
    goto <bb 170>;

  <bb 170>:
  destR.2_516 = destR;
  _504 = MEM[(const struct Comm *)&cartComm].D.49897.mpi_comm;
  _662 = MEM[(struct ompi_datatype_t * *)&DOUBLE + 8B];
  MPI_Isend (bufSR_74, verElements_4, _662, destR.2_516, 2, _504, &request);
  request.60_663 = request;
  request ={v} {CLOBBER};
  reqSR.mpi_request = request.60_663;
  goto <bb 173>;

  <bb 171>:
  pretmp_1218 = iftmp.5_176 + 18446744073709551600;
  pretmp_1219 = elems_178 + pretmp_1218;
  pretmp_1223 = *pretmp_1219;
  _527 = pretmp_1223 + _456;

  <bb 172>:
  # ivtmp.979_1036 = PHI <0(171), ivtmp.979_519(172)>
  _513 = MEM[base: _527, index: ivtmp.979_1036, offset: 0B];
  MEM[base: _1007, index: ivtmp.979_1036, offset: -8B] = _513;
  ivtmp.979_519 = ivtmp.979_1036 + 16;
  if (ivtmp.979_519 != _1247)
    goto <bb 172>;
  else
    goto <bb 170>;

  <bb 173>:
  if (hasLeft_160 != 0)
    goto <bb 174>;
  else
    goto <bb 178>;

  <bb 174>:
  MPI_Wait (&reqSL.mpi_request, 0B);
  if (verElements_4 >= i_57)
    goto <bb 176>;
  else
    goto <bb 175>;

  <bb 175>:
  destL.1_528 = destL;
  _518 = MEM[(const struct Comm *)&cartComm].D.49897.mpi_comm;
  _517 = MEM[(struct ompi_datatype_t * *)&DOUBLE + 8B];
  MPI_Isend (bufSL_5, verElements_4, _517, destL.1_528, 2, _518, &request);
  request.60_664 = request;
  request ={v} {CLOBBER};
  reqSL.mpi_request = request.60_664;
  goto <bb 178>;

  <bb 176>:
  pretmp_1215 = MEM[(double * *)elems_178 + 8B];
  _539 = pretmp_1215 + _468;

  <bb 177>:
  # ivtmp.970_1037 = PHI <0(176), ivtmp.970_531(177)>
  _525 = MEM[base: _539, index: ivtmp.970_1037, offset: 0B];
  MEM[base: _496, index: ivtmp.970_1037, offset: -8B] = _525;
  ivtmp.970_531 = ivtmp.970_1037 + 16;
  if (ivtmp.970_531 != _1255)
    goto <bb 177>;
  else
    goto <bb 175>;

  <bb 178>:
  if (hasUp_164 != 0)
    goto <bb 179>;
  else
    goto <bb 182>;

  <bb 179>:
  MPI_Wait (&reqSU.mpi_request, 0B);
  if (horElements_3 >= i_57)
    goto <bb 181>;
  else
    goto <bb 180>;

  <bb 180>:
  destU.3_540 = destU;
  _530 = MEM[(const struct Comm *)&cartComm].D.49897.mpi_comm;
  _529 = MEM[(struct ompi_datatype_t * *)&DOUBLE + 8B];
  MPI_Isend (bufSU_24, horElements_3, _529, destU.3_540, 2, _530, &request);
  request.60_665 = request;
  request ={v} {CLOBBER};
  reqSU.mpi_request = request.60_665;
  goto <bb 182>;

  <bb 181>:
  # ivtmp.961_808 = PHI <0(179), ivtmp.961_543(181)>
  _536 = MEM[base: _488, index: ivtmp.961_808, offset: 0B];
  _537 = MEM[(double *)_536 + 8B];
  MEM[base: _1054, index: ivtmp.961_808, offset: -8B] = _537;
  ivtmp.961_543 = ivtmp.961_808 + 16;
  if (ivtmp.961_543 != _1273)
    goto <bb 181>;
  else
    goto <bb 180>;

  <bb 182>:
  if (hasDown_166 != 0)
    goto <bb 183>;
  else
    goto <bb 186>;

  <bb 183>:
  MPI_Wait (&reqSD.mpi_request, 0B);
  if (horElements_3 >= i_59)
    goto <bb 185>;
  else
    goto <bb 184>;

  <bb 184>:
  destD.4_556 = destD;
  _542 = MEM[(const struct Comm *)&cartComm].D.49897.mpi_comm;
  _541 = MEM[(struct ompi_datatype_t * *)&DOUBLE + 8B];
  MPI_Isend (bufSD_822, horElements_3, _541, destD.4_556, 2, _542, &request);
  request.60_666 = request;
  request ={v} {CLOBBER};
  reqSD.mpi_request = request.60_666;
  goto <bb 186>;

  <bb 185>:
  # ivtmp.952_774 = PHI <0(183), ivtmp.952_996(185)>
  _548 = MEM[base: _1451, index: ivtmp.952_774, offset: 0B];
  _552 = _548 + pretmp_1313;
  _553 = *_552;
  MEM[base: _551, index: ivtmp.952_774, offset: -8B] = _553;
  ivtmp.952_996 = ivtmp.952_774 + 16;
  if (ivtmp.952_996 != _1289)
    goto <bb 185>;
  else
    goto <bb 184>;

  <bb 186>:
  if (checkIter_1100 != 0)
    goto <bb 188>;
  else
    goto <bb 187>;

  <bb 187>:
  diffSum ={v} {CLOBBER};
  allSum ={v} {CLOBBER};
  iteration_313 = iteration_866 + 1;
  _314 = iteration_313 % 50000;
  checkIter_315 = _314 == 0;
  if (checkIter_315 != 0)
    goto <bb 86>;
  else
    goto <bb 87>;

  <bb 188>:
  MPI_Wait (&reqSum, 0B);
  allSum.48_562 = allSum;
  _564 = sqrt (allSum.48_562);
  if (_564 < 1.00000000000000008180305391403130954586231382563710212708e-5)
    goto <bb 189>;
  else
    goto <bb 187>;

  <bb 189>:
  diffSum ={v} {CLOBBER};
  allSum ={v} {CLOBBER};
  if (_644 == 0)
    goto <bb 191>;
  else
    goto <bb 190>;

  <bb 190>:
  if (horTotal_174 > 0)
    goto <bb 193>;
  else
    goto <bb 192>;

  <bb 191>:
  _558 = MPI_Wtime ();
  _571 = _558 - time_initial_1;
  _572 = cout._vptr.basic_ostream;
  _570 = MEM[(long int *)_572 + -24B];
  _557 = (sizetype) _570;
  _667 = &cout + _557;
  __old_990 = _667->_M_flags;
  __a.50_991 = (int) __old_990;
  _992 = __a.50_991 & -261;
  _994 = _992 | 4;
  _995 = (_Ios_Fmtflags) _994;
  MEM[(_Ios_Fmtflags &)_667 + 24] = _995;
  MEM[(streamsize *)_667 + 8B] = 20;
  _573 = std::basic_ostream<char>::_M_insert<double> (&cout, _571);
  std::endl<char, std::char_traits<char> > (_573);
  goto <bb 190>;

  <bb 192>:
  operator delete [] (elems_178);
  if (hasRight_162 != 0)
    goto <bb 197>;
  else
    goto <bb 199>;

  <bb 193>:
  ivtmp.944_180 = (unsigned long) elems_178;
  _948 = _1124 + 1;
  _949 = (sizetype) _948;
  _509 = _949 + 1;
  _510 = _509 * 8;
  _511 = elems_178 + _510;
  _523 = (unsigned long) _511;

  <bb 194>:
  # ivtmp.944_869 = PHI <ivtmp.944_180(193), ivtmp.944_587(196)>
  _259 = (void *) ivtmp.944_869;
  _999 = MEM[base: _259, offset: 0B];
  if (_999 != 0B)
    goto <bb 195>;
  else
    goto <bb 196>;

  <bb 195>:
  operator delete [] (_999);

  <bb 196>:
  ivtmp.944_587 = ivtmp.944_869 + 8;
  if (ivtmp.944_587 != _523)
    goto <bb 194>;
  else
    goto <bb 192>;

  <bb 197>:
  operator delete [] (bufSR_74);
  operator delete [] (bufRR_25);
  if (hasLeft_160 != 0)
    goto <bb 198>;
  else
    goto <bb 200>;

  <bb 198>:
  operator delete [] (bufSL_5);
  operator delete [] (bufRL_6);
  goto <bb 207>;

  <bb 199>:
  if (hasLeft_160 != 0)
    goto <bb 198>;
  else
    goto <bb 207>;

  <bb 200>:
  if (hasUp_164 != 0)
    goto <bb 201>;
  else
    goto <bb 208>;

  <bb 201>:
  operator delete [] (bufSU_24);
  operator delete [] (bufRU_1042);
  goto <bb 208>;

  <bb 202>:
  if (hasDown_166 != 0)
    goto <bb 204>;
  else
    goto <bb 203>;

  <bb 203>:
  goto <bb 205>;

  <bb 204>:
  operator delete [] (bufSD_822);
  operator delete [] (bufRD_1031);

  <bb 205>:
  MPI_Finalize ();
  goto <bb 6>;

  <bb 206>:
  _204 = (sizetype) verElements_4;
  if (_204 <= 1143914305352105984)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 207>:
  if (hasUp_164 != 0)
    goto <bb 201>;
  else
    goto <bb 202>;

  <bb 208>:
  if (hasDown_166 != 0)
    goto <bb 204>;
  else
    goto <bb 203>;

  <bb 209>:
  _967 = (void *) ivtmp.1137_904;
  MEM[base: _967, offset: 0B] = _182;
  ivtmp.1137_200 = ivtmp.1137_904 + 8;
  if (ivtmp.1137_200 != _1028)
    goto <bb 16>;
  else
    goto <bb 19>;

  <bb 210>:
  if (hasLeft_160 != 0)
    goto <bb 46>;
  else
    goto <bb 51>;

  <bb 211>:
  if (hasDown_166 != 0)
    goto <bb 60>;
  else
    goto <bb 66>;

  <bb 212>:
  if (hasDown_166 != 0)
    goto <bb 58>;
  else
    goto <bb 67>;

}



;; Function (static initializers for ./main.cpp) (_GLOBAL__sub_I_main, funcdef_no=2981, decl_uid=55844, symbol_order=1690) (executed once)

(static initializers for ./main.cpp) ()
{
  <bb 2>:
  std::ios_base::Init::Init (&__ioinit);
  __cxa_atexit (__comp_dtor , &__ioinit, &__dso_handle); [tail call]
  return;

}


